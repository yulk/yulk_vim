!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	.\vim73\indent\dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	.\vim73\indent\dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> # :if !<sid>SearchNext("b")<bar>execute "norm! #"<bar>endif<cr>$/;"	m
$	.\vim73\tutor\tutor.cs	/^		$ (do konce øádku), atd.$/;"	m	signature:(do konce øádku)
$FAVOURITES	.\vimfiles\plugin\FavMenu.vim	/^        let $FAVOURITES=$HOME.'\/.vimfavourites'$/;"	v
$FAVOURITES	.\vimfiles\plugin\FavMenu.vim	/^        let $FAVOURITES=$VIM.'\\_vimfavourites'$/;"	v
$FENCVIEW_TELLENC	.\vimfiles\plugin\fencview.vim	/^    let $FENCVIEW_TELLENC ='tellenc'$/;"	v
$MANPAGER	.\vim73\ftplugin\man.vim	/^    let $MANPAGER = ""$/;"	v
$TUTOR	.\vim73\tutor\tutor.vim	/^  let $TUTOR = $VIMRUNTIME . s:tutorfile$/;"	v
$TUTOR	.\vim73\tutor\tutor.vim	/^  let $TUTOR = s:tutorxx$/;"	v
%	.\vim73\macros\less.vim	/^noremap <script> % %<SID>L$/;"	m
%	.\vim73\macros\matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	.\vim73\macros\matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	.\vim73\macros\matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
%	.\vimfiles\plugin\matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	.\vimfiles\plugin\matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	.\vimfiles\plugin\matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
&Edit.&Find\.\.\.		y:promptfind	.\vim73\menu.vim	/^  vnoremenu <silent>	 &Edit.&Find\\.\\.\\.		y:promptfind <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.&Paste<Tab>"+gP		<C-R>+	.\vim73\menu.vim	/^cnoremenu	 &Edit.&Paste<Tab>"+gP		<C-R>+$/;"	m
&Edit.Find\	.\vim73\menu.vim	/^  vnoremenu	 &Edit.Find\\ and\\ Rep&lace<Tab>:s	:s\/$/;"	m
&Edit.Find\	.\vim73\menu.vim	/^  vnoremenu <silent>	 &Edit.Find\\ and\\ Rep&lace\\.\\.\\. y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.Put\	.\vim73\menu.vim	/^inoremenu	 &Edit.Put\\ &After<Tab>]p	<C-O>]p$/;"	m
&Edit.Put\	.\vim73\menu.vim	/^inoremenu	 &Edit.Put\\ &Before<Tab>[p	<C-O>[p$/;"	m
&File.&Print			:hardcopy<CR>	.\vim73\menu.vim	/^  vnoremenu &File.&Print			:hardcopy<CR>$/;"	m
&File.&Print			:w	.\vim73\menu.vim	/^  vnoremenu &File.&Print			:w !lpr<CR>$/;"	m
&Tools.&Diff.&Get\	.\vim73\menu.vim	/^  vnoremenu &Tools.&Diff.&Get\\ Block		:diffget<CR>$/;"	m
&Tools.&Diff.&Put\	.\vim73\menu.vim	/^  vnoremenu &Tools.&Diff.&Put\\ Block		:diffput<CR>$/;"	m
&Tools.&Jump\	.\vim73\menu.vim	/^vnoremenu &Tools.&Jump\\ to\\ this\\ tag<Tab>g^]	g<C-]>$/;"	m
*	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> * :if !<sid>SearchNext()<bar>execute "norm! *"<bar>endif<cr>$/;"	m
,gq	.\vim73\macros\justify.vim	/^nmap ,gq :%s\/\\s\\+\/ \/g<CR>gq1G$/;"	m
,gq	.\vim73\macros\justify.vim	/^vmap ,gq :s\/\\s\\+\/ \/g<CR>gvgq$/;"	m
-	.\vimfiles\ftplugin\vimwiki.vim	/^noremap <silent><buffer> - :call vimwiki#RemoveHeaderLevel()<CR>$/;"	m
/	.\vim73\macros\less.vim	/^noremap <script> \/ H$:call <SID>Forward()<CR>\/$/;"	m
0	.\vim73\syntax\hitest.vim	/^normal 0$/;"	m
1.100	.\vim73\menu.vim	/^cnoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-U>call <SID>SelectAll()<CR>$/;"	m
1.100	.\vim73\menu.vim	/^inoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-O>:call <SID>SelectAll()<CR>$/;"	m
1.100	.\vim73\menu.vim	/^noremenu  <script> <silent> 1.100 PopUp.Select\\ &All	:<C-U>call <SID>SelectAll()<CR>$/;"	m
1.20	.\vim73\menu.vim	/^vnoremenu 1.20 PopUp.Cu&t		"+x$/;"	m
1.30	.\vim73\menu.vim	/^cnoremenu 1.30 PopUp.&Copy		<C-Y>$/;"	m
1.30	.\vim73\menu.vim	/^vnoremenu 1.30 PopUp.&Copy		"+y$/;"	m
1.40	.\vim73\menu.vim	/^cnoremenu 1.40 PopUp.&Paste		<C-R>+$/;"	m
1.40	.\vim73\menu.vim	/^nnoremenu 1.40 PopUp.&Paste		"+gP$/;"	m
1.50	.\vim73\menu.vim	/^vnoremenu 1.50 PopUp.&Delete		x$/;"	m
1.60	.\vim73\menu.vim	/^vnoremenu 1.60 PopUp.Select\\ Blockwise	<C-V>$/;"	m
1.70	.\vim73\menu.vim	/^  vnoremenu 1.70 ToolBar.Cut		"+x$/;"	m
1.70	.\vim73\menu.vim	/^cnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.70	.\vim73\menu.vim	/^inoremenu 1.70 PopUp.Select\\ &Word	<C-O>vaw$/;"	m
1.70	.\vim73\menu.vim	/^nnoremenu 1.70 PopUp.Select\\ &Word	vaw$/;"	m
1.70	.\vim73\menu.vim	/^onoremenu 1.70 PopUp.Select\\ &Word	aw$/;"	m
1.70	.\vim73\menu.vim	/^vnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.73	.\vim73\menu.vim	/^cnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.73	.\vim73\menu.vim	/^inoremenu 1.73 PopUp.Select\\ &Sentence	<C-O>vas$/;"	m
1.73	.\vim73\menu.vim	/^nnoremenu 1.73 PopUp.Select\\ &Sentence	vas$/;"	m
1.73	.\vim73\menu.vim	/^onoremenu 1.73 PopUp.Select\\ &Sentence	as$/;"	m
1.73	.\vim73\menu.vim	/^vnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.77	.\vim73\menu.vim	/^cnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.77	.\vim73\menu.vim	/^inoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-O>vap$/;"	m
1.77	.\vim73\menu.vim	/^nnoremenu 1.77 PopUp.Select\\ Pa&ragraph	vap$/;"	m
1.77	.\vim73\menu.vim	/^onoremenu 1.77 PopUp.Select\\ Pa&ragraph	ap$/;"	m
1.77	.\vim73\menu.vim	/^vnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.80	.\vim73\menu.vim	/^  cnoremenu 1.80 ToolBar.Copy		<C-Y>$/;"	m
1.80	.\vim73\menu.vim	/^  vnoremenu 1.80 ToolBar.Copy		"+y$/;"	m
1.80	.\vim73\menu.vim	/^cnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	.\vim73\menu.vim	/^inoremenu 1.80 PopUp.Select\\ &Line	<C-O>V$/;"	m
1.80	.\vim73\menu.vim	/^nnoremenu 1.80 PopUp.Select\\ &Line	V$/;"	m
1.80	.\vim73\menu.vim	/^onoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	.\vim73\menu.vim	/^vnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.90	.\vim73\menu.vim	/^  nnoremenu 1.90 ToolBar.Paste		"+gP$/;"	m
1.90	.\vim73\menu.vim	/^cnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	.\vim73\menu.vim	/^inoremenu 1.90 PopUp.Select\\ &Block	<C-O><C-V>$/;"	m
1.90	.\vim73\menu.vim	/^nnoremenu 1.90 PopUp.Select\\ &Block	<C-V>$/;"	m
1.90	.\vim73\menu.vim	/^onoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	.\vim73\menu.vim	/^vnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
20.340	.\vim73\menu.vim	/^vnoremenu 20.340 &Edit.Cu&t<Tab>"+x		"+x$/;"	m
20.350	.\vim73\menu.vim	/^cnoremenu 20.350 &Edit.&Copy<Tab>"+y		<C-Y>$/;"	m
20.350	.\vim73\menu.vim	/^vnoremenu 20.350 &Edit.&Copy<Tab>"+y		"+y$/;"	m
20.360	.\vim73\menu.vim	/^nnoremenu 20.360 &Edit.&Paste<Tab>"+gP		"+gP$/;"	m
20.370	.\vim73\menu.vim	/^nnoremenu 20.370 &Edit.Put\\ &Before<Tab>[p	[p$/;"	m
20.380	.\vim73\menu.vim	/^nnoremenu 20.380 &Edit.Put\\ &After<Tab>]p	]p$/;"	m
20.390	.\vim73\menu.vim	/^  vnoremenu 20.390 &Edit.&Delete<Tab>x		x$/;"	m
20.400	.\vim73\menu.vim	/^cnoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-U>call <SID>SelectAll()<CR>$/;"	m
20.400	.\vim73\menu.vim	/^inoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-O>:call <SID>SelectAll()<CR>$/;"	m
20.400	.\vim73\menu.vim	/^noremenu  <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	:<C-U>call <SID>SelectAll()<CR>$/;"	m
40.340.220	.\vim73\menu.vim	/^  vnoremenu 40.340.220 &Tools.&Folding.Create\\ &Fold<Tab>zf	zf$/;"	m
<	.\vim73\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	.\vim73\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	.\vim73\macros\less.vim	/^map < g$/;"	m
<2-LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  noremap <silent><buffer> <2-LeftMouse> :VimwikiFollowWord<CR>$/;"	m
<2-LeftMouse>	<2-RightMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <2-LeftMouse>	<2-RightMouse>$/;"	m
<2-RightMouse>	<2-LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <2-RightMouse>	<2-LeftMouse>$/;"	m
<3-LeftMouse>	<3-RightMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <3-LeftMouse>	<3-RightMouse>$/;"	m
<3-RightMouse>	<3-LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <3-RightMouse>	<3-LeftMouse>$/;"	m
<4-LeftMouse>	<4-RightMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <4-LeftMouse>	<4-RightMouse>$/;"	m
<4-RightMouse>	<4-LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <4-RightMouse>	<4-LeftMouse>$/;"	m
<<	.\vim73\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<A-Left>	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> <A-Left> :VimwikiTableMoveColumnLeft<CR>$/;"	m
<A-Right>	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> <A-Right> :VimwikiTableMoveColumnRight<CR>$/;"	m
<BS>	.\vim73\mswin.vim	/^vnoremap <BS> d$/;"	m
<BS>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <BS> <Plug>VimwikiGoBackWord$/;"	m
<C-2-LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  noremap <silent><buffer> <C-2-LeftMouse> <LeftMouse>:VimwikiVSplitWord<CR>$/;"	m
<C-@>	.\vimfiles\ftplugin\vimwiki.vim	/^    nmap <silent><buffer> <C-@> <Plug>VimwikiToggleListItem$/;"	m
<C-A>	.\vim73\mswin.vim	/^cnoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	.\vim73\mswin.vim	/^inoremap <C-A> <C-O>gg<C-O>gH<C-O>G$/;"	m
<C-A>	.\vim73\mswin.vim	/^noremap <C-A> gggH<C-O>G$/;"	m
<C-A>	.\vim73\mswin.vim	/^onoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-B>	.\vim73\macros\less.vim	/^map <C-B> b$/;"	m
<C-C>	.\vim73\mswin.vim	/^vnoremap <C-C> "+y$/;"	m
<C-CR>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <C-CR> <Plug>VimwikiVSplitWord$/;"	m
<C-D>	.\vim73\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-D>	.\vim73\macros\less.vim	/^map <C-D> d$/;"	m
<C-E>	.\vim73\macros\less.vim	/^map <C-E> <CR>$/;"	m
<C-F4>	.\vim73\mswin.vim	/^cnoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F4>	.\vim73\mswin.vim	/^inoremap <C-F4> <C-O><C-W>c$/;"	m
<C-F4>	.\vim73\mswin.vim	/^noremap <C-F4> <C-W>c$/;"	m
<C-F4>	.\vim73\mswin.vim	/^onoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F>	.\vim73\evim.vim	/^cnoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	.\vim73\evim.vim	/^inoremap <silent> <C-F> <C-O>:promptfind<CR>$/;"	m
<C-F>	.\vim73\evim.vim	/^noremap <silent> <C-F> :promptfind<CR>$/;"	m
<C-F>	.\vim73\evim.vim	/^onoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	.\vim73\evim.vim	/^vnoremap <silent> <C-F> y:promptfind <C-R>"<CR>$/;"	m
<C-F>	.\vim73\macros\less.vim	/^map <C-F> <Space>$/;"	m
<C-Insert>	.\vim73\mswin.vim	/^vnoremap <C-Insert> "+y$/;"	m
<C-J>	.\vim73\macros\less.vim	/^map <C-J> <CR>$/;"	m
<C-K>	.\vim73\macros\less.vim	/^map <C-K> k$/;"	m
<C-LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <buffer> <C-LeftMouse> <NOP>$/;"	m
<C-N>	.\vim73\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-N>	.\vim73\macros\less.vim	/^map <C-N> <CR>$/;"	m
<C-P>	.\vim73\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-P>	.\vim73\macros\less.vim	/^map <C-P> k$/;"	m
<C-Q>		<C-V>	.\vim73\mswin.vim	/^noremap <C-Q>		<C-V>$/;"	m
<C-R>	.\vim73\macros\less.vim	/^noremap <script> <C-R> <C-L><SID>L$/;"	m
<C-S>		:update<CR>	.\vim73\mswin.vim	/^noremap <C-S>		:update<CR>$/;"	m
<C-S>		<C-C>:update<CR>	.\vim73\mswin.vim	/^vnoremap <C-S>		<C-C>:update<CR>$/;"	m
<C-S>		<C-O>:update<CR>	.\vim73\mswin.vim	/^inoremap <C-S>		<C-O>:update<CR>$/;"	m
<C-Space>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <C-Space> <Plug>VimwikiToggleListItem$/;"	m
<C-Space>	.\vimfiles\ftplugin\vimwiki.vim	/^  vmap <silent><buffer> <C-Space> <Plug>VimwikiToggleListItem$/;"	m
<C-T>	.\vim73\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-T>	.\vim73\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_tagstack, -1)) <Bar> else <Bar> exe "norm! \\<Lt>C-T>" <Bar> endif<CR>$/;"	m
<C-Tab>	.\vim73\mswin.vim	/^cnoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-Tab>	.\vim73\mswin.vim	/^inoremap <C-Tab> <C-O><C-W>w$/;"	m
<C-Tab>	.\vim73\mswin.vim	/^noremap <C-Tab> <C-W>w$/;"	m
<C-Tab>	.\vim73\mswin.vim	/^onoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-U>	.\vim73\macros\less.vim	/^noremap <script> <C-U> <C-U><SID>L$/;"	m
<C-U>	.\vim73\vimrc_example.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-V>		"+gP	.\vim73\mswin.vim	/^map <C-V>		"+gP$/;"	m
<C-V>		<C-R>+	.\vim73\mswin.vim	/^cmap <C-V>		<C-R>+$/;"	m
<C-V>	.\vim73\macros\less.vim	/^map <C-V> <Space>$/;"	m
<C-W><C-F>	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	.\vim73\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W><C-]>	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	.\vim73\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>f	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g<C-]>	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g}	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	.\vim73\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X>	.\vim73\mswin.vim	/^vnoremap <C-X> "+x$/;"	m
<C-X><C-]>	.\vim73\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr>$/;"	m
<C-Y>	.\vim73\macros\less.vim	/^map <C-Y> k$/;"	m
<C-Y>	.\vim73\mswin.vim	/^inoremap <C-Y> <C-O><C-R>$/;"	m
<C-Y>	.\vim73\mswin.vim	/^noremap <C-Y> <C-R>$/;"	m
<C-Z>	.\vim73\mswin.vim	/^inoremap <C-Z> <C-O>u$/;"	m
<C-Z>	.\vim73\mswin.vim	/^noremap <C-Z> u$/;"	m
<C-]>	.\vim73\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	.\vim73\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	.\vim73\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	.\vim73\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-]>	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<CR>	.\vim73\macros\less.vim	/^noremap <script> <CR> <C-E><SID>L$/;"	m
<CR>	.\vim73\optwin.vim	/^inoremap <silent> <buffer> <CR> <Esc>:call <SID>CR()<CR>$/;"	m
<CR>	.\vim73\optwin.vim	/^noremap <silent> <buffer> <CR> <C-\\><C-N>:call <SID>CR()<CR>$/;"	m
<CR>	.\vimfiles\ftplugin\vimwiki.vim	/^  inoremap <expr> <buffer> <CR> vimwiki_tbl#kbd_cr()$/;"	m
<CR>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <CR> <Plug>VimwikiFollowWord$/;"	m
<CR>	.\vimfiles\ftplugin\vimwiki.vim	/^inoremap <buffer> <expr> <CR> vimwiki_lst#insertCR()$/;"	m
<D-S-s>	.\vim73\macmap.vim	/^cmap <special> <D-S-s> <C-C><D-s>$/;"	m
<D-S-s>	.\vim73\macmap.vim	/^imap <special> <D-S-s> <C-O><D-s>$/;"	m
<D-S-s>	.\vim73\macmap.vim	/^nnoremap <special> <D-S-s> :browse confirm saveas<CR>$/;"	m
<D-S-s>	.\vim73\macmap.vim	/^omap <special> <D-S-s> <Esc><D-s>$/;"	m
<D-S-s>	.\vim73\macmap.vim	/^vmap <special> <D-S-s> <Esc><D-s>gv$/;"	m
<D-a>	.\vim73\macmap.vim	/^cmap <special> <D-a> <C-C><D-a>$/;"	m
<D-a>	.\vim73\macmap.vim	/^imap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	.\vim73\macmap.vim	/^nnoremap <silent> <special> <D-a> :if &slm != ""<Bar>exe ":norm gggH<C-O>G"<Bar> else<Bar>exe ":norm ggVG"<Bar>endif<CR>$/;"	m
<D-a>	.\vim73\macmap.vim	/^omap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	.\vim73\macmap.vim	/^vmap <special> <D-a> <Esc><D-a>$/;"	m
<D-c>	.\vim73\macmap.vim	/^cnoremap <special> <D-c> <C-Y>$/;"	m
<D-c>	.\vim73\macmap.vim	/^vnoremap <special> <D-c> "+y$/;"	m
<D-f>	.\vim73\macmap.vim	/^cmap <special> <D-f> <C-C><D-f>$/;"	m
<D-f>	.\vim73\macmap.vim	/^imap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	.\vim73\macmap.vim	/^nnoremap <special> <D-f> \/$/;"	m
<D-f>	.\vim73\macmap.vim	/^omap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	.\vim73\macmap.vim	/^vmap <special> <D-f> <Esc><D-f>$/;"	m
<D-g>	.\vim73\macmap.vim	/^cmap <special> <D-g> <C-C><D-g>$/;"	m
<D-g>	.\vim73\macmap.vim	/^imap <special> <D-g> <C-O><D-g>$/;"	m
<D-g>	.\vim73\macmap.vim	/^nnoremap <special> <D-g> n$/;"	m
<D-g>	.\vim73\macmap.vim	/^omap <special> <D-g> <Esc><D-g>$/;"	m
<D-g>	.\vim73\macmap.vim	/^vmap <special> <D-g> <Esc><D-g>$/;"	m
<D-n>	.\vim73\macmap.vim	/^cmap <special> <D-n> <C-C><D-n>$/;"	m
<D-n>	.\vim73\macmap.vim	/^imap <special> <D-n> <C-O><D-n>$/;"	m
<D-n>	.\vim73\macmap.vim	/^nnoremap <special> <D-n> :confirm enew<CR>$/;"	m
<D-n>	.\vim73\macmap.vim	/^omap <special> <D-n> <Esc><D-n>$/;"	m
<D-n>	.\vim73\macmap.vim	/^vmap <special> <D-n> <Esc><D-n>gv$/;"	m
<D-o>	.\vim73\macmap.vim	/^cmap <special> <D-o> <C-C><D-o>$/;"	m
<D-o>	.\vim73\macmap.vim	/^imap <special> <D-o> <C-O><D-o>$/;"	m
<D-o>	.\vim73\macmap.vim	/^nnoremap <special> <D-o> :browse confirm e<CR>$/;"	m
<D-o>	.\vim73\macmap.vim	/^omap <special> <D-o> <Esc><D-o>$/;"	m
<D-o>	.\vim73\macmap.vim	/^vmap <special> <D-o> <Esc><D-o>gv$/;"	m
<D-s>	.\vim73\macmap.vim	/^cmap <special> <D-s> <C-C><D-s>$/;"	m
<D-s>	.\vim73\macmap.vim	/^imap <special> <D-s> <C-O><D-s>$/;"	m
<D-s>	.\vim73\macmap.vim	/^nnoremap <silent> <special> <D-s> :if expand("%") == ""<Bar>browse confirm w<Bar> else<Bar>confirm w<Bar>endif<CR>$/;"	m
<D-s>	.\vim73\macmap.vim	/^omap <special> <D-s> <Esc><D-s>$/;"	m
<D-s>	.\vim73\macmap.vim	/^vmap <special> <D-s> <Esc><D-s>gv$/;"	m
<D-v>	.\vim73\macmap.vim	/^cnoremap <special> <D-v> <C-R>+$/;"	m
<D-v>	.\vim73\macmap.vim	/^nnoremap <special> <D-v> "+gP$/;"	m
<D-w>	.\vim73\macmap.vim	/^cmap <special> <D-w> <C-C><D-w>$/;"	m
<D-w>	.\vim73\macmap.vim	/^imap <special> <D-w> <C-O><D-w>$/;"	m
<D-w>	.\vim73\macmap.vim	/^nnoremap <silent> <special> <D-w> :if winheight(2) < 0 <Bar> confirm enew <Bar> else <Bar> confirm close <Bar> endif<CR>$/;"	m
<D-w>	.\vim73\macmap.vim	/^omap <special> <D-w> <Esc><D-w>$/;"	m
<D-w>	.\vim73\macmap.vim	/^vmap <special> <D-w> <Esc><D-w>gv$/;"	m
<D-x>	.\vim73\macmap.vim	/^vnoremap <special> <D-x> "+x$/;"	m
<D-z>	.\vim73\macmap.vim	/^cmap <special> <D-z> <C-C><D-z>$/;"	m
<D-z>	.\vim73\macmap.vim	/^imap <special> <D-z> <C-O><D-z>$/;"	m
<D-z>	.\vim73\macmap.vim	/^nnoremap <special> <D-z> u$/;"	m
<D-z>	.\vim73\macmap.vim	/^omap <special> <D-z> <Esc><D-z>$/;"	m
<D-z>	.\vim73\macmap.vim	/^vmap <special> <D-z> <Esc><D-z>gv$/;"	m
<Down>	.\vim73\evim.vim	/^inoremap <silent> <Down> <C-R>=pumvisible() ? "\\<lt>Down>" : "\\<lt>C-O>gj"<CR>$/;"	m
<Down>	.\vim73\ftplugin\flexwiki.vim	/^      imap <buffer> <Down>   <C-o>gj$/;"	m
<Down>	.\vim73\ftplugin\flexwiki.vim	/^  nmap <buffer> <Down> gj$/;"	m
<Down>	.\vim73\ftplugin\flexwiki.vim	/^  vmap <buffer> <Down> gj$/;"	m
<Esc><	.\vim73\macros\less.vim	/^map <Esc>< g$/;"	m
<Esc><Space>	.\vim73\macros\less.vim	/^map <Esc><Space> <Space>$/;"	m
<Esc>>	.\vim73\macros\less.vim	/^map <Esc>> G$/;"	m
<Esc>v	.\vim73\macros\less.vim	/^map <Esc>v b$/;"	m
<F5>	.\vimfiles\plugin\checksyntax.vim	/^    noremap <F5> :CheckSyntax<cr>$/;"	m
<Leader>++	.\vimfiles\plugin\fontsize.vim	/^    nmap <silent> <Leader>++  <Plug>FontsizeInc$/;"	m
<Leader>--	.\vimfiles\plugin\fontsize.vim	/^    nmap <silent> <Leader>--  <Plug>FontsizeDec$/;"	m
<Leader>00	.\vimfiles\plugin\fontsize.vim	/^    nmap <silent> <Leader>00  <Plug>FontsizeDefault$/;"	m
<Leader>==	.\vimfiles\plugin\fontsize.vim	/^    nmap <silent> <Leader>==  <Plug>FontsizeBegin$/;"	m
<Leader>K	.\vim73\ftplugin\man.vim	/^  nmap <Leader>K :call <SID>PreGetPage(0)<CR>$/;"	m
<Leader>be	.\vimfiles\plugin\bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>be :BufExplorer<CR>$/;"	m
<Leader>bs	.\vimfiles\plugin\bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bs :BufExplorerHorizontalSplit<CR>$/;"	m
<Leader>bv	.\vimfiles\plugin\bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bv :BufExplorerVerticalSplit<CR>$/;"	m
<Leader>c	.\vimfiles\colors\ManShow.vim	/^	nnoremap <silent> <Leader>c :execute 'match Search \/\\%'.virtcol('.').'v\/'<CR>$/;"	m
<Leader>caL	.\vimfiles\plugin\calendar.vim	/^  nmap <unique> <Leader>caL <Plug>CalendarH$/;"	m
<Leader>cal	.\vimfiles\plugin\calendar.vim	/^  nmap <unique> <Leader>cal <Plug>CalendarV$/;"	m
<Leader>ih	.\vimfiles\plugin\a.vim	/^imap <Leader>ih <ESC>:IHS<CR>$/;"	m
<Leader>ih	.\vimfiles\plugin\a.vim	/^nmap <Leader>ih :IHS<CR>$/;"	m
<Leader>ihn	.\vimfiles\plugin\a.vim	/^imap <Leader>ihn <ESC>:IHN<CR>$/;"	m
<Leader>ihn	.\vimfiles\plugin\a.vim	/^nmap <Leader>ihn :IHN<CR>$/;"	m
<Leader>is	.\vimfiles\plugin\a.vim	/^imap <Leader>is <ESC>:IHS<CR>:A<CR>$/;"	m
<Leader>is	.\vimfiles\plugin\a.vim	/^nmap <Leader>is :IHS<CR>:A<CR>$/;"	m
<Leader>l	.\vimfiles\colors\ManShow.vim	/^	nnoremap <silent> <Leader>l ml:execute 'match Search \/\\%'.line('.').'l\/'<CR>$/;"	m
<Leader>o	.\vim73\ftplugin\changelog.vim	/^    noremap <buffer> <silent> <Leader>o <Esc>:call <SID>new_changelog_entry()<CR>$/;"	m
<Leader>o	.\vim73\ftplugin\changelog.vim	/^  nnoremap <silent> <Leader>o :call <SID>open_changelog()<CR>$/;"	m
<Leader>sE	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sE <Plug>DBExecSQLUnderTopXCursor$/;"	m
<Leader>sT	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>sT <Plug>DBSelectFromTopXTable$/;"	m
<Leader>sal	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sal :.,.DBVarRangeAssign<CR>$/;"	m
<Leader>sap	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sap :'<,'>DBVarRangeAssign<CR>$/;"	m
<Leader>sas	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sas :1,$DBVarRangeAssign<CR>$/;"	m
<Leader>sbp	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sbp <Plug>DBPromptForBufferParameters$/;"	m
<Leader>sdp	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>sdp <Plug>DBDescribeProcedure$/;"	m
<Leader>sdpa	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sdpa <Plug>DBDescribeProcedureAskName$/;"	m
<Leader>sdt	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>sdt <Plug>DBDescribeTable$/;"	m
<Leader>sdta	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sdta <Plug>DBDescribeTableAskName$/;"	m
<Leader>se	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>se <Plug>DBExecSQLUnderCursor$/;"	m
<Leader>sea	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sea :1,$DBExecRangeSQL<CR>$/;"	m
<Leader>sel	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sel :.,.DBExecRangeSQL<CR>$/;"	m
<Leader>sep	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>sep :'<,'>DBExecRangeSQL<CR>$/;"	m
<Leader>sh	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sh <Plug>DBHistory$/;"	m
<Leader>slc	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>slc <Plug>DBListColumn$/;"	m
<Leader>slp	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>slp <Plug>DBListProcedure$/;"	m
<Leader>slr	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <silent> <Leader>slr :DBListVar<CR>$/;"	m
<Leader>slt	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>slt <Plug>DBListTable$/;"	m
<Leader>slv	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>slv <Plug>DBListView$/;"	m
<Leader>so	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>so <Plug>DBOrientationToggle$/;"	m
<Leader>sq	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sq <Plug>DBExecSQL$/;"	m
<Leader>st	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>st <Plug>DBSelectFromTable$/;"	m
<Leader>sta	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>sta <Plug>DBSelectFromTableAskName$/;"	m
<Leader>stcl	.\vimfiles\plugin\dbext.vim	/^        nmap <unique> <Leader>stcl <Plug>DBListColumn$/;"	m
<Leader>stw	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <Leader>stw <Plug>DBSelectFromTableWithWhere$/;"	m
<Leader>w<Leader>t	.\vimfiles\plugin\vimwiki.vim	/^  map <silent><unique> <Leader>w<Leader>t <Plug>VimwikiTabMakeDiaryNote$/;"	m
<Leader>w<Leader>w	.\vimfiles\plugin\vimwiki.vim	/^  map <silent><unique> <Leader>w<Leader>w <Plug>VimwikiMakeDiaryNote$/;"	m
<Leader>wd	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <Leader>wd <Plug>VimwikiDeleteWord$/;"	m
<Leader>wr	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <Leader>wr <Plug>VimwikiRenameWord$/;"	m
<Leader>ws	.\vimfiles\plugin\vimwiki.vim	/^  map <silent><unique> <Leader>ws <Plug>VimwikiUISelect$/;"	m
<Leader>wt	.\vimfiles\plugin\vimwiki.vim	/^  map <silent><unique> <Leader>wt <Plug>VimwikiTabGoHome$/;"	m
<Leader>ww	.\vimfiles\plugin\vimwiki.vim	/^  map <silent><unique> <Leader>ww <Plug>VimwikiGoHome$/;"	m
<LeftDrag>	<RightDrag>	.\vim73\macros\swapmous.vim	/^noremap	 <LeftDrag>	<RightDrag>$/;"	m
<LeftDrag>	<RightDrag>	.\vim73\macros\swapmous.vim	/^noremap! <LeftDrag>	<RightDrag>$/;"	m
<LeftMouse>	<RightMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <LeftMouse>	<RightMouse>$/;"	m
<LeftMouse>	<RightMouse>	.\vim73\macros\swapmous.vim	/^noremap! <LeftMouse>	<RightMouse>$/;"	m
<LeftRelease>	<RightRelease>	.\vim73\macros\swapmous.vim	/^noremap	 <LeftRelease>	<RightRelease>$/;"	m
<LeftRelease>	<RightRelease>	.\vim73\macros\swapmous.vim	/^noremap! <LeftRelease>	<RightRelease>$/;"	m
<LocalLeader><LocalLeader>	.\vim73\ftplugin\abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	.\vim73\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	.\vim73\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	.\vim73\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	.\vim73\ftplugin\ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	.\vim73\ftplugin\ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>c	.\vim73\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	.\vim73\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	.\vim73\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	.\vim73\ftplugin\ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	.\vim73\ftplugin\spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>h	.\vim73\ftplugin\man.vim	/^      nmap <buffer> <LocalLeader>h <Plug>ManBS$/;"	m
<LocalLeader>q	.\vim73\ftplugin\mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	.\vim73\ftplugin\mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>s	.\vim73\ftplugin\ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	.\vim73\ftplugin\ocaml.vim	/^  map  <silent> <LocalLeader>t :call Ocaml_print_type("normal")<CR>$/;"	m
<LocalLeader>t	.\vim73\ftplugin\ocaml.vim	/^  vmap <silent> <LocalLeader>t :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<M-Space>	.\vim73\mswin.vim	/^  cnoremap <M-Space> <C-C>:simalt ~<CR>$/;"	m
<M-Space>	.\vim73\mswin.vim	/^  inoremap <M-Space> <C-O>:simalt ~<CR>$/;"	m
<M-Space>	.\vim73\mswin.vim	/^  noremap <M-Space> :simalt ~<CR>$/;"	m
<Plug>BUncomOff	.\vim73\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	.\vim73\ftplugin\ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	.\vim73\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	.\vim73\ftplugin\ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CalendarH	.\vimfiles\plugin\calendar.vim	/^nnoremap <silent> <Plug>CalendarH :cal Calendar(1)<CR>$/;"	m
<Plug>CalendarV	.\vimfiles\plugin\calendar.vim	/^nnoremap <silent> <Plug>CalendarV :cal Calendar(0)<CR>$/;"	m
<Plug>Coerce	.\vimfiles\plugin\abolish.vim	/^nnoremap <silent> <Plug>Coerce :<C-U>call <SID>coerce(nr2char(getchar()))<CR>$/;"	m
<Plug>Comment	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DBDescribeProcedure	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedure :DBDescribeProcedure<CR>$/;"	m
<Plug>DBDescribeProcedureAskName	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedureAskName$/;"	m
<Plug>DBDescribeTable	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTable :DBDescribeTable<CR>$/;"	m
<Plug>DBDescribeTableAskName	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTableAskName$/;"	m
<Plug>DBExecSQL	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQL :DBExecSQL<CR>$/;"	m
<Plug>DBExecSQLUnderCursor	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderCursor :DBExecSQLUnderCursor<CR>$/;"	m
<Plug>DBExecSQLUnderTopXCursor	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor :DBExecSQLUnderCursorTopX<CR>$/;"	m
<Plug>DBHistory	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBHistory :DBHistory<CR>$/;"	m
<Plug>DBListColumn	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBListColumn :DBListColumn<CR>$/;"	m
<Plug>DBListProcedure	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBListProcedure$/;"	m
<Plug>DBListTable	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBListTable$/;"	m
<Plug>DBListView	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBListView$/;"	m
<Plug>DBOrientationToggle	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBOrientationToggle :DBOrientationToggle<CR>$/;"	m
<Plug>DBPromptForBufferParameters	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBPromptForBufferParameters$/;"	m
<Plug>DBSelectFromTable	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTable :DBSelectFromTable<CR>$/;"	m
<Plug>DBSelectFromTableAskName	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableAskName$/;"	m
<Plug>DBSelectFromTableWithWhere	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableWithWhere$/;"	m
<Plug>DBSelectFromTopXTable	.\vimfiles\plugin\dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTopXTable :DBSelectFromTableTopX<CR>$/;"	m
<Plug>DeComment	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>FontsizeBegin	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeBegin       <SID>begin<SID>m_$/;"	m
<Plug>FontsizeDec	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeDec         <SID>dec<SID>m_$/;"	m
<Plug>FontsizeDefault	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeDefault     <SID>default<SID>m_$/;"	m
<Plug>FontsizeInc	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeInc         <SID>inc<SID>m_$/;"	m
<Plug>FontsizeQuit	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeQuit        <SID>quit$/;"	m
<Plug>FontsizeSetDefault	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <Plug>FontsizeSetDefault  <SID>setDefault<SID>m_$/;"	m
<Plug>LUncomOff	.\vim73\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	.\vim73\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	.\vim73\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	.\vim73\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>MailQuote	.\vim73\ftplugin\mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	.\vim73\ftplugin\mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>ManBS	.\vim73\ftplugin\man.vim	/^    nnoremap <buffer> <Plug>ManBS :%s\/.\\b\/\/g<CR>:setl nomod<CR>''$/;"	m
<Plug>MarkClear	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <Plug>MarkClear :call$/;"	m
<Plug>MarkRegex	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <Plug>MarkRegex :call$/;"	m
<Plug>MarkRegex	.\vimfiles\plugin\mark.vim	/^vnoremap <silent> <Plug>MarkRegex <c-\\><c-n>:call$/;"	m
<Plug>MarkSet	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <Plug>MarkSet   :call$/;"	m
<Plug>MarkSet	.\vimfiles\plugin\mark.vim	/^vnoremap <silent> <Plug>MarkSet   <c-\\><c-n>:call$/;"	m
<Plug>NetrwBrowseX	.\vim73\plugin\netrwPlugin.vim	/^ nno <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<cr>$/;"	m
<Plug>SpecChangelog	.\vim73\ftplugin\spec.vim	/^noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>SuperTabBackward	.\vimfiles\plugin\supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=<SID>SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	.\vimfiles\plugin\supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=<SID>SuperTab('n')<cr>$/;"	m
<Plug>Traditional	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VCSAdd	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSAdd :VCSAdd<CR>$/;"	m
<Plug>VCSAnnotate	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate<CR>$/;"	m
<Plug>VCSClearAndGotoOriginal	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!<CR>$/;"	m
<Plug>VCSCommit	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSCommit :VCSCommit<CR>$/;"	m
<Plug>VCSDelete	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSDelete :VCSDelete<CR>$/;"	m
<Plug>VCSDiff	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSDiff :VCSDiff<CR>$/;"	m
<Plug>VCSGotoOriginal	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal<CR>$/;"	m
<Plug>VCSInfo	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSInfo :VCSInfo<CR>$/;"	m
<Plug>VCSLock	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSLock :VCSLock<CR>$/;"	m
<Plug>VCSLog	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSLog :VCSLog<CR>$/;"	m
<Plug>VCSRevert	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSRevert :VCSRevert<CR>$/;"	m
<Plug>VCSReview	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSReview :VCSReview<CR>$/;"	m
<Plug>VCSSplitAnnotate	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!<CR>$/;"	m
<Plug>VCSStatus	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSStatus :VCSStatus<CR>$/;"	m
<Plug>VCSUnlock	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSUnlock :VCSUnlock<CR>$/;"	m
<Plug>VCSUpdate	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSUpdate :VCSUpdate<CR>$/;"	m
<Plug>VCSVimDiff	.\vimfiles\plugin\vcscommand.vim	/^nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff<CR>$/;"	m
<Plug>VimwikiGoHome	.\vimfiles\plugin\vimwiki.vim	/^noremap <unique><script> <Plug>VimwikiGoHome :VimwikiGoHome<CR>$/;"	m
<Plug>VimwikiMakeDiaryNote	.\vimfiles\plugin\vimwiki.vim	/^noremap <unique><script> <Plug>VimwikiMakeDiaryNote :VimwikiMakeDiaryNote<CR>$/;"	m
<Plug>VimwikiTabGoHome	.\vimfiles\plugin\vimwiki.vim	/^noremap <unique><script> <Plug>VimwikiTabGoHome :VimwikiTabGoHome<CR>$/;"	m
<Plug>VimwikiTabMakeDiaryNote	.\vimfiles\plugin\vimwiki.vim	/^noremap <unique><script> <Plug>VimwikiTabMakeDiaryNote$/;"	m
<Plug>VimwikiUISelect	.\vimfiles\plugin\vimwiki.vim	/^noremap <unique><script> <Plug>VimwikiUISelect :VimwikiUISelect<CR>$/;"	m
<Plug>VisualComment	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<RightDrag>	<LeftDrag>	.\vim73\macros\swapmous.vim	/^noremap	 <RightDrag>	<LeftDrag>$/;"	m
<RightDrag>	<LeftDrag>	.\vim73\macros\swapmous.vim	/^noremap! <RightDrag>	<LeftDrag>$/;"	m
<RightMouse>	<LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap	 <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>	<LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap! <RightMouse>	<LeftMouse>$/;"	m
<RightMouse><LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  noremap <silent><buffer> <RightMouse><LeftMouse> :VimwikiGoBackWord<CR>$/;"	m
<RightRelease>	<LeftRelease>	.\vim73\macros\swapmous.vim	/^noremap	 <RightRelease>	<LeftRelease>$/;"	m
<RightRelease>	<LeftRelease>	.\vim73\macros\swapmous.vim	/^noremap! <RightRelease>	<LeftRelease>$/;"	m
<S-2-LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  noremap <silent><buffer> <S-2-LeftMouse> <LeftMouse>:VimwikiSplitWord<CR>$/;"	m
<S-CR>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <S-CR> <Plug>VimwikiSplitWord$/;"	m
<S-CR>	.\vimfiles\ftplugin\vimwiki.vim	/^inoremap <buffer> <S-CR> <br \/><CR>$/;"	m
<S-Del>	.\vim73\mswin.vim	/^vnoremap <S-Del> "+x$/;"	m
<S-Down>	.\vim73\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Down>   <C-o>gj$/;"	m
<S-Insert>		"+gP	.\vim73\mswin.vim	/^map <S-Insert>		"+gP$/;"	m
<S-Insert>		<C-R>+	.\vim73\mswin.vim	/^cmap <S-Insert>		<C-R>+$/;"	m
<S-Insert>		<C-V>	.\vim73\mswin.vim	/^imap <S-Insert>		<C-V>$/;"	m
<S-Insert>		<C-V>	.\vim73\mswin.vim	/^vmap <S-Insert>		<C-V>$/;"	m
<S-Insert>	.\vim73\gvimrc_example.vim	/^map <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>	.\vim73\gvimrc_example.vim	/^map! <S-Insert> <MiddleMouse>$/;"	m
<S-LeftMouse>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <buffer> <S-LeftMouse> <NOP>$/;"	m
<S-TAB>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <S-TAB> <Plug>VimwikiPrevWord$/;"	m
<S-Tab>	.\vimfiles\ftplugin\vimwiki.vim	/^  inoremap <expr> <buffer> <S-Tab> vimwiki_tbl#kbd_shift_tab()$/;"	m
<S-Up>	.\vim73\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Up>     <C-o>gk$/;"	m
<SID>L	.\vim73\macros\less.vim	/^  noremap <SID>L L0:redraw<CR>:file<CR>$/;"	m
<SID>L	.\vim73\macros\less.vim	/^  noremap <SID>L Lg0:redraw<CR>:file<CR>$/;"	m
<SID>begin	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>begin       :call fontsize#begin()<CR>$/;"	m
<SID>dec	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>dec         :call fontsize#dec()<CR>$/;"	m
<SID>default	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>default     :call fontsize#default()<CR>$/;"	m
<SID>inc	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>inc         :call fontsize#inc()<CR>$/;"	m
<SID>m_	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_         <SID>quit$/;"	m
<SID>m_!	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_!        <SID>setDefault<SID>m_$/;"	m
<SID>m_+	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_+        <SID>inc<SID>m_$/;"	m
<SID>m_-	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_-        <SID>dec<SID>m_$/;"	m
<SID>m_0	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_0        <SID>default<SID>m_$/;"	m
<SID>m_<CR>	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_<CR>     <SID>quit$/;"	m
<SID>m_<SPACE>	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_<SPACE>  <SID>quit$/;"	m
<SID>m_=	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_=        <SID>inc<SID>m_$/;"	m
<SID>m_q	.\vimfiles\plugin\fontsize.vim	/^nmap <silent> <SID>m_q        <SID>quit$/;"	m
<SID>quit	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>quit        :call fontsize#quit()<CR>$/;"	m
<SID>setDefault	.\vimfiles\plugin\fontsize.vim	/^nnoremap <silent> <SID>setDefault  :call fontsize#setDefault()<CR>$/;"	m
<SID>xx	.\vimfiles\autoload\rails.vim	/^map <SID>xx <SID>xx$/;"	m
<SID>xx	.\vimfiles\plugin\taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<Space>	.\vim73\macros\less.vim	/^noremap <script> <Space> :call <SID>NextPage()<CR><SID>L$/;"	m
<Space>	.\vim73\optwin.vim	/^noremap <silent> <buffer> <Space> :call <SID>Space()<CR>$/;"	m
<TAB>	.\vimfiles\ftplugin\vimwiki.vim	/^  nmap <silent><buffer> <TAB> <Plug>VimwikiNextWord$/;"	m
<Tab>	.\vim73\ftplugin\cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	.\vimfiles\ftplugin\vimwiki.vim	/^  inoremap <expr> <buffer> <Tab> vimwiki_tbl#kbd_tab()$/;"	m
<Up>	.\vim73\evim.vim	/^inoremap <silent> <Up> <C-R>=pumvisible() ? "\\<lt>Up>" : "\\<lt>C-O>gk"<CR>$/;"	m
<Up>	.\vim73\ftplugin\flexwiki.vim	/^      imap <buffer> <Up>     <C-o>gk$/;"	m
<Up>	.\vim73\ftplugin\flexwiki.vim	/^  nmap <buffer> <Up>   gk$/;"	m
<Up>	.\vim73\ftplugin\flexwiki.vim	/^  vmap <buffer> <Up>   gk$/;"	m
<bs>	.\vim73\ftplugin\ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-F3>	.\vimfiles\plugin\nextCS.vim	/^nnoremap <c-F3> :call NextCS() <CR>$/;"	m
<c-F4>	.\vimfiles\plugin\nextCS.vim	/^nnoremap <c-F4> :call PreviousCS() <CR>$/;"	m
<c-]>	.\vim73\ftplugin\man.vim	/^    nnoremap <buffer> <c-]> :call <SID>PreGetPage(v:count)<CR>$/;"	m
<c-n>	.\vimfiles\plugin\supertab.vim	/^    imap <c-n> <Plug>SuperTabForward$/;"	m
<c-p>	.\vimfiles\plugin\supertab.vim	/^    imap <c-p> <Plug>SuperTabBackward$/;"	m
<c-r><tab>	.\vimfiles\after\plugin\snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-t>	.\vim73\ftplugin\man.vim	/^    nnoremap <buffer> <c-t> :call <SID>PopPage()<CR>$/;"	m
<c-x>	.\vimfiles\plugin\supertab.vim	/^  imap <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<char-166><char-201><char-161>	.\vim73\keymap\tamil_tscii.vim	/^no     <char-166><char-201><char-161>$/;"	m
<char-167><char-201><char-161>	.\vim73\keymap\tamil_tscii.vim	/^noo    <char-167><char-201><char-161>$/;"	m
<cr>	.\vimfiles\plugin\supertab.vim	/^      inoremap <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<d-cr>	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^nm <buffer> <silent> <d-cr> <d-r>$/;"	m
<f5>	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^ino <buffer> <silent> <f5> <c-x><c-o>$/;"	m
<leader>#	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <leader># :call <sid>SearchCurrentMark("b")<cr>$/;"	m
<leader>*	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <leader>* :call <sid>SearchCurrentMark()<cr>$/;"	m
<leader>/	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <leader>\/ :call <sid>SearchAnyMark()<cr>$/;"	m
<leader>?	.\vimfiles\plugin\mark.vim	/^nnoremap <silent> <leader>? :call <sid>SearchAnyMark("b")<cr>$/;"	m
<leader>m	.\vimfiles\plugin\mark.vim	/^  nmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>m	.\vimfiles\plugin\mark.vim	/^  vmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>n	.\vimfiles\plugin\mark.vim	/^  nmap <unique> <silent> <leader>n <Plug>MarkClear$/;"	m
<leader>r	.\vimfiles\plugin\mark.vim	/^  nmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<leader>r	.\vimfiles\plugin\mark.vim	/^  vmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<leader>sE	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sE    :GlobalSessionEliminateAll<CR>$/;"	m
<leader>sL	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sL    :NamedSessionLoadCwd<CR>$/;"	m
<leader>sN	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sN    :NamedSessionMakeCwd<CR>$/;"	m
<leader>sS	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sS    :GlobalSessionMakeLocal<CR>$/;"	m
<leader>se	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>se    :GlobalSessionEliminateCurrent<CR>$/;"	m
<leader>sl	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sl    :NamedSessionLoad<CR>$/;"	m
<leader>sm	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sm    :NamedSessionMenu<CR>$/;"	m
<leader>sn	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>sn    :NamedSessionMake<CR>$/;"	m
<leader>ss	.\vimfiles\plugin\gsession.vim	/^nnoremap <leader>ss    :GlobalSessionMake<CR>$/;"	m
<s-tab>	.\vimfiles\after\plugin\snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	.\vimfiles\after\plugin\snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
=	.\vimfiles\ftplugin\vimwiki.vim	/^noremap <silent><buffer> = :call vimwiki#AddHeaderLevel()<CR>$/;"	m
=	.\vimfiles\voom_addons\voom_info.vim	/^    nodesWithChildren = len([i for i in xrange(1,len(bnodes)+1) if voom.nodeHasChildren(VO,i)])$/;"	m
=	.\vimfiles\voom_addons\voom_info.vim	/^    nodesWithoutChildren = len([i for i in xrange(1,len(bnodes)+1) if not voom.nodeHasChildren(VO,i)])$/;"	m
>	.\vim73\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	.\vim73\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	.\vim73\macros\less.vim	/^map > G$/;"	m
>>	.\vim73\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	.\vim73\macros\less.vim	/^  noremap <script> ? H0:call <SID>Backward()<CR>?$/;"	m
?	.\vim73\macros\less.vim	/^  noremap <script> ? Hg0:call <SID>Backward()<CR>?$/;"	m
A	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang A call AlternateFile("n<bang>", <f-args>)$/;"	c
AD_CHARS	.\vimfiles\plugin\voom\voom_mode_rest.py	/^AD_CHARS = AD_CHARS.split()$/;"	v
AD_CHARS	.\vimfiles\plugin\voom\voom_mode_rest.py	/^AD_CHARS = {}.fromkeys(AD_CHARS)$/;"	v
AD_STYLES	.\vimfiles\plugin\voom\voom_mode_rest.py	/^AD_STYLES = AD_STYLES.split()$/;"	v
AN	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang AN call NextAlternate("<bang>")$/;"	c
AS	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang AS call AlternateFile("h<bang>", <f-args>)$/;"	c
AT	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang AT call AlternateFile("t<bang>", <f-args>)$/;"	c
AV	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang AV call AlternateFile("v<bang>", <f-args>)$/;"	c
Abaqus_ToggleComment	.\vim73\ftplugin\abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
Abbrev	.\vimfiles\autoload\rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
Abolish	.\vimfiles\plugin\abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	.\vimfiles\plugin\abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	.\vimfiles\plugin\abolish.vim	/^function! Abolished()$/;"	f
Accents	.\vim73\syntax\tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
AcpDisable	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AcpDisable call acp#disable()$/;"	c
AcpEnable	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AcpEnable  call acp#enable()$/;"	c
AcpLock	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AcpLock    call acp#lock()$/;"	c
AcpUnlock	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AcpUnlock  call acp#unlock()$/;"	c
Add	.\vim73\syntax\cucumber.vim	/^function! s:Add(name)$/;"	f
AddAlternateExtensionMapping	.\vimfiles\plugin\a.vim	/^function! <SID>AddAlternateExtensionMapping(extension, alternates)$/;"	f
AddBracketExpand	.\vimfiles\autoload\rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	.\vimfiles\autoload\rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddEntry	.\vim73\ftplugin\debchangelog.vim	/^function AddEntry()$/;"	f
AddFileInfo	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:AddFileInfo()$/;"	f
AddHeader	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:AddHeader()$/;"	f
AddParenExpand	.\vimfiles\autoload\rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	.\vimfiles\autoload\rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddSeparators	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:AddSeparators()$/;"	f
AddTabExpand	.\vimfiles\autoload\rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddThisFile	.\vimfiles\plugin\FavMenu.vim	/^fu! s:AddThisFile(name)$/;"	f
AddThisFilePermanent	.\vimfiles\plugin\FavMenu.vim	/^fu! s:AddThisFilePermanent(name)$/;"	f
AddToFavDir	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:AddToFavDir()$/;"	f
Agrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Agrep$/;"	c
AgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file AgrepAdd$/;"	c
Agrep_Path	.\vimfiles\plugin\grep.vim	/^    let Agrep_Path = 'agrep'$/;"	v
AllKeysEqual	.\vimfiles\autoload\man.vim	/^fun AllKeysEqual(list, key, item)$/;"	f
AllKeysEqual	.\vimfiles\autoload\objc\man.vim	/^fun AllKeysEqual(list, key, item)$/;"	f
Alter	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter             :call dbext#DB_execSql("alter " . <q-args>)$/;"	c
Alternate	.\vimfiles\autoload\rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
Alternate	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^com! -buffer -nargs=? Alternate call <SID>AlternateFile()$/;"	c
AlternateFile	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^fun s:AlternateFile()$/;"	f
AlternateFile	.\vimfiles\plugin\a.vim	/^function! AlternateFile(splitWindow, ...)$/;"	f
AlternateOpenFileUnderCursor	.\vimfiles\plugin\a.vim	/^function! AlternateOpenFileUnderCursor(splitWindow,...)$/;"	f
AlternateOpenNextFile	.\vimfiles\plugin\a.vim	/^function! AlternateOpenNextFile(bang)$/;"	f
AntSyntaxScript	.\vim73\syntax\ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
AnyMark	.\vimfiles\autoload\mark.vim	/^function! s:AnyMark()$/;"	f
AnyMark	.\vimfiles\plugin\mark.vim	/^function! s:AnyMark()$/;"	f
AppendPropCarefully	.\vim73\tools\xcmdsrv_client.c	/^AppendPropCarefully(dpy, window, property, value, length)$/;"	f	file:
AppendPropCarefully	.\vim73\tools\xcmdsrv_client.c	/^static int	AppendPropCarefully __ARGS((Display *display,$/;"	p	file:	signature:(Display *display, Window window, Atom property, char *value, int length)
Asyncer	.\vimfiles\autoload\l9\async.py	/^class Asyncer:$/;"	c	inherits:
AutoComplPopDisable	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AutoComplPopDisable AcpDisable$/;"	c
AutoComplPopEnable	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AutoComplPopEnable  AcpEnable$/;"	c
AutoComplPopLock	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AutoComplPopLock    AcpLock$/;"	c
AutoComplPopUnlock	.\vimfiles\plugin\acp.vim	/^command! -bar -narg=0 AutoComplPopUnlock  AcpUnlock$/;"	c
AutoLoadSession	.\vimfiles\plugin\gsession.vim	/^    augroup AutoLoadSession$/;"	a
BEActivateBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEActivateBuffer()$/;"	f
BEAddBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEAddBuffer()$/;"	f
BEBuildBufferList	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEBuildBufferList()$/;"	f
BECleanup	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BECleanup()$/;"	f
BEClose	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEClose()$/;"	f
BECreateHelp	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BECreateHelp()$/;"	f
BEDeactivateBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEDeactivateBuffer(remove)$/;"	f
BEDeleteBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEDeleteBuffer(bufNbr, mode)$/;"	f
BEDeleteBufferListing	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEDeleteBufferListing(buf)$/;"	f
BEDisplayBufferList	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEDisplayBufferList()$/;"	f
BEError	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEError(msg)$/;"	f
BEGetBufferInfo	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEGetBufferInfo(bufnr)$/;"	f
BEGetHelpStatus	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEGetHelpStatus()$/;"	f
BEGetTabNbr	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEGetTabNbr(bufNbr)$/;"	f
BEGetWinNbr	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEGetWinNbr(tabNbr, bufNbr)$/;"	f
BEIgnoreBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEIgnoreBuffer(buf)$/;"	f
BEInitialize	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEInitialize()$/;"	f
BEMRUCmp	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEMRUCmp(line1, line2)$/;"	f
BEMRUListShow	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEMRUListShow()$/;"	f
BEMRUPop	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEMRUPop(buf)$/;"	f
BEMRUPush	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEMRUPush(buf)$/;"	f
BEMapKeys	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEMapKeys()$/;"	f
BEReSortListing	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEReSortListing()$/;"	f
BERebuildBufferList	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BERebuildBufferList(...)$/;"	f
BERemoveBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BERemoveBuffer(type, mode) range$/;"	f
BEReset	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEReset()$/;"	f
BEReverseSortSelect	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEReverseSortSelect()$/;"	f
BESelectBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESelectBuffer(...)$/;"	f
BESet	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESet(var, default)$/;"	f
BESetup	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESetup()$/;"	f
BESetupSyntax	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESetupSyntax()$/;"	f
BESortListing	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESortListing()$/;"	f
BESortReverse	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESortReverse()$/;"	f
BESortSelect	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BESortSelect()$/;"	f
BETabEnter	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BETabEnter()$/;"	f
BEToggleFindActive	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleFindActive()$/;"	f
BEToggleHelp	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleHelp()$/;"	f
BEToggleOnlyOneTab	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleOnlyOneTab()$/;"	f
BEToggleShowRelativePath	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleShowRelativePath()$/;"	f
BEToggleShowTabBuffer	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleShowTabBuffer()$/;"	f
BEToggleShowUnlisted	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleShowUnlisted()$/;"	f
BEToggleSplitOutPathName	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEToggleSplitOutPathName()$/;"	f
BEUpdateHelpStatus	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEUpdateHelpStatus()$/;"	f
BEWarning	.\vimfiles\plugin\bufexplorer.vim	/^function! s:BEWarning(msg)$/;"	f
BLines	.\vimfiles\plugin\voom\voom_mode_python.py	/^class BLines:$/;"	c	inherits:
BMAdd	.\vim73\menu.vim	/^func! s:BMAdd()$/;"	f
BMFilename	.\vim73\menu.vim	/^func! s:BMFilename(name, num)$/;"	f
BMHash	.\vim73\menu.vim	/^func! s:BMHash(name)$/;"	f
BMHash2	.\vim73\menu.vim	/^func! s:BMHash2(name)$/;"	f
BMMunge	.\vim73\menu.vim	/^func! s:BMMunge(fname, bnum)$/;"	f
BMRemove	.\vim73\menu.vim	/^func! s:BMRemove()$/;"	f
BMShow	.\vim73\menu.vim	/^func! s:BMShow(...)$/;"	f
BMTruncName	.\vim73\menu.vim	/^func! s:BMTruncName(fname)$/;"	f
BODY_CHARS	.\vimfiles\plugin\voom\voom_mode_thevimoutliner.py	/^BODY_CHARS = {'|':0,}$/;"	v
BODY_CHARS	.\vimfiles\plugin\voom\voom_mode_vimoutliner.py	/^BODY_CHARS = {':':0, ';':0, '|':0, '<':0, '>':0,}$/;"	v
Backward	.\vim73\macros\less.vim	/^fun! s:Backward()$/;"	f
BackwardsSnippet	.\vimfiles\plugin\snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BasePath	.\vim73\tools\ccfilter.c	/^char	       BasePath[1024];$/;"	v
Bgrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* Bgrep$/;"	c
BgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* BgrepAdd$/;"	c
BinOptionG	.\vim73\optwin.vim	/^fun! <SID>BinOptionG(name, val)$/;"	f
BinOptionL	.\vim73\optwin.vim	/^fun! <SID>BinOptionL(name)$/;"	f
BinSearchToAppend	.\vimfiles\autoload\genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	.\vimfiles\autoload\genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
BindzoneCheck	.\vim73\filetype.vim	/^func! s:BindzoneCheck(default)$/;"	f
Block_pattern	.\vim73\ftplugin\ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
Bookmark.AddBookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.InvalidBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.compareTo	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.setPath	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
BottomExplorerWindow	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=0 BottomExplorerWindow :silent call <SID>GotoExplorerWindow('$')$/;"	c
BreakLine	.\vimfiles\syntax\googlecodewiki.vim	/^function s:BreakLine(line, textwidth)$/;"	f
BufAbbreviations	.\vimfiles\autoload\rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	.\vimfiles\autoload\rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	.\vimfiles\autoload\rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufExplorer	.\vimfiles\plugin\bufexplorer.vim	/^command! BufExplorer :call StartBufExplorer(has ("gui") ? "drop" : "hide edit")$/;"	c
BufExplorerHorizontalSplit	.\vimfiles\plugin\bufexplorer.vim	/^command! BufExplorerHorizontalSplit :call BufExplorerHorizontalSplit()$/;"	c
BufExplorerHorizontalSplit	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorerHorizontalSplit()$/;"	f
BufExplorerVerticalSplit	.\vimfiles\plugin\bufexplorer.vim	/^command! BufExplorerVerticalSplit :call BufExplorerVerticalSplit()$/;"	c
BufExplorerVerticalSplit	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorerVerticalSplit()$/;"	f
BufExplorerVimEnter	.\vimfiles\plugin\bufexplorer.vim	/^augroup BufExplorerVimEnter$/;"	a
BufExplorer_IsValid	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorer_IsValid()$/;"	f
BufExplorer_ReSize	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorer_ReSize()$/;"	f
BufExplorer_Refresh	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorer_Refresh()$/;"	f
BufExplorer_Start	.\vimfiles\plugin\bufexplorer.vim	/^function! BufExplorer_Start()$/;"	f
BufFinderCommands	.\vimfiles\autoload\rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufInit	.\vimfiles\plugin\rails.vim	/^function! s:BufInit(path)$/;"	f
BufLineAccessor	.\vimfiles\autoload\genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	.\vimfiles\autoload\genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	.\vimfiles\autoload\genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BufMappings	.\vimfiles\autoload\rails.vim	/^function! s:BufMappings()$/;"	f
BufModelines	.\vimfiles\autoload\rails.vim	/^function! s:BufModelines()$/;"	f
BufNavCommands	.\vimfiles\autoload\rails.vim	/^function! s:BufNavCommands()$/;"	f
BufScriptWrappers	.\vimfiles\autoload\rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	.\vimfiles\autoload\rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	.\vimfiles\autoload\rails.vim	/^function! s:BufSyntax()$/;"	f
BufferOrFileExists	.\vimfiles\plugin\a.vim	/^function! <SID>BufferOrFileExists(fileName)$/;"	f
BuildAnd	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^fun s:BuildAnd(command)$/;"	f
BuildCaseTable	.\vim73\tools\unicode.vim	/^func! BuildCaseTable(name, index)$/;"	f
BuildCombiningTable	.\vim73\tools\unicode.vim	/^func! BuildCombiningTable()$/;"	f
BuildFoldTable	.\vim73\tools\unicode.vim	/^func! BuildFoldTable()$/;"	f
BuildMethods	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^com! -buffer -nargs=? -complete=customlist,objc#method_builder#Completion BuildMethods call objc#method_builder#Build('<args>')$/;"	c
BuildTabStops	.\vimfiles\autoload\snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
BuildWidthTable	.\vim73\tools\unicode.vim	/^func! BuildWidthTable(pattern, tableName)$/;"	f
Builtin	.\vim73\syntax\reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Builtins.cd	.\vim73\macros\shellmenu.vim	/^imenu Builtins.cd cd$/;"	m
Builtins.echo	.\vim73\macros\shellmenu.vim	/^imenu Builtins.echo echo$/;"	m
Builtins.eval	.\vim73\macros\shellmenu.vim	/^imenu Builtins.eval eval$/;"	m
Builtins.exec	.\vim73\macros\shellmenu.vim	/^imenu Builtins.exec exec$/;"	m
Builtins.export	.\vim73\macros\shellmenu.vim	/^imenu Builtins.export export$/;"	m
Builtins.getopts	.\vim73\macros\shellmenu.vim	/^imenu Builtins.getopts getopts$/;"	m
Builtins.hash	.\vim73\macros\shellmenu.vim	/^imenu Builtins.hash hash$/;"	m
Builtins.newgrp	.\vim73\macros\shellmenu.vim	/^imenu Builtins.newgrp newgrp$/;"	m
Builtins.pwd	.\vim73\macros\shellmenu.vim	/^imenu Builtins.pwd pwd$/;"	m
Builtins.read	.\vim73\macros\shellmenu.vim	/^imenu Builtins.read read$/;"	m
Builtins.readonly	.\vim73\macros\shellmenu.vim	/^imenu Builtins.readonly readonly$/;"	m
Builtins.return	.\vim73\macros\shellmenu.vim	/^imenu Builtins.return return$/;"	m
Builtins.times	.\vim73\macros\shellmenu.vim	/^imenu Builtins.times times$/;"	m
Builtins.type	.\vim73\macros\shellmenu.vim	/^imenu Builtins.type type$/;"	m
Builtins.umask	.\vim73\macros\shellmenu.vim	/^imenu Builtins.umask umask$/;"	m
Builtins.wait	.\vim73\macros\shellmenu.vim	/^imenu Builtins.wait wait$/;"	m
Bundle	.\vimfiles\plugin\bundler.vim	/^function! s:Bundle(bang,arg)$/;"	f
BundleComplete	.\vimfiles\plugin\bundler.vim	/^function! s:BundleComplete(A,L,P)$/;"	f
CMakeGetIndent	.\vim73\indent\cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMPILER_AIX	.\vim73\tools\ccfilter.c	37;"	d	file:
COMPILER_ATT	.\vim73\tools\ccfilter.c	38;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	57;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	59;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	61;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	63;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	65;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	67;"	d	file:
COMPILER_DEFAULT	.\vim73\tools\ccfilter.c	69;"	d	file:
COMPILER_GCC	.\vim73\tools\ccfilter.c	36;"	d	file:
COMPILER_HPUX	.\vim73\tools\ccfilter.c	41;"	d	file:
COMPILER_IRIX	.\vim73\tools\ccfilter.c	39;"	d	file:
COMPILER_Names	.\vim73\tools\ccfilter.c	/^char	*COMPILER_Names[][2] =$/;"	v
COMPILER_QTY	.\vim73\tools\ccfilter.c	54;"	d	file:
COMPILER_SOLARIS	.\vim73\tools\ccfilter.c	40;"	d	file:
COMPILER_UNKNOWN	.\vim73\tools\ccfilter.c	35;"	d	file:
CR	.\vim73\optwin.vim	/^fun! <SID>CR()$/;"	f
CSH	.\vim73\filetype.vim	/^func! s:CSH()$/;"	f
CSS1	.\vim73\syntax\2html.vim	/^function! s:CSS1(id)$/;"	f
CVSEdit	.\vimfiles\plugin\vcscvs.vim	/^com! CVSEdit call s:CVSEdit()$/;"	c
CVSEdit	.\vimfiles\plugin\vcscvs.vim	/^function! s:CVSEdit()$/;"	f
CVSEditors	.\vimfiles\plugin\vcscvs.vim	/^com! CVSEditors call s:CVSEditors()$/;"	c
CVSEditors	.\vimfiles\plugin\vcscvs.vim	/^function! s:CVSEditors()$/;"	f
CVSUnedit	.\vimfiles\plugin\vcscvs.vim	/^com! CVSUnedit call s:CVSUnedit()$/;"	c
CVSUnedit	.\vimfiles\plugin\vcscvs.vim	/^function! s:CVSUnedit()$/;"	f
CVSWatch	.\vimfiles\plugin\vcscvs.vim	/^com! -nargs=1 CVSWatch call s:CVSWatch(<f-args>)$/;"	c
CVSWatch	.\vimfiles\plugin\vcscvs.vim	/^function! s:CVSWatch(onoff)$/;"	f
CVSWatchAdd	.\vimfiles\plugin\vcscvs.vim	/^com! CVSWatchAdd call s:CVSWatch('add')$/;"	c
CVSWatchOff	.\vimfiles\plugin\vcscvs.vim	/^com! CVSWatchOff call s:CVSWatch('off')$/;"	c
CVSWatchOn	.\vimfiles\plugin\vcscvs.vim	/^com! CVSWatchOn call s:CVSWatch('on')$/;"	c
CVSWatchRemove	.\vimfiles\plugin\vcscvs.vim	/^com! CVSWatchRemove call s:CVSWatch('remove')$/;"	c
CVSWatchers	.\vimfiles\plugin\vcscvs.vim	/^com! CVSWatchers call s:CVSWatchers()$/;"	c
CVSWatchers	.\vimfiles\plugin\vcscvs.vim	/^function! s:CVSWatchers()$/;"	f
CWD	.\vim73\tools\ccfilter.c	/^char	       CWD[1024];$/;"	v
Calendar	.\vimfiles\plugin\calendar.vim	/^command! -nargs=* Calendar  call Calendar(0,<f-args>)$/;"	c
Calendar	.\vimfiles\plugin\calendar.vim	/^function! Calendar(...)$/;"	f
CalendarBuildKeymap	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarBuildKeymap(dir, vyear, vmnth)$/;"	f
CalendarDiary	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarDiary(day, month, year, week, dir)$/;"	f
CalendarDoAction	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarDoAction(...)$/;"	f
CalendarH	.\vimfiles\plugin\calendar.vim	/^command! -nargs=* CalendarH call Calendar(1,<f-args>)$/;"	c
CalendarHelp	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarHelp()$/;"	f
CalendarMakeDir	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarMakeDir(dir)$/;"	f
CalendarSign	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarSign(day, month, year)$/;"	f
CalendarVar	.\vimfiles\plugin\calendar.vim	/^function! s:CalendarVar(var)$/;"	f
Call	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ Call              :call dbext#DB_execSql("call " . <q-args>)$/;"	c
CaptureKeyPresses	.\vimfiles\plugin\supertab.vim	/^function! s:CaptureKeyPresses()$/;"	f
CdlAsignment	.\vim73\indent\cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	.\vim73\indent\cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
CfHiLink	.\vim73\syntax\cf.vim	/^command -nargs=+ CfHiLink hi def link <args>$/;"	c
Char2Num	.\vimfiles\autoload\genutils.vim	/^function! s:Char2Num(c)$/;"	f
CheckModelineFileEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:CheckModelineFileEncoding() "{{{1$/;"	f
CheckStyleJlint	.\vimfiles\plugin\checksyntax.vim	/^function! CheckStyleJlint() "{{{3$/;"	f
CheckSyntax	.\vimfiles\plugin\checksyntax.vim	/^augroup CheckSyntax$/;"	a
CheckSyntax	.\vimfiles\plugin\checksyntax.vim	/^command! -bang -nargs=? CheckSyntax call CheckSyntax(1, "<bang>", <f-args>)$/;"	c
CheckSyntax	.\vimfiles\plugin\checksyntax.vim	/^function! CheckSyntax(manually, ...)$/;"	f
CheckSyntaxFail	.\vimfiles\plugin\checksyntax.vim	/^    fun! CheckSyntaxFail(manually)$/;"	f
CheckSyntaxSucceed	.\vimfiles\plugin\checksyntax.vim	/^    func! CheckSyntaxSucceed(manually)$/;"	f
CheckSyntax_prepare_ruby	.\vimfiles\plugin\checksyntax.vim	/^    fun! CheckSyntax_prepare_ruby()$/;"	f
CheckToIgnoreRightParan	.\vim73\indent\sqlanywhere.vim	/^function s:CheckToIgnoreRightParan( prev_lnum, num_levels )$/;"	f
Check_inp	.\vim73\filetype.vim	/^func! s:Check_inp()$/;"	f
ChgDir	.\vim73\autoload\vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChgDir	.\vim73\autoload\zip.vim	/^fun! s:ChgDir(newdir,errlvl,errmsg)$/;"	f
ChineseToggle	.\vimfiles\plugin\TransferChinese.vim	/^com! -range=% ChineseToggle        <line1>,<line2>call ChineseToggle()$/;"	c
ChineseToggle	.\vimfiles\plugin\TransferChinese.vim	/^function! ChineseToggle() range abort$/;"	f
Choose	.\vim73\macros\matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
Choose	.\vimfiles\plugin\matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseFrom	.\vimfiles\autoload\man.vim	/^fun s:ChooseFrom(references)$/;"	f
ChooseFrom	.\vimfiles\autoload\objc\man.vim	/^fun s:ChooseFrom(references)$/;"	f
ChooseSnippet	.\vimfiles\plugin\snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
ChooseValue	.\vimfiles\syntax\php.vim	/^function! s:ChooseValue(name, default)$/;"	f
Class1	.\vimfiles\voom_samples\test_outline.py	/^class Class1:$/;"	c	inherits:
Class2	.\vimfiles\voom_samples\test_outline.py	/^class Class2:$/;"	c	inherits:
CleanUp	.\vim73\macros\matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUp	.\vimfiles\plugin\matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUpHistory	.\vimfiles\plugin\winfileexplorer.vim	/^function! <SID>CleanUpHistory()$/;"	f
Clearstack	.\vim73\autoload\xmlcomplete.vim	/^function! s:Clearstack(sname)$/;"	f
Close	.\vimfiles\ftplugin\html_snip_helper.vim	/^fun! Close()$/;"	f
CloseAllResultBuffers	.\vimfiles\plugin\vcscommand.vim	/^function! s:CloseAllResultBuffers()$/;"	f
CloseBug	.\vim73\ftplugin\debchangelog.vim	/^function CloseBug()$/;"	f
CloseWindowsManager	.\vimfiles\plugin\winmanager.vim	/^function! <SID>CloseWindowsManager()$/;"	f
CobolIndentBlock	.\vim73\ftplugin\cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
CocoaDoc	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^com! -buffer -nargs=? -complete=custom,objc#man#Completion CocoaDoc call objc#man#ShowDoc('<args>')$/;"	c
Col	.\vim73\tools\ccfilter.c	/^unsigned long  Col;$/;"	v
Colorizer	.\vimfiles\plugin\colorizer.vim	/^   command Colorizer call s:UpdateAll()$/;"	c
ColourAssignment	.\vimfiles\colors\bandit.vim	/^				let ColourAssignment[s:group][s:Component] = 'Dark'.ColourAssignment[s:group][s:Component][5:]$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^				let ColourAssignment[s:group][s:Component] = s:MakeDarker(ColourAssignment[s:group][s:Component])$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['Comment']["GUIFG"]  = 'DarkGreen'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['Identifier']["GUIFG"] = 'Blue'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['LineNr']["GUIBG"]   = 'Grey'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['Normal']            = {"GUIFG": 'Black',     "GUIBG": 'White'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['StatusLine']["GUIBG"] = 'Black'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['StatusLine']["GUIFG"] = 'White'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['String']["CTERMFG"] = 'DarkYellow'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['String']["GUIFG"]   = '#663300'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^	let ColourAssignment['Union']["GUIFG"]    = 'DarkGrey'$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment = {}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Character']       = {"GUIFG": 'DarkYellow'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['ClassName']       = {"GUIFG": 'Purple',      "GUI":     'Bold',      "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Comment']         = {"GUIFG": '#00ff00',     "CTERMFG": 'Green',     "TERM":   'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Conditional']     = {"GUIFG": '#5555FF'} " if, then, else, endif, switch, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Constant']        = {"GUIFG": '#FFFF66',     "CTERMFG": 'Yellow',    "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Define']          = {"GUIFG": '#5555FF',     "GUI":     'Bold'} " preprocessor #define$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DefinedName']     = {"GUIFG": '#ee82ee',     "TERM":    'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Delimiter']       = {"GUIFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DoxygenComment']  = {"GUIFG": '#008800',     "CTERMFG": 'Green',     "TERM":  'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DoxygenKeyword']  = {"GUIFG": '#88ffdd',     "CTERMFG": 'Blue'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DoxygenLink']     = {"GUIFG": '#8888ff',     "CTERMFG": 'Blue'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DoxygenTable']    = {"GUIFG": '#00bb00',     "CTERMFG": 'Green',     "TERM":  'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['DoxygenTableLines']  = {"GUIFG": '#88ffdd',     "CTERMFG": 'Blue'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['EnumerationName'] = {"GUIFG": '#c000c0',     "GUI":     'Bold',      "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Enumerator']      = {"GUIFG": '#c000c0'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Error']           = {"GUIFG": 'White',       "GUIBG":   'Red',       "TERM":  'Reverse'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Exception']       = {"GUIFG": '#5555AA'} " try, catch, throw$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['FoldColumn']      = {"GUIFG": 'DarkBlue',    "GUIBG":   'Gray'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Function']        = {"GUIFG": '#007777',     "CTERMFG": 'Cyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['GlobalConstant']  = {"GUIFG": '#bbbb00',     "CTERMFG": 'Yellow',      "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['GlobalVariable']  = {"GUIFG": '#666600',     "CTERMFG": 'Cyan',      "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Identifier']      = {"GUIFG": 'Cyan',        "TERM":    'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Include']         = {"GUIFG": 'Blue',        "GUI":     'Bold'} " preprocessor #include$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Label']           = {"GUIFG": '#2222FF'} " case, default, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['LineNr']          = {"GUIFG": 'Purple',      "GUIBG": 'LightGrey'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['LintComment']     = {"GUIFG": '#00ff88',     "CTERMFG": 'Green',     "TERM":  'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['LocalVariable']   = {"GUIFG": '#aaa14c',     "CTERMFG": 'Cyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Macro']           = {"GUIFG": '#5555FF',     "GUI":     'Bold'} " same as Define$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['MatchParen']      = {"GUI":   'Underline,Bold', "GUIFG": "Yellow"}   " Highlighting of matching parentheses$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Member']          = {"GUIFG": 'DarkGrey',    "TERM":    'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Normal']          = {"GUIFG": 'White',       "GUIBG":  'Black'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Pmenu']           = {"GUIFG": '#442206',     "GUIBG": '#ffff77',     "CTERMFG": "Black",   "CTERMBG": "Yellow"}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['PreCondit']       = {"GUIFG": '#8888FF',     "GUI":     'Bold'} " preprocessor #if, #else, #endif, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['PreProc']         = {"GUIFG": 'Blue',        "GUI":     'Bold',      "TERM":  'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Repeat']          = {"GUIFG": '#8888FF'} " for, do, while, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Special']         = {"GUIFG": 'Red',         "TERM":    'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['SpecialChar']     = {"GUIFG": '#AA0000'}     " special character in a constant$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Statement']       = {"GUIFG": 'Blue',        "TERM":    'Bold'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['StatusLine']      = {"GUIFG": 'Black',       "GUIBG": 'LightGrey',   "GUI": "Bold"}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['StatusLineNC']    = {"GUIFG": 'Black',       "GUIBG": 'DarkGrey',    "GUI": "Bold"}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['StorageClass']    = {"GUIFG": '#ff4040'} " static, register, volatile, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['String']          = {"GUIFG": 'LightYellow'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Structure']       = {"GUIFG": '#ff8080'} " struct, union, enum, etc.$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Todo']            = {"GUIFG": 'Blue',        "GUIBG":   'Yellow',    "TERM":  'Standout'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Type']            = {"GUIFG": '#ff8000',     "TERM":    'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['Union']           = {"GUIFG": 'Grey',        "TERM":    'Underline'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['VertSplit']       = {"GUIFG": 'Black',       "GUIBG": "DarkGrey",    "GUI": "Bold"}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel0']        = {"GUIFG": 'DarkCyan',    "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel1']        = {"GUIFG": '#bfbf00',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel2']        = {"GUIFG": '#990033',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel3']        = {"GUIFG": '#334488',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel4']        = {"GUIFG": '#996622',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel5']        = {"GUIFG": '#ff2222',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel6']        = {"GUIFG": '#4444ff',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel7']        = {"GUIFG": '#ffff44',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel8']        = {"GUIFG": '#96cdcd',     "CTERMFG": 'DarkCyan'}$/;"	v
ColourAssignment	.\vimfiles\colors\bandit.vim	/^let ColourAssignment['hlLevel9']        = {"GUIFG": '#698b22',     "CTERMFG": 'DarkCyan'}$/;"	v
CommandEdit	.\vimfiles\autoload\rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandLineCompletion	.\vimfiles\plugin\supertab.vim	/^function! s:CommandLineCompletion()$/;"	f
CommandList	.\vimfiles\autoload\rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
Comment	.\vim73\ftplugin\cobol.vim	/^function! s:Comment(arg)$/;"	f
CompilerSet	.\vim73\compiler\ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\bcc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\checkstyle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\decada.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fortran_F.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fortran_cv.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fortran_elf90.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fortran_g77.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fortran_lf95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\fpc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\g95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\gfortran.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\gnat.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\hp_acc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\icc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\ifort.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\intel.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\irix5_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\irix5_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\javac.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\jikes.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\mips_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\mipspro_c89.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\mipspro_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\modelsim_vcom.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\neato.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\onsgmls.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\pbx.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\perl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\php.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\pyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\se.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\splint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\xmllint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vim73\compiler\xmlwf.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vimfiles\compiler\eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vimfiles\compiler\rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vimfiles\compiler\ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\vimfiles\compiler\rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:Complete(base, items)$/;"	f
Complete	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:Complete(base, items)$/;"	f
Complete	.\vimfiles\plugin\abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
CompleteCocoa	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:CompleteCocoa(word, file, ...)$/;"	f
CompleteCocoa	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:CompleteCocoa(word, file, ...)$/;"	f
CompleteFunction	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:CompleteFunction(word)$/;"	f
CompleteFunction	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:CompleteFunction(word)$/;"	f
CompleteMethod	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:CompleteMethod(lnum, col, method)$/;"	f
CompleteMethod	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:CompleteMethod(lnum, col, method)$/;"	f
Complete_cd	.\vimfiles\autoload\rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	.\vimfiles\autoload\rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	.\vimfiles\autoload\rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	.\vimfiles\autoload\rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	.\vimfiles\autoload\rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	.\vimfiles\autoload\rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	.\vimfiles\autoload\rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	.\vimfiles\autoload\rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_rake	.\vimfiles\autoload\rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_related	.\vimfiles\autoload\rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	.\vimfiles\autoload\rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	.\vimfiles\autoload\rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	.\vimfiles\autoload\rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_set	.\vimfiles\autoload\rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
CompletionReset	.\vimfiles\plugin\supertab.vim	/^function! s:CompletionReset(char)$/;"	f
Component	.\vim73\tools\shtags.pl	/^Component:	$id[1]$/;"	l
ComposePath	.\vim73\autoload\netrw.vim	/^fun! s:ComposePath(base,subdir)$/;"	f
ContextCompletion	.\vimfiles\plugin\supertab.vim	/^function! s:ContextCompletion()$/;"	f
ContextDiscover	.\vimfiles\plugin\supertab.vim	/^function! s:ContextDiscover()$/;"	f
ContextText	.\vimfiles\plugin\supertab.vim	/^function! s:ContextText()$/;"	f
ConvertFunction	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun s:ConvertFunction(function)$/;"	f
ConvertFunction	.\vimfiles\autoload\pum_snippet.vim	/^fun s:ConvertFunction(function)$/;"	f
ConvertHtmlEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:ConvertHtmlEncoding(enc) "{{{1$/;"	f
ConvertMethod	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun s:ConvertMethod(method)$/;"	f
ConvertMethod	.\vimfiles\autoload\pum_snippet.vim	/^fun s:ConvertMethod(method)$/;"	f
Count	.\vim73\macros\matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	.\vimfiles\autoload\snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
Count	.\vimfiles\plugin\matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountUnbalancedParan	.\vim73\indent\sqlanywhere.vim	/^function s:CountUnbalancedParan( line, paran_to_check )$/;"	f
CountWrapper	.\vim73\ftplugin\vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
Create	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ Create            :call dbext#DB_execSql("create " . <q-args>)$/;"	c
CreateMapping	.\vimfiles\plugin\vcscommand.vim	/^function! s:CreateMapping(shortcut, expansion, display)$/;"	f
CreateMenus	.\vimfiles\plugin\rails.vim	/^function! s:CreateMenus() abort$/;"	f
CreateMethodList	.\vimfiles\autoload\method_list.vim	/^fun s:CreateMethodList()$/;"	f
CreateMethodList	.\vimfiles\autoload\objc\method_list.vim	/^fun s:CreateMethodList()$/;"	f
CucumberComplete	.\vim73\ftplugin\cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentMark	.\vimfiles\plugin\mark.vim	/^function! s:CurrentMark()$/;"	f
CustomComplete	.\vimfiles\autoload\rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
Cycle	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
Cycle	.\vimfiles\autoload\mark.vim	/^function! s:Cycle( ... )$/;"	f
Cycle	.\vimfiles\ftplugin\gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DBCheckModeline	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBCheckModeline$/;"	c
DBCommit	.\vimfiles\plugin\dbext.vim	/^command! -nargs=0 DBCommit          :call dbext#DB_commit()$/;"	c
DBCompleteProcedures	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 -bang DBCompleteProcedures$/;"	c
DBCompleteTables	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 -bang DBCompleteTables$/;"	c
DBCompleteViews	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 -bang DBCompleteViews$/;"	c
DBConnect	.\vimfiles\plugin\dbext.vim	/^command! -nargs=0 DBConnect         :call dbext#DB_connect()$/;"	c
DBDescribeProcedure	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=* -range DBDescribeProcedure$/;"	c
DBDescribeProcedureAskName	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBDescribeProcedureAskName$/;"	c
DBDescribeTable	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=* -range DBDescribeTable$/;"	c
DBDescribeTableAskName	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBDescribeTableAskName$/;"	c
DBDisconnect	.\vimfiles\plugin\dbext.vim	/^command! -nargs=* DBDisconnect      :call dbext#DB_disconnect(<q-args>)$/;"	c
DBDisconnectAll	.\vimfiles\plugin\dbext.vim	/^command! -nargs=* DBDisconnectAll   :call dbext#DB_disconnectAll()$/;"	c
DBExecRangeSQL	.\vimfiles\plugin\dbext.vim	/^command! -range -nargs=0 DBExecRangeSQL <line1>,<line2>call dbext#DB_execRangeSql()$/;"	c
DBExecSQL	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBExecSQL$/;"	c
DBExecSQL	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ DBExecSQL         :call dbext#DB_execSql(<q-args>)$/;"	c
DBExecSQLTopX	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ DBExecSQLTopX     :call dbext#DB_execSqlTopX(<q-args>)$/;"	c
DBExecSQLUnderCursor	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursor$/;"	c
DBExecSQLUnderCursorTopX	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursorTopX$/;"	c
DBExecVisualSQL	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQL :call dbext#DB_execSql(DB_getVisualBlock())$/;"	c
DBExecVisualSQLTopX	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQLTopX :call dbext#DB_execSqlTopX(DB_getVisualBlock())$/;"	c
DBGetOption	.\vimfiles\plugin\dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption :echo DB_listOption(<q-args>)$/;"	c
DBGetOption	.\vimfiles\plugin\dbext.vim	/^command! -nargs=? DBGetOption       :echo DB_listOption(<q-args>)$/;"	c
DBHistory	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBHistory$/;"	c
DBListColumn	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=* DBListColumn$/;"	c
DBListConnections	.\vimfiles\plugin\dbext.vim	/^command! -nargs=0 DBListConnections :call dbext#DB_getListConnections()$/;"	c
DBListProcedure	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=? DBListProcedure$/;"	c
DBListTable	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=? DBListTable$/;"	c
DBListVar	.\vimfiles\plugin\dbext.vim	/^command! -nargs=0 DBListVar         :call dbext#DB_sqlVarList()$/;"	c
DBListView	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=? DBListView$/;"	c
DBOrientationToggle	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBOrientationToggle$/;"	c
DBPromptForBufferParameters	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBPromptForBufferParameters$/;"	c
DBResultsClose	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBResultsClose$/;"	c
DBResultsOpen	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBResultsOpen$/;"	c
DBResultsRefresh	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBResultsRefresh$/;"	c
DBResultsToggleResize	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBResultsToggleResize$/;"	c
DBRollback	.\vimfiles\plugin\dbext.vim	/^command! -nargs=0 DBRollback        :call dbext#DB_rollback()$/;"	c
DBSelectFromTable	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=* -range DBSelectFromTable$/;"	c
DBSelectFromTableAskName	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBSelectFromTableAskName$/;"	c
DBSelectFromTableTopX	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=* -range DBSelectFromTableTopX$/;"	c
DBSelectFromTableWithWhere	.\vimfiles\plugin\dbext.vim	/^    command! -nargs=0 DBSelectFromTableWithWhere$/;"	c
DBSetOption	.\vimfiles\plugin\dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetOption	.\vimfiles\plugin\dbext.vim	/^command! -nargs=1 DBSetOption       :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetVar	.\vimfiles\plugin\dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBSetVar	.\vimfiles\plugin\dbext.vim	/^command! -nargs=1 -bang DBSetVar    :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBVarRangeAssign	.\vimfiles\plugin\dbext.vim	/^command! -range -nargs=0 -bang DBVarRangeAssign <line1>,<line2>call dbext#DB_sqlVarRangeAssignment(<bang>0)$/;"	c
DB_ASA_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_describeProcedure(proc_name)$/;"	f
DB_ASA_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_describeTable(table_name)$/;"	f
DB_ASA_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_execSql(str)$/;"	f
DB_ASA_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getDictionaryProcedure() $/;"	f
DB_ASA_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getDictionaryTable() $/;"	f
DB_ASA_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getDictionaryView() $/;"	f
DB_ASA_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getListColumn(table_name) $/;"	f
DB_ASA_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getListProcedure(proc_prefix)$/;"	f
DB_ASA_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getListTable(table_prefix)$/;"	f
DB_ASA_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_getListView(view_prefix)$/;"	f
DB_ASA_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASA_stripHeaderFooter(result)$/;"	f
DB_ASE_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_describeProcedure(procedure_name)$/;"	f
DB_ASE_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_describeTable(table_name)$/;"	f
DB_ASE_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_execSql(str)$/;"	f
DB_ASE_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getDictionaryProcedure() "{{{$/;"	f
DB_ASE_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getDictionaryTable() "{{{$/;"	f
DB_ASE_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getDictionaryView() "{{{$/;"	f
DB_ASE_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getListColumn(table_name) "{{{$/;"	f
DB_ASE_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getListProcedure(proc_prefix)$/;"	f
DB_ASE_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getListTable(table_prefix)$/;"	f
DB_ASE_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_getListView(view_prefix)$/;"	f
DB_ASE_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ASE_stripHeaderFooter(result) "{{{$/;"	f
DB_DB2_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_describeProcedure(procedure_name)$/;"	f
DB_DB2_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_describeTable(table_name)$/;"	f
DB_DB2_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_execSql(str)$/;"	f
DB_DB2_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getDictionaryProcedure()$/;"	f
DB_DB2_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getDictionaryTable()$/;"	f
DB_DB2_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getDictionaryView() $/;"	f
DB_DB2_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getListColumn(table_name) $/;"	f
DB_DB2_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getListProcedure(proc_prefix)$/;"	f
DB_DB2_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getListTable(table_prefix)$/;"	f
DB_DB2_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_getListView(view_prefix)$/;"	f
DB_DB2_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DB2_stripHeaderFooter(result) $/;"	f
DB_DBI_Autoload	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_Autoload()$/;"	f
DB_DBI_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_describeProcedure(procedure_name)$/;"	f
DB_DBI_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_describeTable(table_name)$/;"	f
DB_DBI_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_execSql(str)$/;"	f
DB_DBI_execStr	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_execStr(str)$/;"	f
DB_DBI_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getDictionaryProcedure() "{{{$/;"	f
DB_DBI_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getDictionaryTable() "{{{$/;"	f
DB_DBI_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getDictionaryView() "{{{$/;"	f
DB_DBI_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getListColumn(table_name)$/;"	f
DB_DBI_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getListProcedure(proc_prefix)$/;"	f
DB_DBI_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getListTable(table_prefix)$/;"	f
DB_DBI_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_getListView(view_prefix)$/;"	f
DB_DBI_setOption	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_setOption(option_name, value) "{{{$/;"	f
DB_DBI_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DBI_stripHeaderFooter(result)$/;"	f
DB_DictionaryCreate	.\vimfiles\plugin\dbext.vim	/^function! DB_DictionaryCreate( drop_dict, which ) $/;"	f
DB_DictionaryDelete	.\vimfiles\autoload\dbext.vim	/^function! s:DB_DictionaryDelete( which ) "{{{$/;"	f
DB_FIREBIRD_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_describeProcedure(procedure_name)$/;"	f
DB_FIREBIRD_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_describeTable(table_name)$/;"	f
DB_FIREBIRD_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_execSql(str)$/;"	f
DB_FIREBIRD_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryProcedure() "{{{$/;"	f
DB_FIREBIRD_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryTable() "{{{$/;"	f
DB_FIREBIRD_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryView() "{{{$/;"	f
DB_FIREBIRD_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getListColumn(table_name) "{{{$/;"	f
DB_FIREBIRD_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getListProcedure(proc_prefix)$/;"	f
DB_FIREBIRD_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getListTable(table_prefix)$/;"	f
DB_FIREBIRD_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_getListView(view_prefix)$/;"	f
DB_FIREBIRD_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_FIREBIRD_stripHeaderFooter(result) "{{{$/;"	f
DB_INGRES_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_describeProcedure(procedure_name)$/;"	f
DB_INGRES_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_describeTable(table_name)$/;"	f
DB_INGRES_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_execSql(str)$/;"	f
DB_INGRES_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getDictionaryProcedure() $/;"	f
DB_INGRES_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getDictionaryTable() $/;"	f
DB_INGRES_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getDictionaryView() $/;"	f
DB_INGRES_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getListColumn(table_name) $/;"	f
DB_INGRES_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getListProcedure(proc_prefix)$/;"	f
DB_INGRES_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getListTable(table_prefix)$/;"	f
DB_INGRES_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_getListView(view_prefix)$/;"	f
DB_INGRES_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INGRES_stripHeaderFooter(result)$/;"	f
DB_INTERBASE_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_describeProcedure(procedure_name)$/;"	f
DB_INTERBASE_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_describeTable(table_name)$/;"	f
DB_INTERBASE_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_execSql(str)$/;"	f
DB_INTERBASE_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getDictionaryProcedure() $/;"	f
DB_INTERBASE_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getDictionaryTable() $/;"	f
DB_INTERBASE_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getDictionaryView() $/;"	f
DB_INTERBASE_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getListColumn(table_name) $/;"	f
DB_INTERBASE_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getListProcedure(proc_prefix)$/;"	f
DB_INTERBASE_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getListTable(table_prefix)$/;"	f
DB_INTERBASE_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_getListView(view_prefix)$/;"	f
DB_INTERBASE_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_INTERBASE_stripHeaderFooter(result)$/;"	f
DB_MYSQL_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_describeProcedure(procedure_name)$/;"	f
DB_MYSQL_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_describeTable(table_name)$/;"	f
DB_MYSQL_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_execSql(str)$/;"	f
DB_MYSQL_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getDictionaryProcedure() "{{{$/;"	f
DB_MYSQL_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getDictionaryTable() "{{{$/;"	f
DB_MYSQL_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getDictionaryView() "{{{$/;"	f
DB_MYSQL_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getListColumn(table_name) "{{{$/;"	f
DB_MYSQL_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getListProcedure(proc_prefix)$/;"	f
DB_MYSQL_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getListTable(table_prefix)$/;"	f
DB_MYSQL_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_getListView(view_prefix)$/;"	f
DB_MYSQL_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_MYSQL_stripHeaderFooter(result) "{{{$/;"	f
DB_ODBC_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_describeProcedure(procedure_name)$/;"	f
DB_ODBC_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_describeTable(table_name)$/;"	f
DB_ODBC_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_execSql(str)$/;"	f
DB_ODBC_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getDictionaryProcedure() "{{{$/;"	f
DB_ODBC_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getDictionaryTable() "{{{$/;"	f
DB_ODBC_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getDictionaryView() "{{{$/;"	f
DB_ODBC_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getListColumn(table_name)$/;"	f
DB_ODBC_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getListProcedure(proc_prefix)$/;"	f
DB_ODBC_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getListTable(table_prefix)$/;"	f
DB_ODBC_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_getListView(view_prefix)$/;"	f
DB_ODBC_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ODBC_stripHeaderFooter(result)$/;"	f
DB_ORA_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_describeProcedure(procedure_name)$/;"	f
DB_ORA_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_describeTable(table_name)$/;"	f
DB_ORA_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_execSql(str)$/;"	f
DB_ORA_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getDictionaryProcedure() "{{{$/;"	f
DB_ORA_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getDictionaryTable() "{{{$/;"	f
DB_ORA_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getDictionaryView() "{{{$/;"	f
DB_ORA_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getListColumn(table_name) "{{{$/;"	f
DB_ORA_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getListProcedure(proc_prefix)$/;"	f
DB_ORA_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getListTable(table_prefix)$/;"	f
DB_ORA_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_getListView(view_prefix)$/;"	f
DB_ORA_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ORA_stripHeaderFooter(result) "{{{$/;"	f
DB_PGSQL_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_describeProcedure(procedure_name)$/;"	f
DB_PGSQL_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_describeTable(table_name)$/;"	f
DB_PGSQL_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_execSql(str)$/;"	f
DB_PGSQL_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getDictionaryProcedure() $/;"	f
DB_PGSQL_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getDictionaryTable() $/;"	f
DB_PGSQL_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getDictionaryView() $/;"	f
DB_PGSQL_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getListColumn(table_name) $/;"	f
DB_PGSQL_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getListProcedure(proc_prefix)$/;"	f
DB_PGSQL_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getListTable(table_prefix)$/;"	f
DB_PGSQL_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_getListView(view_prefix)$/;"	f
DB_PGSQL_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_PGSQL_stripHeaderFooter(result)$/;"	f
DB_RDB_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_describeProcedure(procedure_name) "{{{$/;"	f
DB_RDB_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_describeTable(table_name) "{{{$/;"	f
DB_RDB_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_execSql(str) "{{{$/;"	f
DB_RDB_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getDictionaryProcedure() "{{{$/;"	f
DB_RDB_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getDictionaryTable() "{{{$/;"	f
DB_RDB_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getDictionaryView() "{{{$/;"	f
DB_RDB_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getListColumn(table_name) "{{{$/;"	f
DB_RDB_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getListProcedure(proc_prefix) "{{{$/;"	f
DB_RDB_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getListTable(table_prefix) "{{{$/;"	f
DB_RDB_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_getListView(view_prefix) "{{{$/;"	f
DB_RDB_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_RDB_stripHeaderFooter(result) "{{{$/;"	f
DB_SQLITE_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_describeProcedure(procedure_name)$/;"	f
DB_SQLITE_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_describeTable(table_name)$/;"	f
DB_SQLITE_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_execSql(str)$/;"	f
DB_SQLITE_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getDictionaryProcedure() $/;"	f
DB_SQLITE_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getDictionaryTable()$/;"	f
DB_SQLITE_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getDictionaryView()$/;"	f
DB_SQLITE_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getListColumn(table_name)$/;"	f
DB_SQLITE_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getListProcedure(proc_prefix)$/;"	f
DB_SQLITE_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getListTable(table_prefix)$/;"	f
DB_SQLITE_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_getListView(view_prefix)$/;"	f
DB_SQLITE_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLITE_stripHeaderFooter(result)$/;"	f
DB_SQLSRV_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_describeProcedure(procedure_name)$/;"	f
DB_SQLSRV_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_describeTable(table_name)$/;"	f
DB_SQLSRV_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_execSql(str)$/;"	f
DB_SQLSRV_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getDictionaryProcedure() "{{{$/;"	f
DB_SQLSRV_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getDictionaryTable() "{{{$/;"	f
DB_SQLSRV_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getDictionaryView() "{{{$/;"	f
DB_SQLSRV_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getListColumn(table_name)$/;"	f
DB_SQLSRV_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getListProcedure(proc_prefix)$/;"	f
DB_SQLSRV_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getListTable(table_prefix)$/;"	f
DB_SQLSRV_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_getListView(view_prefix)$/;"	f
DB_SQLSRV_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_SQLSRV_stripHeaderFooter(result)$/;"	f
DB_ULTRALITE_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_describeProcedure(proc_name)$/;"	f
DB_ULTRALITE_describeTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_describeTable(table_name)$/;"	f
DB_ULTRALITE_execSql	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_execSql(str)$/;"	f
DB_ULTRALITE_getDictionaryProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryProcedure() $/;"	f
DB_ULTRALITE_getDictionaryTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryTable() $/;"	f
DB_ULTRALITE_getDictionaryView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryView() $/;"	f
DB_ULTRALITE_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getListColumn(table_name) $/;"	f
DB_ULTRALITE_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getListProcedure(proc_prefix)$/;"	f
DB_ULTRALITE_getListTable	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getListTable(table_prefix)$/;"	f
DB_ULTRALITE_getListView	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_getListView(view_prefix)$/;"	f
DB_ULTRALITE_stripHeaderFooter	.\vimfiles\autoload\dbext.vim	/^function! s:DB_ULTRALITE_stripHeaderFooter(result)$/;"	f
DB_addBufDictList	.\vimfiles\autoload\dbext.vim	/^function! s:DB_addBufDictList( buf_nbr ) "{{{$/;"	f
DB_addToResultBuffer	.\vimfiles\autoload\dbext.vim	/^function! s:DB_addToResultBuffer(output, do_clear)$/;"	f
DB_buildLists	.\vimfiles\autoload\dbext.vim	/^function! s:DB_buildLists()$/;"	f
DB_delBufDictList	.\vimfiles\autoload\dbext.vim	/^function! s:DB_delBufDictList( buf_nbr ) "{{{$/;"	f
DB_errorMsg	.\vimfiles\autoload\dbext.vim	/^function! s:DB_errorMsg(msg)$/;"	f
DB_escapeStr	.\vimfiles\autoload\dbext.vim	/^function! s:DB_escapeStr(value)$/;"	f
DB_execCmd	.\vimfiles\plugin\dbext.vim	/^function! DB_execCmd(name, ...)$/;"	f
DB_fullPath2Bin	.\vimfiles\autoload\dbext.vim	/^function! s:DB_fullPath2Bin(executable_name) $/;"	f
DB_get	.\vimfiles\autoload\dbext.vim	/^function! s:DB_get(name, ...)$/;"	f
DB_getCommentChars	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getCommentChars()$/;"	f
DB_getDefault	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getDefault(name)$/;"	f
DB_getDictionaryName	.\vimfiles\plugin\dbext.vim	/^function! DB_getDictionaryName( which ) $/;"	f
DB_getInput	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getInput(prompt, default_value, cancel_value)$/;"	f
DB_getListColumn	.\vimfiles\plugin\dbext.vim	/^function! DB_getListColumn(...) $/;"	f
DB_getLoginScript	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getLoginScript(filename)$/;"	f
DB_getObjectAndQuote	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getObjectAndQuote(object) "{{{ $/;"	f
DB_getObjectName	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getObjectName(object) "{{{ $/;"	f
DB_getObjectOwner	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getObjectOwner(object) "{{{$/;"	f
DB_getParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getParameters(scope)$/;"	f
DB_getTblAlias	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getTblAlias(table_name) $/;"	f
DB_getTitle	.\vimfiles\autoload\dbext.vim	/^function! s:DB_getTitle() $/;"	f
DB_getVisualBlock	.\vimfiles\plugin\dbext.vim	/^function! DB_getVisualBlock() range$/;"	f
DB_historyAdd	.\vimfiles\autoload\dbext.vim	/^function! s:DB_historyAdd(sql)$/;"	f
DB_historyDel	.\vimfiles\autoload\dbext.vim	/^function! s:DB_historyDel(line)$/;"	f
DB_historyOpen	.\vimfiles\autoload\dbext.vim	/^function! s:DB_historyOpen()$/;"	f
DB_historySave	.\vimfiles\autoload\dbext.vim	/^function! s:DB_historySave(auto_hide)$/;"	f
DB_historyUse	.\vimfiles\autoload\dbext.vim	/^function! s:DB_historyUse(line)$/;"	f
DB_listOption	.\vimfiles\plugin\dbext.vim	/^function! DB_listOption(...) $/;"	f
DB_option	.\vimfiles\autoload\dbext.vim	/^function! s:DB_option(param, value, separator)$/;"	f
DB_pad	.\vimfiles\autoload\dbext.vim	/^function! s:DB_pad(side, length, value)$/;"	f
DB_parseHostVariables	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseHostVariables(query)$/;"	f
DB_parseHostVariablesOld	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseHostVariablesOld(query)$/;"	f
DB_parseJProperties	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseJProperties(query)$/;"	f
DB_parseJava	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseJava(query)$/;"	f
DB_parsePHP	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parsePHP(query)$/;"	f
DB_parsePerl	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parsePerl(query)$/;"	f
DB_parseProfile	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseProfile(value)$/;"	f
DB_parseSQL	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseSQL(query)$/;"	f
DB_parseVB	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseVB(query)$/;"	f
DB_parseVim	.\vimfiles\autoload\dbext.vim	/^function! s:DB_parseVim(query)$/;"	f
DB_promptForParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_promptForParameters(...)$/;"	f
DB_removeEmptyLines	.\vimfiles\autoload\dbext.vim	/^function! s:DB_removeEmptyLines(sql)$/;"	f
DB_resBufName	.\vimfiles\autoload\dbext.vim	/^function! s:DB_resBufName()$/;"	f
DB_resetBufferParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_resetBufferParameters(use_defaults)$/;"	f
DB_resetGlobalParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_resetGlobalParameters()$/;"	f
DB_restoreConnParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_restoreConnParameters()$/;"	f
DB_runCmd	.\vimfiles\autoload\dbext.vim	/^function! s:DB_runCmd(cmd, sql, result)$/;"	f
DB_saveConnParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_saveConnParameters()$/;"	f
DB_saveSize	.\vimfiles\autoload\dbext.vim	/^function! s:DB_saveSize(buf_name)$/;"	f
DB_searchReplace	.\vimfiles\autoload\dbext.vim	/^function! s:DB_searchReplace(str, exp_find_str, exp_get_value, count_matches)$/;"	f
DB_searchReplaceOld	.\vimfiles\autoload\dbext.vim	/^function! s:DB_searchReplaceOld(str, exp_find_str, exp_get_value, count_matches)$/;"	f
DB_set	.\vimfiles\autoload\dbext.vim	/^function! s:DB_set(name, value)$/;"	f
DB_setGlobal	.\vimfiles\autoload\dbext.vim	/^function! s:DB_setGlobal(name, value)$/;"	f
DB_setWType	.\vimfiles\autoload\dbext.vim	/^function! s:DB_setWType(name, value)$/;"	f
DB_sqlVarInit	.\vimfiles\autoload\dbext.vim	/^function! s:DB_sqlVarInit()$/;"	f
DB_sqlVarRemoveTemp	.\vimfiles\autoload\dbext.vim	/^function! s:DB_sqlVarRemoveTemp()$/;"	f
DB_sqlVarSet	.\vimfiles\autoload\dbext.vim	/^function! s:DB_sqlVarSet(name, value, temporary)$/;"	f
DB_sqlVarSubstitute	.\vimfiles\autoload\dbext.vim	/^function! s:DB_sqlVarSubstitute(sql)$/;"	f
DB_stripComments	.\vimfiles\autoload\dbext.vim	/^function! s:DB_stripComments(mdl_options)$/;"	f
DB_stripLeadFollowQuotesSpace	.\vimfiles\autoload\dbext.vim	/^function! s:DB_stripLeadFollowQuotesSpace(str)$/;"	f
DB_stripLeadFollowSpaceLines	.\vimfiles\autoload\dbext.vim	/^function! s:DB_stripLeadFollowSpaceLines(str)$/;"	f
DB_switchToBuffer	.\vimfiles\autoload\dbext.vim	/^function! s:DB_switchToBuffer(buf_name, buf_file, get_buf_nr_name)$/;"	f
DB_validateBufferParameters	.\vimfiles\autoload\dbext.vim	/^function! s:DB_validateBufferParameters()$/;"	f
DB_varToString	.\vimfiles\autoload\dbext.vim	/^function! s:DB_varToString(name)$/;"	f
DB_warningMsg	.\vimfiles\autoload\dbext.vim	/^function! s:DB_warningMsg(msg)$/;"	f
Date	.\vim73\ftplugin\debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	.\vim73\ftplugin\debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	.\vim73\ftplugin\debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	.\vim73\ftplugin\debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	.\vim73\ftplugin\debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	.\vim73\ftplugin\debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	.\vim73\ftplugin\debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
DecreaseFunc	.\vim73\ftplugin\cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
DecreaseIndent	.\vim73\ftplugin\cobol.vim	/^function! s:DecreaseIndent()$/;"	f
DefPython	.\vim73\autoload\python3complete.vim	/^function! s:DefPython()$/;"	f
DefPython	.\vim73\autoload\pythoncomplete.vim	/^function! s:DefPython()$/;"	f
DefRuby	.\vim73\autoload\rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefRuby	.\vimfiles\autoload\rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineInlineMarkup	.\vim73\syntax\rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
DefineOneInlineMarkup	.\vim73\syntax\rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
DefineSnips	.\vimfiles\plugin\snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
Delete	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete            :call dbext#DB_execSql("delete " . <q-args>)$/;"	c
DeleteFile	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:DeleteFile() range$/;"	f
Detect	.\vimfiles\plugin\bundler.vim	/^function! s:Detect(path)$/;"	f
Detect	.\vimfiles\plugin\rails.vim	/^function! s:Detect(filename)$/;"	f
DetectHtmlEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:DetectHtmlEncoding() " {{{1$/;"	f
DetermineExtension	.\vimfiles\plugin\a.vim	/^function! DetermineExtension(path) $/;"	f
Dict2info	.\vim73\autoload\ccomplete.vim	/^function! s:Dict2info(dict)$/;"	f
DiffGitCached	.\vim73\ftplugin\gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DiffGitCached	.\vimfiles\ftplugin\gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DiffOrig	.\vim73\vimrc_example.vim	/^  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis$/;"	c
DisplayError	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>DisplayError()$/;"	f
DisplayTagsFile	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>DisplayTagsFile()$/;"	f
Distribution	.\vim73\ftplugin\debchangelog.vim	/^function Distribution(dist)$/;"	f
DoCommand	.\vimfiles\plugin\vcsbzr.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoCommand	.\vimfiles\plugin\vcscvs.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoCommand	.\vimfiles\plugin\vcsgit.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoCommand	.\vimfiles\plugin\vcshg.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoCommand	.\vimfiles\plugin\vcssvk.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoCommand	.\vimfiles\plugin\vcssvn.vim	/^function! s:DoCommand(cmd, cmdName, statusText, options)$/;"	f
DoMark	.\vimfiles\plugin\mark.vim	/^function! s:DoMark(...) " DoMark(regexp)$/;"	f
DoMatchParen	.\vim73\plugin\matchparen.vim	/^command! DoMatchParen runtime plugin\/matchparen.vim | windo doau CursorMoved$/;"	c
DoRemoteReply	.\vim73\plugin\rrhelper.vim	/^function DoRemoteReply(id, cnt, group, file)$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_af_af.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ca_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_chinese_gb.936.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_chinese_taiwan.950.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_cs_cz.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_czech_czech_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_czech_czech_republic.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_de_de.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_eo.utf-8.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_es_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_fi_fi.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_fr_fr.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_hu_hu.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_it_it.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ja_jp.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_japanese_japan.932.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ko_kr.euckr.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ko_kr.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_nl_nl.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_no_no.latin1.vim	/^	function Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_pl_pl.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_polish_poland.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_pt_br.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_pt_pt.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_ru_ru.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sk_sk.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sl_si.cp1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sl_si.latin2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sl_si.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_slovak_slovak_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sr_rs.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sr_rs.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_sv_se.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_uk_ua.cp1251.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_vi_vn.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_zh_cn.gb2312.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_zh_cn.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\vim73\lang\menu_zh_tw.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Doc	.\vimfiles\autoload\rails.vim	/^function! s:Doc(bang, string)$/;"	f
DoubleClick	.\vimfiles\plugin\winfileexplorer.vim	/^function s:DoubleClick()$/;"	f
Doxygen_Hilights	.\vim73\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights()$/;"	f
Doxygen_Hilights_Base	.\vim73\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights_Base()$/;"	f
Drop	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop              :call dbext#DB_execSql("drop " . <q-args>)$/;"	c
DtraceCheck	.\vim73\filetype.vim	/^func! s:DtraceCheck()$/;"	f
DxyCreateSmallSpecial	.\vim73\syntax\doxygen.vim	/^  fun! s:DxyCreateSmallSpecial( kword, name )$/;"	f
DylanGetIndent	.\vim73\indent\dylan.vim	/^function DylanGetIndent()$/;"	f
ENC	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^        ENC = 'utf-8'$/;"	v
ENC	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^    ENC = 'utf-8'$/;"	v
ENC	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^    ENC = vim.eval('&enc')$/;"	v
ENC	.\vimfiles\plugin\voom\voom_mode_rest.py	/^        ENC = 'utf-8'$/;"	v
ENC	.\vimfiles\plugin\voom\voom_mode_rest.py	/^    ENC = 'utf-8'$/;"	v
ENC	.\vimfiles\plugin\voom\voom_mode_rest.py	/^    ENC = vim.eval('&enc')$/;"	v
EchoSearchPattern	.\vimfiles\autoload\mark.vim	/^	function! s:EchoSearchPattern( searchType, searchPattern, isBackward )$/;"	f
Edit	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
Edit	.\vimfiles\autoload\rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	.\vimfiles\ftplugin\gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
EditAutoEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:EditAutoEncoding(...) "{{{1$/;"	f
EditDir	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:EditDir(...)$/;"	f
EditDir	.\vimfiles\plugin\winmanager.vim	/^function! <SID>EditDir(event)$/;"	f
EditElsewhere	.\vim73\macros\editexisting.vim	/^func s:EditElsewhere(filename)$/;"	f
EditEntry	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:EditEntry(movefirst,editcmd)$/;"	f
EditExisting	.\vim73\macros\editexisting.vim	/^func! EditExisting(fname, command)$/;"	f
EditFile	.\vimfiles\plugin\vcscommand.vim	/^function! s:EditFile(command, originalBuffer, statusText)$/;"	f
EditManualEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:EditManualEncoding(enc, ...) "{{{1$/;"	f
EditNextVisibleExplorer	.\vimfiles\plugin\winmanager.vim	/^function! <SID>EditNextVisibleExplorer(grpn, memn, dir, editcmd)$/;"	f
EditSimpleRb	.\vimfiles\autoload\rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
EditVimrc	.\vim73\menu.vim	/^fun! s:EditVimrc()$/;"	f
Egrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Egrep$/;"	c
EgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file EgrepAdd$/;"	c
Egrep_Path	.\vimfiles\plugin\grep.vim	/^    let Egrep_Path = 'egrep'$/;"	v
ElementAt	.\vimfiles\plugin\changeColorScheme.vim	/^function! ElementAt (array, sep, array_index)$/;"	f
Email	.\vim73\ftplugin\debchangelog.vim	/^function <SID>Email()$/;"	f
EmptystackP	.\vim73\autoload\xmlcomplete.vim	/^function! s:EmptystackP(sname)$/;"	f
EnableLongestEnhancement	.\vimfiles\plugin\supertab.vim	/^function! s:EnableLongestEnhancement()$/;"	f
End	.\vim73\macros\less.vim	/^fun! s:End()$/;"	f
EndBlockIndent	.\vim73\indent\ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
Enter_annotation_buffer	.\vim73\ftplugin\ocaml.vim	/^    function! s:Enter_annotation_buffer()$/;"	f
EnumerateFilesByExtension	.\vimfiles\plugin\a.vim	/^function! EnumerateFilesByExtension(path, baseName, extension)$/;"	f
EnumerateFilesByExtensionInPath	.\vimfiles\plugin\a.vim	/^function! EnumerateFilesByExtensionInPath(baseName, extension, pathList, relPathBase)$/;"	f
Environ.CDPATH	.\vim73\macros\shellmenu.vim	/^imenu Environ.CDPATH ${CDPATH}$/;"	m
Environ.HOME	.\vim73\macros\shellmenu.vim	/^imenu Environ.HOME ${HOME}$/;"	m
Environ.IFS	.\vim73\macros\shellmenu.vim	/^imenu Environ.IFS ${IFS}$/;"	m
Environ.LC_CTYPE	.\vim73\macros\shellmenu.vim	/^imenu Environ.LC_CTYPE ${LC_CTYPE}$/;"	m
Environ.LC_MESSAGES	.\vim73\macros\shellmenu.vim	/^imenu Environ.LC_MESSAGES ${LC_MESSAGES}$/;"	m
Environ.MAIL	.\vim73\macros\shellmenu.vim	/^imenu Environ.MAIL ${MAIL}$/;"	m
Environ.MAILCHECK	.\vim73\macros\shellmenu.vim	/^imenu Environ.MAILCHECK ${MAILCHECK}$/;"	m
Environ.PATH	.\vim73\macros\shellmenu.vim	/^imenu Environ.PATH ${PATH}$/;"	m
Environ.PS1	.\vim73\macros\shellmenu.vim	/^imenu Environ.PS1 ${PS1}$/;"	m
Environ.PS2	.\vim73\macros\shellmenu.vim	/^imenu Environ.PS2 ${PS2}$/;"	m
Environ.SHACCT	.\vim73\macros\shellmenu.vim	/^imenu Environ.SHACCT ${SHACCT}$/;"	m
Environ.SHELL	.\vim73\macros\shellmenu.vim	/^imenu Environ.SHELL ${SHELL}$/;"	m
EqualFilePaths	.\vimfiles\plugin\a.vim	/^function! <SID>EqualFilePaths(path1, path2)$/;"	f
ErlangIndent	.\vim73\indent\erlang.vim	/^function ErlangIndent()$/;"	f
ErlangIndentAtferLine	.\vim73\indent\erlang.vim	/^function s:ErlangIndentAtferLine(l)$/;"	f
ErrMsg	.\vim73\autoload\rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
ErrMsg	.\vimfiles\autoload\rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	.\vimfiles\autoload\method_builder.vim	/^fun s:Error(msg)$/;"	f
Error	.\vimfiles\autoload\objc\method_builder.vim	/^fun s:Error(msg)$/;"	f
ErrorMessage	.\vimfiles\autoload\mark.vim	/^function! s:ErrorMessage( searchType, searchPattern, isBackward )$/;"	f
Escape	.\vim73\autoload\zip.vim	/^fun! s:Escape(fname,isfilt)$/;"	f
EscapeFilename	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:EscapeFilename(name)$/;"	f
EscapeText	.\vimfiles\autoload\mark.vim	/^function! s:EscapeText( text )$/;"	f
Examples	.\vim73\tools\efm_perl.pl	/^Examples:$/;"	l
ExecWinCmdNoEa	.\vimfiles\autoload\genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
Executable	.\vimfiles\plugin\vcsbzr.vim	/^function! s:Executable()$/;"	f
Executable	.\vimfiles\plugin\vcscvs.vim	/^function! s:Executable()$/;"	f
Executable	.\vimfiles\plugin\vcsgit.vim	/^function! s:Executable()$/;"	f
Executable	.\vimfiles\plugin\vcshg.vim	/^function! s:Executable()$/;"	f
Executable	.\vimfiles\plugin\vcssvk.vim	/^function! s:Executable()$/;"	f
Executable	.\vimfiles\plugin\vcssvn.vim	/^function! s:Executable()$/;"	f
ExecuteExtensionMapping	.\vimfiles\plugin\vcscommand.vim	/^function! s:ExecuteExtensionMapping(mapping)$/;"	f
ExecuteVCSCommand	.\vimfiles\plugin\vcscommand.vim	/^function! s:ExecuteVCSCommand(command, argList)$/;"	f
Executor	.\vimfiles\autoload\l9\async.py	/^class Executor:$/;"	c	inherits:
Exit_annotation_buffer	.\vim73\ftplugin\ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
ExpandAlternatePath	.\vimfiles\plugin\a.vim	/^function! <SID>ExpandAlternatePath(pathSpec, sfPath) $/;"	f
ExpandMap	.\vimfiles\plugin\supertab.vim	/^function! s:ExpandMap(map)$/;"	f
Explore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Explore		call netrw#Explore(<count>,0,0+<bang>0,<q-args>)$/;"	c
Explore	.\vimfiles\plugin\winfileexplorer.vim	/^		command -n=? -complete=dir Explore :call s:StartExplorer(0, '<a>')$/;"	c
ExploreInCurrentWindow	.\vimfiles\plugin\winfileexplorer.vim	/^		command -n=? -complete=dir ExploreInCurrentWindow :call <SID>EditDir()$/;"	c
ExplorePatHls	.\vim73\autoload\netrw.vim	/^fun! s:ExplorePatHls(pattern)$/;"	f
Extract	.\vimfiles\autoload\rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractFileDate	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ExtractFileDate(line)$/;"	f
ExtractFileName	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ExtractFileName(line)$/;"	f
ExtractFileSize	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ExtractFileSize(line)$/;"	f
ExtractFullFileName	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ExtractFullFileName(line)$/;"	f
ExtractSnips	.\vimfiles\plugin\snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	.\vimfiles\plugin\snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
Extract_type_data	.\vim73\ftplugin\ocaml.vim	/^    function! s:Extract_type_data(block_pattern)$/;"	f
F	.\vim73\macros\less.vim	/^map F :e<CR>G<SID>L:sleep 1<CR>F$/;"	m
FGforBG	.\vimfiles\after\syntax\css.vim	/^function! s:FGforBG(bg)$/;"	f
FGforBG	.\vimfiles\plugin\colorizer.vim	/^function! s:FGforBG(bg) "{{{2$/;"	f
FGforBG	.\vimfiles\syntax\css.vim	/^function! s:FGforBG(bg)$/;"	f
FTRules	.\vim73\filetype.vim	/^func! s:FTRules()$/;"	f
FTVB	.\vim73\filetype.vim	/^func! s:FTVB(alt)$/;"	f
FTasm	.\vim73\filetype.vim	/^func! s:FTasm()$/;"	f
FTasmsyntax	.\vim73\filetype.vim	/^func! s:FTasmsyntax()$/;"	f
FTbtm	.\vim73\filetype.vim	/^func! s:FTbtm()$/;"	f
FTchange	.\vim73\filetype.vim	/^func! s:FTchange()$/;"	f
FTe	.\vim73\filetype.vim	/^func! s:FTe()$/;"	f
FTent	.\vim73\filetype.vim	/^func! s:FTent()$/;"	f
FTheader	.\vim73\filetype.vim	/^func! s:FTheader()$/;"	f
FThtml	.\vim73\filetype.vim	/^func! s:FThtml()$/;"	f
FTidl	.\vim73\filetype.vim	/^func! s:FTidl()$/;"	f
FTinc	.\vim73\filetype.vim	/^func! s:FTinc()$/;"	f
FTlpc	.\vim73\filetype.vim	/^func! s:FTlpc()$/;"	f
FTm	.\vim73\filetype.vim	/^func! s:FTm()$/;"	f
FTmm	.\vim73\filetype.vim	/^func! s:FTmm()$/;"	f
FTmms	.\vim73\filetype.vim	/^func! s:FTmms()$/;"	f
FTnroff	.\vim73\filetype.vim	/^func! s:FTnroff()$/;"	f
FTperl	.\vim73\filetype.vim	/^func! s:FTperl()$/;"	f
FTpl	.\vim73\filetype.vim	/^func! s:FTpl()$/;"	f
FTprogress_asm	.\vim73\filetype.vim	/^func! s:FTprogress_asm()$/;"	f
FTprogress_cweb	.\vim73\filetype.vim	/^func! s:FTprogress_cweb()$/;"	f
FTprogress_pascal	.\vim73\filetype.vim	/^func! s:FTprogress_pascal()$/;"	f
FTr	.\vim73\filetype.vim	/^func! s:FTr()$/;"	f
FTtex	.\vim73\filetype.vim	/^func! s:FTtex()$/;"	f
FTxml	.\vim73\filetype.vim	/^func! s:FTxml()$/;"	f
FTy	.\vim73\filetype.vim	/^func! s:FTy()$/;"	f
FalconGetIndent	.\vim73\indent\falcon.vim	/^function FalconGetIndent()$/;"	f
FavmenuInit	.\vimfiles\plugin\FavMenu.vim	/^fu! FavmenuInit()$/;"	f
FencAutoDetect	.\vimfiles\plugin\fencview.vim	/^command! -nargs=* -complete=file FencAutoDetect call$/;"	c
FencCreateMenu	.\vimfiles\plugin\fencview.vim	/^function! s:FencCreateMenu() "{{{1$/;"	f
FencDetectFileEncoding	.\vimfiles\plugin\fencview.vim	/^function! s:FencDetectFileEncoding() "{{{1$/;"	f
FencHandleData	.\vimfiles\plugin\fencview.vim	/^function! s:FencHandleData() "{{{1$/;"	f
FencInitVar	.\vimfiles\plugin\fencview.vim	/^function! s:FencInitVar() "{{{1$/;"	f
FencManualEncoding	.\vimfiles\plugin\fencview.vim	/^command! -nargs=+ -complete=file FencManualEncoding call$/;"	c
FencMenuSel	.\vimfiles\plugin\fencview.vim	/^function! FencMenuSel(fen_name) "{{{1$/;"	f
FencProbeBOM	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeBOM(Firstline) "{{{1$/;"	f
FencProbeCp932	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeCp932(c) "{{{1$/;"	f
FencProbeCp936	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeCp936(c) "{{{1$/;"	f
FencProbeCp949	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeCp949(c) "{{{1$/;"	f
FencProbeCp950	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeCp950(c) "{{{1$/;"	f
FencProbeEuc_jp	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeEuc_jp(c) "{{{1$/;"	f
FencProbeEuc_tw	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeEuc_tw(c) "{{{1$/;"	f
FencProbeUTF8	.\vimfiles\plugin\fencview.vim	/^function! s:FencProbeUTF8(c) "{{{1$/;"	f
FencProgressBar	.\vimfiles\plugin\fencview.vim	/^function! s:FencProgressBar(percentage, string) "{{{1$/;"	f
FencSelect	.\vimfiles\plugin\fencview.vim	/^function! s:FencSelect() "{{{1$/;"	f
FencView	.\vimfiles\plugin\fencview.vim	/^    augroup FencView$/;"	a
FencView	.\vimfiles\plugin\fencview.vim	/^augroup FencView$/;"	a
FencView	.\vimfiles\plugin\fencview.vim	/^command! -nargs=0                FencView       call s:ToggleFencView()$/;"	c
Fgrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Fgrep$/;"	c
FgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file FgrepAdd$/;"	c
Fgrep_Path	.\vimfiles\plugin\grep.vim	/^    let Fgrep_Path = 'fgrep'$/;"	v
FileDateCmp	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:FileDateCmp(line1, line2, direction)$/;"	f
FileExplorer	.\vim73\plugin\netrwPlugin.vim	/^augroup FileExplorer$/;"	a
FileExplorer_IsValid	.\vimfiles\plugin\winfileexplorer.vim	/^function! FileExplorer_IsValid()$/;"	f
FileExplorer_Start	.\vimfiles\plugin\winfileexplorer.vim	/^function! FileExplorer_Start()$/;"	f
FileExplorer_WrapUp	.\vimfiles\plugin\winfileexplorer.vim	/^function! FileExplorer_WrapUp()$/;"	f
FileFormat	.\vim73\menu.vim	/^fun! s:FileFormat()$/;"	f
FileModDate	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:FileModDate(name)$/;"	f
FileName	.\vim73\tools\ccfilter.c	/^char	       FileName[1024];$/;"	v
FileNameCmp	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:FileNameCmp(line1, line2, direction)$/;"	f
FileReadable	.\vim73\autoload\netrw.vim	/^fun! s:FileReadable(fname)$/;"	f
FileSizeCmp	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:FileSizeCmp(line1, line2, direction)$/;"	f
Filename	.\vimfiles\autoload\snipMate.vim	/^fun! Filename(...)$/;"	f
Finalise	.\vim73\ftplugin\debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	.\vim73\ftplugin\debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	.\vim73\ftplugin\debchangelog.vim	/^function <SID>Finalised()$/;"	f
Find	.\vim73\optwin.vim	/^fun! <SID>Find(lnum)$/;"	f
Find	.\vimfiles\autoload\rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBufferForName	.\vimfiles\autoload\genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindBundlerRoot	.\vimfiles\plugin\bundler.vim	/^function! s:FindBundlerRoot(path) abort$/;"	f
FindExplorerInGroup	.\vimfiles\plugin\winmanager.vim	/^function! <SID>FindExplorerInGroup(groupn, memn)$/;"	f
FindFileInSearchPath	.\vimfiles\plugin\a.vim	/^function! <SID>FindFileInSearchPath(fileName, pathList, relPathBase)$/;"	f
FindFileInSearchPathEx	.\vimfiles\plugin\a.vim	/^function! <SID>FindFileInSearchPathEx(fileName, pathList, relPathBase, count)$/;"	f
FindLet	.\vim73\indent\ocaml.vim	/^function s:FindLet(pstart, pmid, pend)$/;"	f
FindLet	.\vim73\indent\sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindOpenBracket	.\vim73\indent\php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindOpenBracket	.\vimfiles\indent\php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindOrCreateBuffer	.\vimfiles\plugin\a.vim	/^function! <SID>FindOrCreateBuffer(fileName, doSplit, findSimilar)$/;"	f
FindPage	.\vim73\ftplugin\man.vim	/^func <SID>FindPage(sect, page)$/;"	f
FindPair	.\vim73\indent\ocaml.vim	/^function s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	.\vim73\indent\sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPrevNonBlankNonComment	.\vim73\indent\erlang.vim	/^function s:FindPrevNonBlankNonComment(lnum)$/;"	f
FindRightmostOpenBracket	.\vimfiles\indent\ruby.vim	/^function s:FindRightmostOpenBracket(lnum)$/;"	f
FindTheIfOfAnElse	.\vim73\indent\php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheIfOfAnElse	.\vimfiles\indent\php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	.\vim73\indent\php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
Find_common_path	.\vim73\ftplugin\ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
FirstExplorerWindow	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=0 FirstExplorerWindow :silent call <SID>GotoExplorerWindow('1')$/;"	c
First_word_len	.\vim73\indent\awk.vim	/^function! s:First_word_len( line )$/;"	f
FixBeginfigs	.\vim73\ftplugin\mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
FixFText	.\vim73\menu.vim	/^fun! s:FixFText()$/;"	f
FixPathSep	.\vimfiles\autoload\genutils.vim	/^function! s:FixPathSep(matches, opathsep, npathsep)$/;"	f
Fixup	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
Flisttoggle	.\vimfiles\plugin\functionlist.vim	/^command! Flisttoggle :call <sid>toggle()$/;"	c
FnameEscape	.\vim73\menu.vim	/^func! s:FnameEscape(fname)$/;"	f
Fnameescape	.\vim73\ftplugin\ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
FoldCompare	.\vim73\syntax\2html.vim	/^  function! s:FoldCompare(f1, f2)$/;"	f
FoldTags	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>FoldTags()$/;"	f
Foo	.\vimfiles\etc\examples\indent\nested_hashes.rb	/^class Foo$/;"	c
FormatInsertMode	.\vimfiles\syntax\googlecodewiki.vim	/^function s:FormatInsertMode(lnum)$/;"	f
FormatNormalMode	.\vimfiles\syntax\googlecodewiki.vim	/^function s:FormatNormalMode(lnum, count)$/;"	f
FortranGetFixedIndent	.\vim73\indent\fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	.\vim73\indent\fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	.\vim73\indent\fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
Forward	.\vim73\macros\less.vim	/^fun! s:Forward()$/;"	f
ForwardBack	.\vimfiles\plugin\supertab.vim	/^  function! s:ForwardBack(command, map)$/;"	f
FufGlobal	.\vimfiles\autoload\fuf.vim	/^augroup FufGlobal$/;"	a
FullName	.\vim73\ftplugin\debchangelog.vim	/^function <SID>FullName()$/;"	f
G	.\vim73\macros\less.vim	/^noremap <script> G G<SID>L$/;"	m
G	.\vim73\syntax\2html.vim	/^  norm! G$/;"	m
GUDebugEcho	.\vimfiles\autoload\genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
GenerateResultBufferName	.\vimfiles\plugin\vcscommand.vim	/^function! s:GenerateResultBufferName(command, originalBuffer, vcsType, statusText)$/;"	f
GenerateResultBufferNameWithExtension	.\vimfiles\plugin\vcscommand.vim	/^function! s:GenerateResultBufferNameWithExtension(command, originalBuffer, vcsType, statusText)$/;"	f
GetAdaIndent	.\vim73\indent\ada.vim	/^function GetAdaIndent()$/;"	f
GetAddition	.\vim73\autoload\ccomplete.vim	/^function! s:GetAddition(line, match, memarg, bracket)$/;"	f
GetAllMatches	.\vimfiles\autoload\method_list.vim	/^fun s:GetAllMatches(needle)$/;"	f
GetAllMatches	.\vimfiles\autoload\objc\method_list.vim	/^fun s:GetAllMatches(needle)$/;"	f
GetAwkIndent	.\vim73\indent\awk.vim	/^function! GetAwkIndent()$/;"	f
GetBstIndent	.\vim73\indent\bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBufferRubyClass	.\vim73\autoload\rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyClass	.\vimfiles\autoload\rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	.\vim73\autoload\rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyEntity	.\vimfiles\autoload\rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	.\vim73\autoload\rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubyModule	.\vimfiles\autoload\rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	.\vim73\autoload\rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetBufferRubySingletonMethods	.\vimfiles\autoload\rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCSSIndent	.\vim73\indent\css.vim	/^function GetCSSIndent()$/;"	f
GetChaiScriptIndent	.\vim73\indent\chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetCmdArg	.\vim73\ftplugin\man.vim	/^func <SID>GetCmdArg(sect, page)$/;"	f
GetCobolIndent	.\vim73\indent\cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCocoaClass	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:GetCocoaClass(lnum, col)$/;"	f
GetCocoaClass	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:GetCocoaClass(lnum, col)$/;"	f
GetColorSyntaxName	.\vimfiles\plugin\changeColorScheme.vim	/^function! GetColorSyntaxName()$/;"	f
GetCompleteType	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:GetCompleteType(lnum, col)$/;"	f
GetCompleteType	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:GetCompleteType(lnum, col)$/;"	f
GetConfigIndent	.\vim73\indent\config.vim	/^function GetConfigIndent()$/;"	f
GetCucumberIndent	.\vim73\indent\cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDTDIndent	.\vim73\indent\dtd.vim	/^function GetDTDIndent()$/;"	f
GetDeclWord	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:GetDeclWord(var)$/;"	f
GetDeclWord	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:GetDeclWord(var)$/;"	f
GetDeclarations	.\vimfiles\autoload\method_builder.vim	/^fun s:GetDeclarations(file)$/;"	f
GetDeclarations	.\vimfiles\autoload\objc\method_builder.vim	/^fun s:GetDeclarations(file)$/;"	f
GetEiffelIndent	.\vim73\indent\eiffel.vim	/^function GetEiffelIndent()$/;"	f
GetErubyIndent	.\vim73\indent\eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetErubyIndent	.\vimfiles\indent\eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	.\vim73\indent\eterm.vim	/^function GetEtermIndent()$/;"	f
GetFileName	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:GetFileName()$/;"	f
GetFileNameEsc	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:GetFileNameEsc()$/;"	f
GetFrameScriptIndent	.\vim73\indent\framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetFullFileName	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:GetFullFileName()$/;"	f
GetFullFileNameEsc	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:GetFullFileNameEsc()$/;"	f
GetGitconfigIndent	.\vim73\indent\gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitconfigIndent	.\vimfiles\indent\gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitoliteIndent	.\vim73\indent\gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
GetHamlIndent	.\vim73\indent\haml.vim	/^function! GetHamlIndent()$/;"	f
GetIdlangIndent	.\vim73\indent\idlang.vim	/^function GetIdlangIndent(lnum)$/;"	f
GetInd	.\vim73\indent\ocaml.vim	/^function s:GetInd(lnum, pat, lim)$/;"	f
GetInd	.\vim73\indent\sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIshdIndent	.\vim73\indent\ishd.vim	/^fun! GetIshdIndent(lnum)$/;"	f
GetJavaIndent	.\vim73\indent\java.vim	/^function GetJavaIndent()$/;"	f
GetJsIndent	.\vimfiles\indent\javascript.vim	/^function! GetJsIndent(lnum)$/;"	f
GetLDIndent	.\vim73\indent\ld.vim	/^function GetLDIndent()$/;"	f
GetLastRealCodeLNum	.\vim73\indent\php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLastRealCodeLNum	.\vimfiles\indent\php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLatestVimScripts	.\vim73\autoload\getscript.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLatestVimScripts	.\vim73\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLineWithoutFullComment	.\vim73\indent\ocaml.vim	/^function s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	.\vim73\indent\liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLogtalkIndent	.\vim73\indent\logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	.\vim73\indent\lua.vim	/^function! GetLuaIndent()$/;"	f
GetMSL	.\vim73\indent\ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	.\vimfiles\indent\ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakeIndent	.\vim73\indent\make.vim	/^function GetMakeIndent()$/;"	f
GetMatlabIndent	.\vim73\indent\matlab.vim	/^function GetMatlabIndent(lnum)$/;"	f
GetMetaPostIndent	.\vim73\indent\mp.vim	/^function! GetMetaPostIndent()$/;"	f
GetMethodName	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:GetMethodName(lnum, col, base)$/;"	f
GetMethodName	.\vimfiles\autoload\man.vim	/^fun s:GetMethodName()$/;"	f
GetMethodName	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:GetMethodName(lnum, col, base)$/;"	f
GetMethodName	.\vimfiles\autoload\objc\man.vim	/^fun s:GetMethodName()$/;"	f
GetMmaIndent	.\vim73\indent\mma.vim	/^function GetMmaIndent()$/;"	f
GetNextWinnrInStack	.\vimfiles\autoload\genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetNonCommentLine	.\vimfiles\indent\javascript.vim	/^function! s:GetNonCommentLine(lnum)$/;"	f
GetNthItemFromList	.\vimfiles\plugin\a.vim	/^function! <SID>GetNthItemFromList(list, n) $/;"	f
GetOCamlIndent	.\vim73\indent\ocaml.vim	/^function GetOCamlIndent()$/;"	f
GetObjCIndent	.\vim73\indent\objc.vim	/^function GetObjCIndent()$/;"	f
GetObjPos	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:GetObjPos(lnum, col)$/;"	f
GetObjPos	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:GetObjPos(lnum, col)$/;"	f
GetOccamIndent	.\vim73\indent\occam.vim	/^function GetOccamIndent()$/;"	f
GetOffsetOf	.\vim73\indent\config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
GetOneScript	.\vim73\autoload\getscript.vim	/^fun! s:GetOneScript(...)$/;"	f
GetPage	.\vim73\ftplugin\man.vim	/^func <SID>GetPage(...)$/;"	f
GetPascalIndent	.\vim73\indent\pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerl6Indent	.\vim73\indent\perl6.vim	/^function GetPerl6Indent()$/;"	f
GetPerlIndent	.\vim73\indent\perl.vim	/^function GetPerlIndent()$/;"	f
GetPhpIndent	.\vim73\indent\php.vim	/^function! GetPhpIndent()$/;"	f
GetPhpIndent	.\vimfiles\indent\php.vim	/^function! GetPhpIndent()$/;"	f
GetPoVRayIndent	.\vim73\indent\pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPrevNonCommentLineNum	.\vim73\indent\pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
GetPrologIndent	.\vim73\indent\prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPythonIndent	.\vim73\indent\python.vim	/^function GetPythonIndent(lnum)$/;"	f
GetRIndent	.\vim73\indent\r.vim	/^function GetRIndent()$/;"	f
GetRSTIndent	.\vim73\indent\rst.vim	/^function GetRSTIndent()$/;"	f
GetReadlineIndent	.\vim73\indent\readline.vim	/^function GetReadlineIndent()$/;"	f
GetRevision	.\vimfiles\plugin\vcscvs.vim	/^function! s:GetRevision()$/;"	f
GetRubyIndent	.\vim73\indent\ruby.vim	/^function GetRubyIndent()$/;"	f
GetRubyIndent	.\vimfiles\indent\ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	.\vim73\autoload\rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRubyVarType	.\vimfiles\autoload\rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSDLIndent	.\vim73\indent\sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	.\vim73\indent\sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	.\vim73\indent\sqlanywhere.vim	/^function GetSQLIndent()$/;"	f
GetSassIndent	.\vim73\indent\sass.vim	/^function! GetSassIndent()$/;"	f
GetScript	.\vim73\autoload\getscript.vim	/^com!        -nargs=0 GetScript           call getscript#GetLatestVimScripts()$/;"	c
GetScripts	.\vim73\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()$/;"	c
GetSection	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:GetSection()$/;"	f
GetShIndent	.\vim73\indent\sh.vim	/^function! GetShIndent()$/;"	f
GetSnippet	.\vimfiles\plugin\snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	.\vimfiles\plugin\snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStmtStarterIndent	.\vim73\indent\sqlanywhere.vim	/^function s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
GetTFIndent	.\vim73\indent\tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	.\vim73\indent\tcl.vim	/^function GetTclIndent()$/;"	f
GetTeXIndent	.\vim73\indent\tex.vim	/^function GetTeXIndent()$/;"	f
GetTempfile	.\vim73\autoload\netrw.vim	/^fun! s:GetTempfile(fname)$/;"	f
GetTildeIndent	.\vim73\indent\tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetToken	.\vimfiles\plugin\calendar.vim	/^function! s:GetToken(src,dlm,cnt)$/;"	f
GetTreetopIndent	.\vim73\indent\treetop.vim	/^function GetTreetopIndent()$/;"	f
GetVHDLindent	.\vim73\indent\vhdl.vim	/^function GetVHDLindent()$/;"	f
GetVar	.\vimfiles\plugin\checksyntax.vim	/^function! s:GetVar(var, ft, manually) "{{{3$/;"	f
GetVerilogIndent	.\vim73\indent\verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVimIndent	.\vim73\indent\vim.vim	/^function GetVimIndent()$/;"	f
GetVisualSelection	.\vimfiles\autoload\mark.vim	/^function! s:GetVisualSelection()$/;"	f
GetVisualSelection	.\vimfiles\plugin\mark.vim	/^function! s:GetVisualSelection()$/;"	f
GetVisualSelectionEscaped	.\vimfiles\plugin\mark.vim	/^function! s:GetVisualSelectionEscaped(flags)$/;"	f
GetWidth	.\vim73\indent\objc.vim	/^function s:GetWidth(line, regexp)$/;"	f
GetWinDim	.\vimfiles\autoload\genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
GetXF86ConfIndent	.\vim73\indent\xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	.\vim73\indent\xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYaccIndent	.\vim73\indent\yacc.vim	/^function GetYaccIndent()$/;"	f
Get_brace_balance	.\vim73\indent\awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
Get_last_paren_idx	.\vim73\indent\r.vim	/^function! s:Get_last_paren_idx(line, o, c, pb)$/;"	f
Get_matching_brace	.\vim73\indent\r.vim	/^function! s:Get_matching_brace(linenr, o, c, delbrace)$/;"	f
Get_matching_if	.\vim73\indent\r.vim	/^function! s:Get_matching_if(linenr, delif)$/;"	f
Get_paren_balance	.\vim73\indent\r.vim	/^function! s:Get_paren_balance(line, o, c)$/;"	f
Get_prev_line	.\vim73\indent\awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
Get_prev_line	.\vim73\indent\r.vim	/^function s:Get_prev_line(lineno)$/;"	f
Get_type	.\vim73\ftplugin\ocaml.vim	/^    function! s:Get_type(mode)$/;"	f
GlobalSessionEliminateAll	.\vimfiles\plugin\gsession.vim	/^com! GlobalSessionEliminateAll       :cal s:gsession_eliminate_all()$/;"	c
GlobalSessionEliminateCurrent	.\vimfiles\plugin\gsession.vim	/^com! GlobalSessionEliminateCurrent   :cal s:gsession_eliminate_current()$/;"	c
GlobalSessionMake	.\vimfiles\plugin\gsession.vim	/^com! GlobalSessionMake               :cal s:gsession_make()$/;"	c
GlobalSessionMakeLocal	.\vimfiles\plugin\gsession.vim	/^com! GlobalSessionMakeLocal          :cal s:make_local_session()$/;"	c
GoSimplifiedChinese	.\vimfiles\plugin\TransferChinese.vim	/^com! -range=% GoSimplifiedChinese  <line1>,<line2>call GoSimplifiedChinese()$/;"	c
GoSimplifiedChinese	.\vimfiles\plugin\TransferChinese.vim	/^function! GoSimplifiedChinese() range abort$/;"	f
GoTraditionalChinese	.\vimfiles\plugin\TransferChinese.vim	/^com! -range=% GoTraditionalChinese <line1>,<line2>call GoTraditionalChinese()$/;"	c
GoTraditionalChinese	.\vimfiles\plugin\TransferChinese.vim	/^function! GoTraditionalChinese() range abort$/;"	f
GotoExplorerWindow	.\vimfiles\plugin\winmanager.vim	/^function! <SID>GotoExplorerWindow(which)$/;"	f
GotoNextExplorerInGroup	.\vimfiles\plugin\winmanager.vim	/^function! <SID>GotoNextExplorerInGroup(name, ...)$/;"	f
GotoWindow	.\vimfiles\plugin\winmanager.vim	/^function! <SID>GotoWindow(reqdWinNum)$/;"	f
Greek	.\vim73\syntax\tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
Grep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Grep$/;"	c
GrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file GrepAdd$/;"	c
GrepArgs	.\vimfiles\plugin\grep.vim	/^command! -nargs=* GrepArgs$/;"	c
GrepArgsAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* GrepArgsAdd$/;"	c
GrepBuffer	.\vimfiles\plugin\grep.vim	/^command! -nargs=* GrepBuffer$/;"	c
GrepBufferAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* GrepBufferAdd$/;"	c
Grep_Cygwin_Find	.\vimfiles\plugin\grep.vim	/^    let Grep_Cygwin_Find = 0$/;"	v
Grep_Default_Filelist	.\vimfiles\plugin\grep.vim	/^    let Grep_Default_Filelist = '*'$/;"	v
Grep_Default_Options	.\vimfiles\plugin\grep.vim	/^    let Grep_Default_Options = ''$/;"	v
Grep_Find_Path	.\vimfiles\plugin\grep.vim	/^    let Grep_Find_Path = 'find'$/;"	v
Grep_Find_Use_Xargs	.\vimfiles\plugin\grep.vim	/^    let Grep_Find_Use_Xargs = 1$/;"	v
Grep_Null_Device	.\vimfiles\plugin\grep.vim	/^        let Grep_Null_Device = 'NUL'$/;"	v
Grep_Null_Device	.\vimfiles\plugin\grep.vim	/^        let Grep_Null_Device = '\/dev\/null'$/;"	v
Grep_OpenQuickfixWindow	.\vimfiles\plugin\grep.vim	/^    let Grep_OpenQuickfixWindow = 1$/;"	v
Grep_Path	.\vimfiles\plugin\grep.vim	/^    let Grep_Path = 'grep'$/;"	v
Grep_Shell_Escape_Char	.\vimfiles\plugin\grep.vim	/^        let Grep_Shell_Escape_Char = ''$/;"	v
Grep_Shell_Escape_Char	.\vimfiles\plugin\grep.vim	/^        let Grep_Shell_Escape_Char = '\\'$/;"	v
Grep_Shell_Quote_Char	.\vimfiles\plugin\grep.vim	/^        let Grep_Shell_Quote_Char = "'"$/;"	v
Grep_Shell_Quote_Char	.\vimfiles\plugin\grep.vim	/^        let Grep_Shell_Quote_Char = ''$/;"	v
Grep_Skip_Dirs	.\vimfiles\plugin\grep.vim	/^    let Grep_Skip_Dirs = 'RCS CVS SCCS'$/;"	v
Grep_Skip_Files	.\vimfiles\plugin\grep.vim	/^    let Grep_Skip_Files = '*~ *,v s.*'$/;"	v
Grep_Xargs_Options	.\vimfiles\plugin\grep.vim	/^    let Grep_Xargs_Options = '--null'$/;"	v
Grep_Xargs_Path	.\vimfiles\plugin\grep.vim	/^    let Grep_Xargs_Path = 'xargs'$/;"	v
GroovyHiLink	.\vim73\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	.\vim73\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
GroupTags	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>GroupTags() range$/;"	f
H	.\vim73\macros\less.vim	/^map H h$/;"	m
HamGetFreeIndent	.\vim73\indent\hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	.\vim73\indent\hamster.vim	/^function HamGetIndent(lnum)$/;"	f
Header	.\vim73\optwin.vim	/^fun! <SID>Header(text)$/;"	f
Help	.\vim73\macros\less.vim	/^fun! s:Help()$/;"	f
Helpfind	.\vim73\menu.vim	/^fun! s:Helpfind()$/;"	f
Hexplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Hexplore	call netrw#Explore(<count>,1,2+<bang>0,<q-args>)$/;"	c
Hi	.\vim73\syntax\sdl.vim	/^	command -nargs=+ Hi     hi <args>$/;"	c
Hi	.\vim73\syntax\sdl.vim	/^	command -nargs=+ Hi     hi def <args>$/;"	c
Hi	.\vim73\syntax\xpm2.vim	/^  command -nargs=+ Hi hi <args>$/;"	c
Hi	.\vim73\syntax\xpm2.vim	/^  command -nargs=+ Hi hi def <args>$/;"	c
HiDefaults	.\vimfiles\autoload\rails.vim	/^function! s:HiDefaults()$/;"	f
HiFold	.\vim73\syntax\yacc.vim	/^ com! -nargs=+ HiFold	<args> fold$/;"	c
HiFold	.\vim73\syntax\yacc.vim	/^ com! -nargs=+ HiFold	<args>$/;"	c
HiLink	.\vim73\syntax\a65.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\a65.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\abap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\abap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\abc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\abc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\abel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\abel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\acedb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\acedb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\aflex.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\aflex.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\amiga.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\amiga.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\aml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\aml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ampl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ampl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\antlr.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\antlr.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\apache.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\apache.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\atlas.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\atlas.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\automake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\automake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ave.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ave.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\awk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\awk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\b.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\b.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\baan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\baan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\basic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\basic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\bc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\bc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\bib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\bib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\blank.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\blank.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\bst.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\bst.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\btm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\btm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\bzr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\bzr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cabal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cabal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cdl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cdl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cfg.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cfg.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\change.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\change.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\changelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\changelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\chill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\chill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\clean.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\clean.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\clipper.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\clipper.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cmake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cmake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cobol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cobol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\config.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\config.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\crontab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\crontab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\csc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\csc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\csh.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\csh.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\csp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\csp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cterm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cterm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cupl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cupl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cvs.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cvs.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cweb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cweb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dcd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dcd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\def.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\def.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\desc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\desc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\desktop.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\desktop.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\diva.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\diva.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\django.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\django.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\docbk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\docbk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dosini.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dosini.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dracula.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dracula.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dtd.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dtd.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dtml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dtml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dylan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dylan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ecd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ecd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\edif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\edif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\elf.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\elf.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\erlang.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\erlang.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\esterel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\esterel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\eviews.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\eviews.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\exim.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\exim.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\expect.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\expect.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\exports.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\exports.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\falcon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\fgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\fgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\focexec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\focexec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\form.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\form.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\forth.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\forth.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\fortran.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\fortran.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gdb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gdb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\grads.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\grads.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gretl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gretl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\hamster.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\hamster.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\haskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\haskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\hb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\hb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\hercules.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\hercules.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\hex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\hex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\hog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\hog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ia64.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ia64.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\icon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\icon.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\idl.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\idlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\idlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\inform.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\inform.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\inittab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\inittab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ishd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ishd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\iss.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\iss.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ist.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ist.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jal.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jal.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jargon.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jargon.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jess.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jess.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\jsp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\jsp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\kix.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\kix.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\kscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\kscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\kwt.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\kwt.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lace.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lace.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\latte.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\latte.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ldif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ldif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lilo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lilo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lisp.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lite.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lite.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lotos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lotos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lout.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lout.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lpc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lpc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\m4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\m4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mailcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mailcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\make.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\make.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\man.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\man.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\maple.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\maple.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\masm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\masm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\master.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\master.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\matlab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\matlab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\maxima.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\maxima.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mgp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mgp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mmix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mmix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\modula2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\modula2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\modula3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\modula3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\monk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\monk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\msidl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\msidl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\msql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\msql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mupad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mupad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mush.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mush.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\mysql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\mysql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\named.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\named.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\nasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\nasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\nastran.vim	/^     command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\natural.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\natural.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ncf.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ncf.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\nqc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\nqc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\nroff.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\nroff.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\nsis.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\nsis.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\obj.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\obj.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\objc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\objc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\occam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\occam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\openroad.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\openroad.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\opl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\opl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ora.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ora.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pascal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pascal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pccts.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pccts.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\perl6.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\perl6.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\php.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\php.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pike.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pike.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pine.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pine.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\plm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\plm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\plsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\plsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\po.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\po.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\postscr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\postscr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ppd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ppd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\procmail.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\procmail.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\progress.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\progress.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\prolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\prolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\psf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\psf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\radiance.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\radiance.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rcs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rcs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rebol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rebol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\registry.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\registry.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\remind.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\remind.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rexx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rexx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\robots.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\robots.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight default link <args>$/;"	c
HiLink	.\vim73\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight link <args>$/;"	c
HiLink	.\vim73\syntax\rtf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\rtf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\samba.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\samba.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sas.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sas.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sather.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sather.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\scheme.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\scheme.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\scilab.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\scilab.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sd.vim	/^                command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sd.vim	/^                command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sdl.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sdl.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sed.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sed.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sicad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sicad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\simula.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\simula.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sinda.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sinda.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\skill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\skill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\slang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\slang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\slice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\slice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\smarty.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\smarty.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\smil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\smil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\smith.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\smith.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\spec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\spec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\specman.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\specman.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\spice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\spice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\splint.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\splint.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\spup.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\spup.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqlanywhere.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sqr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sqr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\squid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\squid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\st.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\st.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\stp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\stp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\strace.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\strace.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\svn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\svn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tads.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tads.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tags.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tags.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tak.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tak.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\takout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\takout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tex.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tex.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\texmf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\texmf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tidy.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tidy.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tli.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tli.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\trasys.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\trasys.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\tssop.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\tssop.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\uc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\uc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\uil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\uil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vera.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vera.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\verilog.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\verilog.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\virata.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\virata.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vrml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vrml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\wget.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\wget.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\wml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\wml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\wsml.vim	/^       command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\wsml.vim	/^       command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xkb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xkb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xmath.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xmath.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xpm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xpm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\xs.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xxd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\xxd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vim73\syntax\yacc.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\z8a.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vim73\syntax\z8a.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\jquery.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\jquery.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\json.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\json.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\php.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\php.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\svn.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\svn.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\vimfiles\syntax\svnlog.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\vimfiles\syntax\svnlog.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
Highlight_Matching_Pair	.\vim73\plugin\matchparen.vim	/^function! s:Highlight_Matching_Pair()$/;"	f
HtmlClosing	.\vim73\syntax\2html.vim	/^  function! s:HtmlClosing(id)$/;"	f
HtmlColor	.\vim73\syntax\2html.vim	/^  function! s:HtmlColor(color)$/;"	f
HtmlFormat	.\vim73\syntax\2html.vim	/^function! s:HtmlFormat(text, style_name, diff_style_name)$/;"	f
HtmlHiLink	.\vim73\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	.\vim73\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	.\vimfiles\syntax\mkd.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	.\vimfiles\syntax\mkd.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentClose	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentCloseAlt	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	.\vim73\indent\html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentGetter	.\vimfiles\indent\html.vim	/^fun! HtmlIndentGetter(lnum)$/;"	f
HtmlIndentOpen	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpen	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentOpenAlt	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentPush	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	.\vim73\indent\html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndentSum	.\vimfiles\indent\html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlOpening	.\vim73\syntax\2html.vim	/^  function! s:HtmlOpening(id)$/;"	f
IH	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang IH call AlternateOpenFileUnderCursor("n<bang>", <f-args>)$/;"	c
IHN	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang IHN call AlternateOpenNextFile("<bang>")$/;"	c
IHS	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang IHS call AlternateOpenFileUnderCursor("h<bang>", <f-args>)$/;"	c
IHT	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang IHT call AlternateOpenFileUnderCursor("t<bang>", <f-args>)$/;"	c
IHV	.\vimfiles\plugin\a.vim	/^comm! -nargs=? -bang IHV call AlternateOpenFileUnderCursor("v<bang>", <f-args>)$/;"	c
ISBN	.\vim73\tutor\tutor.pl	/^	ISBN: 83-7197-472-8$/;"	l
ISBN	.\vim73\tutor\tutor.pl	/^	ISBN: 83-7197-539-2$/;"	l
InComment	.\vim73\autoload\xmlcomplete.vim	/^function! s:InComment()$/;"	f
InComment	.\vimfiles\autoload\method_list.vim	/^fun s:InComment(line, col)$/;"	f
InComment	.\vimfiles\autoload\objc\method_list.vim	/^fun s:InComment(line, col)$/;"	f
InCommentAt	.\vim73\autoload\xmlcomplete.vim	/^function! s:InCommentAt(line, col)$/;"	f
IncreaseFunc	.\vim73\ftplugin\cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
IncreaseIndent	.\vim73\ftplugin\cobol.vim	/^function! s:IncreaseIndent()$/;"	f
Init	.\vimfiles\plugin\supertab.vim	/^function! s:Init()$/;"	f
InitBuffer	.\vimfiles\plugin\supertab.vim	/^function! s:InitBuffer()$/;"	f
InitMarkVariables	.\vimfiles\autoload\mark.vim	/^function! s:InitMarkVariables()$/;"	f
InitMarkVariables	.\vimfiles\plugin\mark.vim	/^function! s:InitMarkVariables()$/;"	f
InitializeMRUList	.\vimfiles\plugin\winmanager.vim	/^function! <SID>InitializeMRUList()$/;"	f
InitializeVariables	.\vimfiles\plugin\changeColorScheme.vim	/^function! InitializeVariables()$/;"	f
Insert	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert            :call dbext#DB_execSql("insert " . <q-args>)$/;"	c
InsertRefs	.\vim73\macros\matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertRefs	.\vimfiles\plugin\matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
Instack	.\vim73\autoload\xmlcomplete.vim	/^function! s:Instack(el, sname)$/;"	f
Invert	.\vimfiles\autoload\rails.vim	/^function! s:Invert(bang)$/;"	f
InvokeFuncs	.\vimfiles\autoload\genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsColComment	.\vim73\indent\sqlanywhere.vim	/^function s:IsColComment(lnum, cnum)$/;"	f
IsComment	.\vimfiles\indent\javascript.vim	/^function! s:IsComment(lnum)$/;"	f
IsExplorerBuffer	.\vimfiles\plugin\winmanager.vim	/^function! <SID>IsExplorerBuffer(num)$/;"	f
IsExplorerGroupVisible	.\vimfiles\plugin\winmanager.vim	/^function! <SID>IsExplorerGroupVisible(i, ...)$/;"	f
IsExplorerVisible	.\vimfiles\plugin\winmanager.vim	/^function! <SID>IsExplorerVisible(i)$/;"	f
IsInClassDef	.\vim73\autoload\rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInClassDef	.\vimfiles\autoload\rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInComment	.\vimfiles\indent\javascript.vim	/^function! s:IsInComment(lnum, cnum) $/;"	f
IsInString	.\vim73\indent\ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	.\vimfiles\indent\ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	.\vim73\indent\falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	.\vim73\indent\ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	.\vimfiles\indent\ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	.\vim73\indent\ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	.\vimfiles\indent\ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLineComment	.\vim73\indent\sqlanywhere.vim	/^function s:IsLineComment(lnum)$/;"	f
IsOnlyVertical	.\vimfiles\plugin\winmanager.vim	/^function! <SID>IsOnlyVertical()$/;"	f
IsPosInClassDef	.\vim73\autoload\rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPosInClassDef	.\vimfiles\autoload\rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsSerialName	.\vim73\tools\xcmdsrv_client.c	/^IsSerialName(str)$/;"	f	file:
IsSerialName	.\vim73\tools\xcmdsrv_client.c	/^static int	IsSerialName __ARGS((char *name));$/;"	p	file:	signature:(char *name)
IsWinManagerVisible	.\vimfiles\plugin\winmanager.vim	/^function! IsWinManagerVisible()$/;"	f
IslinePHP	.\vim73\indent\php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
IslinePHP	.\vimfiles\indent\php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
JavaHiLink	.\vim73\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	.\vim73\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
Jsbeautify	.\vimfiles\plugin\jsbeautify.vim	/^function! g:Jsbeautify()$/;"	f
Justify	.\vim73\macros\justify.vim	/^com! -range -nargs=* Justify <line1>,<line2>call Justify(<f-args>)$/;"	c
Justify	.\vim73\macros\justify.vim	/^function! Justify(...) range$/;"	f
Justify_error	.\vim73\macros\justify.vim	/^function! Justify_error(message)$/;"	f
K	.\vim73\ftplugin\gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
K	.\vimfiles\ftplugin\gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
L9Assert	.\vimfiles\plugin\l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	.\vimfiles\plugin\l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	.\vimfiles\plugin\l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	.\vimfiles\plugin\l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	.\vimfiles\plugin\l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	.\vimfiles\plugin\l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	.\vimfiles\plugin\l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	.\vimfiles\plugin\l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	.\vimfiles\plugin\l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	.\vimfiles\plugin\l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LINELENGTH	.\vim73\tools\ccfilter.c	21;"	d	file:
LOOP	.\vimfiles\doc\vim2html.pl	/^		LOOP:$/;"	l
LUB	.\vim73\tutor\tutor.pl	/^	     LUB:	    <ESC> :wq<ENTER>  by zmiany zachowaæ.$/;"	l
Large	.\vimfiles\plugin\LargeFile.vim	/^com! -bang Large		call s:LargeFile(<bang>0,expand("%"))$/;"	c
LargeFile	.\vimfiles\plugin\LargeFile.vim	/^augroup LargeFile$/;"	a
LargeFile	.\vimfiles\plugin\LargeFile.vim	/^fun! s:LargeFile(force,fname)$/;"	f
LeadingWhiteSpace	.\vim73\indent\objc.vim	/^function s:LeadingWhiteSpace(line)$/;"	f
LeaveMethodList	.\vimfiles\autoload\method_list.vim	/^fun s:LeaveMethodList()$/;"	f
LeaveMethodList	.\vimfiles\autoload\objc\method_list.vim	/^fun s:LeaveMethodList()$/;"	f
Line	.\vim73\tools\ccfilter.c	/^char	       Line[LINELENGTH];$/;"	v
Line2	.\vim73\tools\ccfilter.c	/^char	       Line2[LINELENGTH];$/;"	v
LineHasOpeningBrackets	.\vim73\indent\ruby.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineIsBlank	.\vimfiles\syntax\googlecodewiki.vim	/^function s:LineIsBlank(str)$/;"	f
ListMethods	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^com! -buffer ListMethods call objc#method_list#Activate(1)$/;"	c
LoadBufferMenu	.\vim73\menu.vim	/^  augroup LoadBufferMenu$/;"	a
LoadColorScheme	.\vimfiles\plugin\changeColorScheme.vim	/^function! LoadColorScheme()$/;"	f
LoadFTPlugin	.\vim73\ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f
LoadIndent	.\vim73\indent.vim	/^  func! s:LoadIndent()$/;"	f
LoadView	.\vimfiles\plugin\wintagexplorer.vim	/^function! s:LoadView(foldInfo)$/;"	f
LoadVimSesn	.\vim73\menu.vim	/^fun! s:LoadVimSesn()$/;"	f
Load_annotation	.\vim73\ftplugin\ocaml.vim	/^    function! s:Load_annotation()$/;"	f
LocalBrowse	.\vim73\plugin\netrwPlugin.vim	/^fun! s:LocalBrowse(dirname)$/;"	f
LocalBrowseShellCmdRefresh	.\vim73\autoload\netrw.vim	/^fun! s:LocalBrowseShellCmdRefresh()$/;"	f
LocalFastBrowser	.\vim73\autoload\netrw.vim	/^fun! s:LocalFastBrowser()$/;"	f
LocalListing	.\vim73\autoload\netrw.vim	/^fun! s:LocalListing()$/;"	f
LocalModelines	.\vimfiles\autoload\rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
Locate_annotation	.\vim73\ftplugin\ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
Log	.\vimfiles\autoload\rails.vim	/^function! s:Log(bang,arg)$/;"	f
Log	.\vimfiles\indent\javascript.vim	/^function! s:Log(msg)$/;"	f
LogBufferClass	.\vimfiles\plugin\voom\voom.py	/^class LogBufferClass: #{{{2$/;"	c	inherits:
LookupName	.\vim73\tools\xcmdsrv_client.c	/^LookupName(dpy, name, delete, loose)$/;"	f	file:
LookupName	.\vim73\tools\xcmdsrv_client.c	/^static Window	LookupName __ARGS((Display *dpy, char *name,$/;"	p	file:	signature:(Display *dpy, char *name, int delete, char **loose)
MAKE_HEAD	.\vimfiles\plugin\voom\voom.py	/^MAKE_HEAD = {}$/;"	v
MARKER	.\vimfiles\plugin\voom\voom.py	/^MARKER = '{{{'                            #}}}$/;"	v
MARKER_RE	.\vimfiles\plugin\voom\voom.py	/^MARKER_RE = re.compile(r'{{{(\\d+)(x?)')   #}}}$/;"	v
MAX_PROP_WORDS	.\vim73\tools\xcmdsrv_client.c	67;"	d	file:
MRU	.\vimfiles\plugin\mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete MRU$/;"	c
MRUGet	.\vimfiles\plugin\winmanager.vim	/^function! <SID>MRUGet(slot)$/;"	f
MRUPop	.\vimfiles\plugin\winmanager.vim	/^function! <SID>MRUPop()$/;"	f
MRUPush	.\vimfiles\plugin\winmanager.vim	/^function! <SID>MRUPush()$/;"	f
MRU_AddFile	.\vimfiles\plugin\mru.vim	/^function! s:MRU_AddFile(acmd_bufnr)$/;"	f
MRU_Add_Menu	.\vimfiles\plugin\mru.vim	/^    let MRU_Add_Menu = 1$/;"	v
MRU_Auto_Close	.\vimfiles\plugin\mru.vim	/^    let MRU_Auto_Close = 1$/;"	v
MRU_Cmd	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Cmd(pat)$/;"	f
MRU_Complete	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Complete(ArgLead, CmdLine, CursorPos)$/;"	f
MRU_Edit_File	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Edit_File(filename, sanitized)$/;"	f
MRU_Exclude_Files	.\vimfiles\plugin\mru.vim	/^    let MRU_Exclude_Files = ''$/;"	v
MRU_File	.\vimfiles\plugin\mru.vim	/^                let MRU_File = $USERPROFILE . '\\_vim_mru_files'$/;"	v
MRU_File	.\vimfiles\plugin\mru.vim	/^        let MRU_File = $HOME . '\/.vim_mru_files'$/;"	v
MRU_File	.\vimfiles\plugin\mru.vim	/^        let MRU_File = $VIM . '\/_vim_mru_files'$/;"	v
MRU_Filter_Not_Exists	.\vimfiles\plugin\mru.vim	/^    let MRU_Filter_Not_Exists = 1$/;"	v
MRU_Include_Files	.\vimfiles\plugin\mru.vim	/^    let MRU_Include_Files = ''$/;"	v
MRU_LoadList	.\vimfiles\plugin\mru.vim	/^function! s:MRU_LoadList()$/;"	f
MRU_Max_Entries	.\vimfiles\plugin\mru.vim	/^    let MRU_Max_Entries = 9$/;"	v
MRU_Open_Window	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Open_Window(...)$/;"	f
MRU_Refresh_Menu	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Refresh_Menu()$/;"	f
MRU_SaveList	.\vimfiles\plugin\mru.vim	/^function! s:MRU_SaveList()$/;"	f
MRU_Use_Current_Window	.\vimfiles\plugin\mru.vim	/^    let MRU_Use_Current_Window = 0$/;"	v
MRU_Warn_Msg	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Warn_Msg(msg)$/;"	f
MRU_Window_Edit_File	.\vimfiles\plugin\mru.vim	/^function! s:MRU_Window_Edit_File(win_opt)$/;"	f
MRU_Window_Height	.\vimfiles\plugin\mru.vim	/^    let MRU_Window_Height = 8$/;"	v
MRU_add_files_to_menu	.\vimfiles\plugin\mru.vim	/^function! s:MRU_add_files_to_menu(prefix, file_list)$/;"	f
MRU_escape_filename	.\vimfiles\plugin\mru.vim	/^function! s:MRU_escape_filename(fname)$/;"	f
MainBlockIndent	.\vim73\indent\ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
Make	.\vimfiles\plugin\checksyntax.vim	/^fun! s:Make()$/;"	f
MakeDarker	.\vimfiles\colors\bandit.vim	/^function! s:MakeDarker(rgb)$/;"	f
MakeMenu	.\vim73\ftplugin\debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeSnip	.\vimfiles\plugin\snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MakeSshCmd	.\vim73\autoload\netrw.vim	/^fun! s:MakeSshCmd(sshcmd)$/;"	f
MakeTag	.\vim73\tools\pltags.pl	/^sub MakeTag($$$$$)$/;"	s
Man	.\vim73\ftplugin\man.vim	/^  com -nargs=+ Man call s:GetPage(<f-args>)$/;"	c
ManualCompletionEnter	.\vimfiles\plugin\supertab.vim	/^function! s:ManualCompletionEnter()$/;"	f
Mark	.\vimfiles\autoload\mark.vim	/^augroup Mark$/;"	a
Mark	.\vimfiles\plugin\mark.vim	/^command! -nargs=? Mark call s:DoMark(<f-args>)$/;"	c
MarkCurrentWord	.\vimfiles\plugin\mark.vim	/^function! s:MarkCurrentWord()$/;"	f
MarkDirs	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:MarkDirs()$/;"	f
MarkMatch	.\vimfiles\autoload\mark.vim	/^function! s:MarkMatch( indices, expr )$/;"	f
MarkOrigBufferForSetup	.\vimfiles\plugin\vcscommand.vim	/^function! s:MarkOrigBufferForSetup(buffer)$/;"	f
MarkRegex	.\vimfiles\plugin\mark.vim	/^function! s:MarkRegex(...) " MarkRegex(regexp)$/;"	f
MarkScope	.\vimfiles\autoload\mark.vim	/^function! s:MarkScope( indices, expr )$/;"	f
Match	.\vim73\indent\ruby.vim	/^function s:Match(lnum, regex)$/;"	f
Match	.\vimfiles\autoload\genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
Match	.\vimfiles\indent\ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchAll	.\vimfiles\autoload\man.vim	/^fun s:MatchAll(haystack, needle)$/;"	f
MatchAll	.\vimfiles\autoload\objc\man.vim	/^fun s:MatchAll(haystack, needle)$/;"	f
MatchCount	.\vim73\indent\pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
MatchDebug	.\vim73\macros\matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchDebug	.\vimfiles\plugin\matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchLast	.\vim73\indent\ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchLast	.\vimfiles\indent\ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
Match_borders	.\vim73\ftplugin\ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
Match_data	.\vim73\ftplugin\ocaml.vim	/^    function! s:Match_data()$/;"	f
Match_debug	.\vim73\macros\matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_debug	.\vimfiles\plugin\matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	.\vim73\macros\matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
Match_wrapper	.\vimfiles\plugin\matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
McSetf	.\vim73\filetype.vim	/^func! s:McSetf()$/;"	f
MenuExplOpen	.\vim73\menu.vim	/^    fun MenuExplOpen()$/;"	f
MetaNextNonblankNoncomment	.\vim73\indent\mp.vim	/^function! MetaNextNonblankNoncomment(pos)$/;"	f
MetaPrevNonblankNoncomment	.\vim73\indent\mp.vim	/^function! MetaPrevNonblankNoncomment(pos)$/;"	f
MetaSearchNoncomment	.\vim73\indent\mp.vim	/^function! MetaSearchNoncomment(pattern, ...)$/;"	f
MkViewNoNestedFolds	.\vimfiles\plugin\wintagexplorer.vim	/^function! s:MkViewNoNestedFolds()$/;"	f
MkVimball	.\vim73\plugin\vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball				call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
ModuloIndent	.\vim73\indent\sqlanywhere.vim	/^function s:ModuloIndent(ind)$/;"	f
MultiMatch	.\vim73\macros\matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiMatch	.\vimfiles\plugin\matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
NAME	.\vimfiles\plugin\voom\voom_mode_python.py	/^NAME = token.NAME$/;"	v
NERDTree	.\vimfiles\plugin\NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	.\vimfiles\plugin\NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeClose	.\vimfiles\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeFromBookmark	.\vimfiles\plugin\NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeGetCurrentNode	.\vimfiles\plugin\NERD_tree.vim	/^function! NERDTreeGetCurrentNode()$/;"	f
NERDTreeGetCurrentPath	.\vimfiles\plugin\NERD_tree.vim	/^function! NERDTreeGetCurrentPath()$/;"	f
NERDTreeHijackNetrw	.\vimfiles\plugin\NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	.\vimfiles\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeToggle	.\vimfiles\plugin\NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NEWLINE	.\vimfiles\plugin\voom\voom_mode_python.py	/^NEWLINE = token.NEWLINE$/;"	v
NFH_bmp	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_bmp(bmpfile)$/;"	f
NFH_doc	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_doc(doc)$/;"	f
NFH_eps	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_eps(eps)$/;"	f
NFH_fig	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_fig(fig)$/;"	f
NFH_gif	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_gif(giffile)$/;"	f
NFH_htm	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_htm(pagefile)$/;"	f
NFH_html	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_html(pagefile)$/;"	f
NFH_jpg	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_jpg(jpgfile)$/;"	f
NFH_obj	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_obj(obj)$/;"	f
NFH_pdf	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pdf(pdf)$/;"	f
NFH_png	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_png(pngfile)$/;"	f
NFH_pnm	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pnm(pnmfile)$/;"	f
NFH_ps	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_ps(ps)$/;"	f
NFH_sxw	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_sxw(sxw)$/;"	f
NFH_xls	.\vim73\autoload\netrwFileHandlers.vim	/^fun! s:NFH_xls(xls)$/;"	f
NamedSessionLoad	.\vimfiles\plugin\gsession.vim	/^com! NamedSessionLoad    :cal s:load_namedsession_global()$/;"	c
NamedSessionLoadCwd	.\vimfiles\plugin\gsession.vim	/^com! NamedSessionLoadCwd :cal s:load_namedsession_cwd()$/;"	c
NamedSessionMake	.\vimfiles\plugin\gsession.vim	/^com! NamedSessionMake    :cal s:make_namedsession_global()$/;"	c
NamedSessionMakeCwd	.\vimfiles\plugin\gsession.vim	/^com! NamedSessionMakeCwd :cal s:make_namedsession_cwd()$/;"	c
NamedSessionMenu	.\vimfiles\plugin\gsession.vim	/^com! NamedSessionMenu    :cal s:toggle_namedsession_menu()$/;"	c
Navcommand	.\vimfiles\autoload\rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NetReadFixup	.\vim73\autoload\netrw.vim	/^ fun! NetReadFixup(method, line1, line2)$/;"	f
NetSortSequence	.\vim73\autoload\netrw.vim	/^fun! s:NetSortSequence(islocal)$/;"	f
NetUserPass	.\vim73\autoload\netrw.vim	/^fun! NetUserPass(...)$/;"	f
NetUserPass	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=*		NetUserPass	call NetUserPass(<f-args>)$/;"	c
NetUserPass	.\vim73\plugin\netrwPlugin.vim	/^fun! NetUserPass(...)$/;"	f
NetrwBMShow	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBMShow()$/;"	f
NetrwBannerCtrl	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBannerCtrl(islocal)$/;"	f
NetrwBookHistHandler	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBookHistHandler(chg,curdir)$/;"	f
NetrwBookHistRead	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBookHistRead()$/;"	f
NetrwBookHistSave	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBookHistSave()$/;"	f
NetrwBookmarkMenu	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBookmarkMenu()$/;"	f
NetrwBrowse	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBrowse(islocal,dirname)$/;"	f
NetrwBrowseChgDir	.\vim73\autoload\netrw.vim	/^fun! s:NetrwBrowseChgDir(islocal,newdir,...)$/;"	f
NetrwChgPerm	.\vim73\autoload\netrw.vim	/^fun! s:NetrwChgPerm(islocal,curdir)$/;"	f
NetrwClean	.\vim73\plugin\netrwPlugin.vim	/^com! -bang	NetrwClean	call netrw#NetrwClean(<bang>0)$/;"	c
NetrwClearExplore	.\vim73\autoload\netrw.vim	/^fun! s:NetrwClearExplore()$/;"	f
NetrwCursor	.\vim73\autoload\netrw.vim	/^fun! s:NetrwCursor()$/;"	f
NetrwDelete	.\vim73\autoload\netrw.vim	/^fun! s:NetrwDelete(path)$/;"	f
NetrwEnew	.\vim73\autoload\netrw.vim	/^fun! s:NetrwEnew(...)$/;"	f
NetrwExploreListUniq	.\vim73\autoload\netrw.vim	/^fun! s:NetrwExploreListUniq(explist)$/;"	f
NetrwFileInfo	.\vim73\autoload\netrw.vim	/^fun! s:NetrwFileInfo(islocal,fname)$/;"	f
NetrwForceChgDir	.\vim73\autoload\netrw.vim	/^fun! s:NetrwForceChgDir(islocal,newdir)$/;"	f
NetrwForceFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwForceFile(islocal,newfile)$/;"	f
NetrwGetBuffer	.\vim73\autoload\netrw.vim	/^fun! s:NetrwGetBuffer(islocal,dirname)$/;"	f
NetrwGetFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwGetFile(readcmd, tfile, method)$/;"	f
NetrwGetWord	.\vim73\autoload\netrw.vim	/^fun! s:NetrwGetWord()$/;"	f
NetrwGetcwd	.\vim73\autoload\netrw.vim	/^fun! s:NetrwGetcwd(doesc)$/;"	f
NetrwHidden	.\vim73\autoload\netrw.vim	/^fun! s:NetrwHidden(islocal)$/;"	f
NetrwHide	.\vim73\autoload\netrw.vim	/^fun! s:NetrwHide(islocal)$/;"	f
NetrwHideEdit	.\vim73\autoload\netrw.vim	/^fun! s:NetrwHideEdit(islocal)$/;"	f
NetrwHome	.\vim73\autoload\netrw.vim	/^fun! s:NetrwHome()$/;"	f
NetrwInit	.\vim73\autoload\netrw.vim	/^fun s:NetrwInit(varname,value)$/;"	f
NetrwLeftmouse	.\vim73\autoload\netrw.vim	/^fun! s:NetrwLeftmouse(islocal)$/;"	f
NetrwListHide	.\vim73\autoload\netrw.vim	/^fun! s:NetrwListHide()$/;"	f
NetrwListSettings	.\vim73\autoload\netrw.vim	/^fun! s:NetrwListSettings(islocal)$/;"	f
NetrwListStyle	.\vim73\autoload\netrw.vim	/^fun! s:NetrwListStyle(islocal)$/;"	f
NetrwLocalRename	.\vim73\autoload\netrw.vim	/^fun! s:NetrwLocalRename(path) range$/;"	f
NetrwLocalRm	.\vim73\autoload\netrw.vim	/^fun! s:NetrwLocalRm(path) range$/;"	f
NetrwLocalRmFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwLocalRmFile(path,fname,all)$/;"	f
NetrwMakeDir	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMakeDir(usrhost)$/;"	f
NetrwMaps	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMaps(islocal)$/;"	f
NetrwMarkFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFile(islocal,fname)$/;"	f
NetrwMarkFileCompress	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileCompress(islocal)$/;"	f
NetrwMarkFileCopy	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileCopy(islocal)$/;"	f
NetrwMarkFileDiff	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileDiff(islocal)$/;"	f
NetrwMarkFileEdit	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileEdit(islocal)$/;"	f
NetrwMarkFileExe	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileExe(islocal)$/;"	f
NetrwMarkFileGrep	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileGrep(islocal)$/;"	f
NetrwMarkFileMove	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileMove(islocal)$/;"	f
NetrwMarkFilePrint	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFilePrint(islocal)$/;"	f
NetrwMarkFileRegexp	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileRegexp(islocal)$/;"	f
NetrwMarkFileSource	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileSource(islocal)$/;"	f
NetrwMarkFileTag	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileTag(islocal)$/;"	f
NetrwMarkFileTgt	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileTgt(islocal)$/;"	f
NetrwMarkFileVimCmd	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkFileVimCmd(islocal)$/;"	f
NetrwMarkHideSfx	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMarkHideSfx(islocal)$/;"	f
NetrwMenu	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMenu(domenu)$/;"	f
NetrwMethod	.\vim73\autoload\netrw.vim	/^fun! s:NetrwMethod(choice)$/;"	f
NetrwObtain	.\vim73\autoload\netrw.vim	/^fun! s:NetrwObtain(islocal)$/;"	f
NetrwOpenFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwOpenFile(islocal)$/;"	f
NetrwOptionRestore	.\vim73\autoload\netrw.vim	/^fun! s:NetrwOptionRestore(vt)$/;"	f
NetrwOptionSave	.\vim73\autoload\netrw.vim	/^fun! s:NetrwOptionSave(vt)$/;"	f
NetrwPrevWinOpen	.\vim73\autoload\netrw.vim	/^fun! s:NetrwPrevWinOpen(islocal)$/;"	f
NetrwPreview	.\vim73\autoload\netrw.vim	/^fun! s:NetrwPreview(path) range$/;"	f
NetrwRefresh	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRefresh(islocal,dirname)$/;"	f
NetrwRefreshDir	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRefreshDir(islocal,dirname)$/;"	f
NetrwRemoteFtpCmd	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRemoteFtpCmd(path,listcmd)$/;"	f
NetrwRemoteListing	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRemoteListing()$/;"	f
NetrwRemoteRename	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRemoteRename(usrhost,path) range$/;"	f
NetrwRemoteRm	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRemoteRm(usrhost,path) range$/;"	f
NetrwRemoteRmFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRemoteRmFile(path,rmfile,all)$/;"	f
NetrwRestoreWordPosn	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRestoreWordPosn()$/;"	f
NetrwRexplore	.\vim73\autoload\netrw.vim	/^fun! s:NetrwRexplore(islocal,dirname)$/;"	f
NetrwSafeOptions	.\vim73\autoload\netrw.vim	/^fun! s:NetrwSafeOptions()$/;"	f
NetrwSaveWordPosn	.\vim73\autoload\netrw.vim	/^fun! s:NetrwSaveWordPosn()$/;"	f
NetrwSetSort	.\vim73\autoload\netrw.vim	/^fun! s:NetrwSetSort()$/;"	f
NetrwSettingHelp	.\vim73\autoload\netrwSettings.vim	/^fun! NetrwSettingHelp()$/;"	f
NetrwSettings	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=0	NetrwSettings	call netrwSettings#NetrwSettings()$/;"	c
NetrwSortStyle	.\vim73\autoload\netrw.vim	/^fun! s:NetrwSortStyle(islocal)$/;"	f
NetrwSplit	.\vim73\autoload\netrw.vim	/^fun! s:NetrwSplit(mode)$/;"	f
NetrwStatusLine	.\vim73\autoload\netrw.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwStatusLine	.\vim73\plugin\netrwPlugin.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwTreeDir	.\vim73\autoload\netrw.vim	/^fun! s:NetrwTreeDir()$/;"	f
NetrwTreeDisplay	.\vim73\autoload\netrw.vim	/^fun! s:NetrwTreeDisplay(dir,depth)$/;"	f
NetrwTreeListing	.\vim73\autoload\netrw.vim	/^fun! s:NetrwTreeListing(dirname)$/;"	f
NetrwUnMarkFile	.\vim73\autoload\netrw.vim	/^fun! s:NetrwUnMarkFile(islocal)$/;"	f
NetrwUnmarkAll	.\vim73\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll()$/;"	f
NetrwUnmarkAll2	.\vim73\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll2()$/;"	f
NetrwUnmarkList	.\vim73\autoload\netrw.vim	/^fun! s:NetrwUnmarkList(curbufnr,curdir)$/;"	f
NetrwUpload	.\vim73\autoload\netrw.vim	/^fun! s:NetrwUpload(fname,tgt,...)$/;"	f
NetrwWideListing	.\vim73\autoload\netrw.vim	/^fun! s:NetrwWideListing()$/;"	f
Network	.\vim73\plugin\netrwPlugin.vim	/^augroup Network$/;"	a
NewChangelogEntry	.\vim73\ftplugin\changelog.vim	/^    command! -nargs=0 NewChangelogEntry call s:new_changelog_entry()$/;"	c
NewQuickTemplate	.\vimfiles\plugin\QuickTemplate.vim	/^com! -nargs=1 -range=% NewQuickTemplate call NewQuickTemplate(<f-args>, 'window')$/;"	c
NewQuickTemplate	.\vimfiles\plugin\QuickTemplate.vim	/^function! NewQuickTemplate(name, mode)$/;"	f
NewQuickTemplateTab	.\vimfiles\plugin\QuickTemplate.vim	/^    com! -nargs=1 -range=% NewQuickTemplateTab call NewQuickTemplate(<f-args>, 'tab')$/;"	c
NewVersion	.\vim73\ftplugin\debchangelog.vim	/^function NewVersion()$/;"	f
Nexplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Nexplore	call netrw#Explore(-1,0,0,<q-args>)$/;"	c
NextAlternate	.\vimfiles\plugin\a.vim	/^function! NextAlternate(bang)$/;"	f
NextCS	.\vimfiles\plugin\nextCS.vim	/^function! NextCS()$/;"	f
NextColorScheme	.\vimfiles\plugin\changeColorScheme.vim	/^function! NextColorScheme()$/;"	f
NextPage	.\vim73\macros\less.vim	/^fun! s:NextPage()$/;"	f
Nextitem	.\vim73\autoload\ccomplete.vim	/^function! s:Nextitem(lead, items, depth, all)$/;"	f
NoMatchParen	.\vim73\plugin\matchparen.vim	/^command! NoMatchParen windo 3match none | unlet! g:loaded_matchparen |$/;"	c
NormalizeEncodingName	.\vimfiles\plugin\fencview.vim	/^function! s:NormalizeEncodingName(enc) "{{{1$/;"	f
Nosynonly	.\vim73\synmenu.vim	/^fun! s:Nosynonly()$/;"	f
Nread	.\vim73\plugin\netrwPlugin.vim	/^com! -count=1 -nargs=*	Nread		call netrw#NetrwSavePosn()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
Nsource	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=*	        Nsource		call netrw#NetrwSavePosn()<bar>call netrw#NetSource(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
Nwrite	.\vim73\plugin\netrwPlugin.vim	/^com! -range=% -nargs=*	Nwrite		call netrw#NetrwSavePosn()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
O	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> O :call vimwiki_lst#insertOo('O')<CR>a$/;"	m
OCaml_switch	.\vim73\ftplugin\ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	.\vim73\ftplugin\ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
Ocaml_get_type	.\vim73\ftplugin\ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	.\vim73\ftplugin\ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	.\vim73\ftplugin\ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
OmniSyntaxList	.\vim73\autoload\syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f
OneToOneMap	.\vimfiles\plugin\TransferChinese.vim	/^function! s:OneToOneMap(char, from, to)$/;"	f
OnlyExplorerWindowsOpen	.\vimfiles\plugin\winmanager.vim	/^function! <SID>OnlyExplorerWindowsOpen()$/;"	f
Open	.\vimfiles\plugin\bundler.vim	/^function! s:Open(cmd,gem,lcd)$/;"	f
OpenComplete	.\vimfiles\plugin\bundler.vim	/^function! s:OpenComplete(A,L,P)$/;"	f
OpenEntry	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:OpenEntry()$/;"	f
OpenEntryPrevWindow	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:OpenEntryPrevWindow()$/;"	f
OpenFile	.\vimfiles\autoload\man.vim	/^fun s:OpenFile(file)$/;"	f
OpenFile	.\vimfiles\autoload\objc\man.vim	/^fun s:OpenFile(file)$/;"	f
OpenFile	.\vimfiles\plugin\FavMenu.vim	/^    fu! OpenFile()$/;"	f
OpenTag	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>OpenTag(split)$/;"	f
OptionG	.\vim73\optwin.vim	/^fun! <SID>OptionG(name, val)$/;"	f
OptionL	.\vim73\optwin.vim	/^fun! <SID>OptionL(name)$/;"	f
OrderSnippet	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun s:OrderSnippet(snippet)$/;"	f
OrderSnippet	.\vimfiles\autoload\pum_snippet.vim	/^fun s:OrderSnippet(snippet)$/;"	f
OverrideOption	.\vimfiles\plugin\vcscommand.vim	/^function! s:OverrideOption(option, ...)$/;"	f
PTvalue	.\vim73\optwin.vim	/^fun! <SID>PTvalue()$/;"	f
PackageName	.\vim73\tools\pltags.pl	/^sub PackageName($)$/;"	s
ParmSub.If	.\vim73\macros\shellmenu.vim	/^imenu ParmSub.If parm not set print word and exit ${:?}hhi$/;"	m
ParmSub.Set	.\vim73\macros\shellmenu.vim	/^imenu ParmSub.Set parm to word if not set ${:=}hhi$/;"	m
ParmSub.Substitute	.\vim73\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm not set ${:-}hhi$/;"	m
ParmSub.Substitute	.\vim73\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm set else nothing ${:+}hhi$/;"	m
ParseDataToProps	.\vim73\tools\unicode.vim	/^func! ParseDataToProps()$/;"	f
ParseFoldProps	.\vim73\tools\unicode.vim	/^func! ParseFoldProps()$/;"	f
ParseRpmVars	.\vim73\ftplugin\spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
ParseSkip	.\vim73\macros\matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseSkip	.\vimfiles\plugin\matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	.\vim73\autoload\ccomplete.vim	/^function! s:ParseTagline(line)$/;"	f
ParseWidthProps	.\vim73\tools\unicode.vim	/^func! ParseWidthProps()$/;"	f
ParseWords	.\vim73\macros\matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
ParseWords	.\vimfiles\plugin\matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:Path(p)$/;"	f
Path	.\vimfiles\plugin\winmanager.vim	/^function! <SID>Path(p)$/;"	f
Path.AbsolutePathFor	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.WinToUnixPath	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path.bookmarkNames	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.equals	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getPathTrunk	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.getPathTrunk()$/;"	f
Path.getSortOrderIndex	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.readInfoFromDisk	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.str(esc)$/;"	f
Path.strAbs	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strAbs()$/;"	f
Path.strDisplay	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strDisplay()$/;"	f
Path.strForCd	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strForCd()$/;"	f
Path.strForEditCmd	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strForEditCmd()$/;"	f
Path.strForGlob	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strForGlob()$/;"	f
Path.strForOS	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strForOS(esc)$/;"	f
Path.strTrunk	.\vimfiles\plugin\NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
Peekstack	.\vim73\autoload\xmlcomplete.vim	/^function! s:Peekstack(sname)$/;"	f
PerformListing	.\vim73\autoload\netrw.vim	/^fun! s:PerformListing(islocal)$/;"	f
PersistentVarName	.\vimfiles\autoload\genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
Pexplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Pexplore	call netrw#Explore(-2,0,0,<q-args>)$/;"	c
Pick	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pick	.\vimfiles\ftplugin\gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pop	.\vim73\autoload\xmlcomplete.vim	/^function! s:Pop(sname)$/;"	f
PopPage	.\vim73\ftplugin\man.vim	/^func <SID>PopPage()$/;"	f
PostscrIndentGet	.\vim73\indent\postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
PreGetPage	.\vim73\ftplugin\man.vim	/^func <SID>PreGetPage(cnt)$/;"	f
PrevNonBlankNonString	.\vim73\indent\ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	.\vimfiles\indent\ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevWord	.\vimfiles\plugin\mark.vim	/^function! s:PrevWord()$/;"	f
Preview	.\vimfiles\autoload\rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
PreviewCSSColorAllBuffer	.\vimfiles\syntax\css.vim	/^   function! s:PreviewCSSColorAllBuffer()$/;"	f
PreviewCSSColorInLine	.\vimfiles\after\syntax\css.vim	/^function! s:PreviewCSSColorInLine(where)$/;"	f
PreviewCSSColorInLine	.\vimfiles\syntax\css.vim	/^function! s:PreviewCSSColorInLine(where)$/;"	f
PreviewColorInLine	.\vimfiles\plugin\colorizer.vim	/^function! s:PreviewColorInLine(where)$/;"	f
PreviousCS	.\vimfiles\plugin\nextCS.vim	/^function! PreviousCS()$/;"	f
PreviousColorScheme	.\vimfiles\plugin\changeColorScheme.vim	/^function! PreviousColorScheme()$/;"	f
PrintError	.\vimfiles\plugin\winmanager.vim	/^function! PrintError(eline)$/;"	f
PrintFavDirs	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:PrintFavDirs()$/;"	f
ProcessFile	.\vimfiles\plugin\snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessSnippet	.\vimfiles\autoload\snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
ProgressBar	.\vim73\syntax\2html.vim	/^  func! s:ProgressBar(title, max_value, winnr)$/;"	f
ProjectMenu	.\vimfiles\plugin\rails.vim	/^function! s:ProjectMenu()$/;"	f
ProtoCheck	.\vim73\filetype.vim	/^func! s:ProtoCheck(default)$/;"	f
PurifyCode	.\vim73\indent\pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
Push	.\vim73\autoload\xmlcomplete.vim	/^function! s:Push(el, sname)$/;"	f
Python	.\vimfiles\plugin\voom\voom.py	/^            vim.command("call Voom_ErrorMsg('VOoM: cannot import Python module %s')" %module.replace("'","''"))$/;"	i
Python_jump	.\vim73\ftplugin\python.vim	/^fun! <SID>Python_jump(motion) range$/;"	f
Q	.\vim73\evim.vim	/^map Q gq$/;"	m
Q	.\vim73\vimrc_example.vim	/^map Q gq$/;"	m
QSortR	.\vimfiles\autoload\genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
Queue	.\vimfiles\autoload\l9\async.py	/^import Queue$/;"	i
R	.\vim73\macros\less.vim	/^noremap <script> R <C-L><SID>L$/;"	m
RDelete_parens	.\vim73\indent\r.vim	/^function s:RDelete_parens(line)$/;"	f
RDelete_quotes	.\vim73\indent\r.vim	/^function s:RDelete_quotes(line)$/;"	f
Ragrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Ragrep$/;"	c
RagrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file RagrepAdd$/;"	c
Rails	.\vimfiles\plugin\rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|call rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	.\vimfiles\autoload\rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	.\vimfiles\autoload\rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	.\vimfiles\autoload\rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	.\vimfiles\autoload\rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	.\vimfiles\autoload\rails.vim	/^function! s:RailsFind()$/;"	f
RailsHelpCommand	.\vimfiles\autoload\rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsIncludeexpr	.\vimfiles\autoload\rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	.\vimfiles\autoload\rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	.\vimfiles\autoload\rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	.\vimfiles\autoload\rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	.\vimfiles\autoload\rails.vim	/^function! RailsRoot()$/;"	f
Rake	.\vimfiles\autoload\rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
RandomColorScheme	.\vimfiles\plugin\changeColorScheme.vim	/^function! RandomColorScheme()$/;"	f
Range	.\vim73\tools\unicode.vim	/^func! Range(ranges, start, end, step, add)$/;"	f
ReadableExtensionIn	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^fun s:ReadableExtensionIn(path, extensions)$/;"	f
Reason	.\vim73\tools\ccfilter.c	/^char	       Reason[LINELENGTH];$/;"	v
RecordInFile	.\vim73\autoload\vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	.\vim73\autoload\vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
Ref	.\vim73\macros\matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Ref	.\vimfiles\plugin\matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Refresh	.\vimfiles\autoload\rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshAll	.\vimfiles\plugin\FavMenu.vim	/^fu! s:RefreshAll()$/;"	f
RefreshBuffer	.\vimfiles\autoload\rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshWinManager	.\vimfiles\plugin\winmanager.vim	/^function! <SID>RefreshWinManager(...)$/;"	f
RegisterExplorerGroup	.\vimfiles\plugin\winmanager.vim	/^function! <SID>RegisterExplorerGroup()$/;"	f
Regrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Regrep$/;"	c
RegrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file RegrepAdd$/;"	c
Related	.\vimfiles\autoload\rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
Release	.\vim73\tools\shtags.pl	/^Release:	$id[2]$/;"	l
ReleaseKeyPresses	.\vimfiles\plugin\supertab.vim	/^function! s:ReleaseKeyPresses()$/;"	f
RemotePathAnalysis	.\vim73\autoload\netrw.vim	/^fun! s:RemotePathAnalysis(dirname)$/;"	f
RemoteSystem	.\vim73\autoload\netrw.vim	/^fun! s:RemoteSystem(cmd)$/;"	f
RemoveCurrentColorScheme	.\vimfiles\plugin\changeColorScheme.vim	/^function! RemoveCurrentColorScheme()$/;"	f
RemoveSeparators	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:RemoveSeparators()$/;"	f
RemoveSnippet	.\vimfiles\autoload\snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RemoveThisFile	.\vimfiles\plugin\FavMenu.vim	/^fu! s:RemoveThisFile(name)$/;"	f
RenameFile	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:RenameFile()$/;"	f
RepairAltRegister	.\vimfiles\plugin\winmanager.vim	/^function! <SID>RepairAltRegister()$/;"	f
ReportError	.\vimfiles\plugin\vcscommand.vim	/^function! s:ReportError(error)$/;"	f
Repos	.\vimfiles\plugin\functionlist.vim	/^function! s:Repos()$/;"	f
ReposRecent	.\vimfiles\plugin\functionlist.vim	/^function! s:ReposRecent()$/;"	f
ResetOptions	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun s:ResetOptions()$/;"	f
ResetOptions	.\vimfiles\autoload\pum_snippet.vim	/^fun s:ResetOptions()$/;"	f
ResetPhpOptions	.\vim73\indent\php.vim	/^function! ResetPhpOptions()$/;"	f
ResetPhpOptions	.\vimfiles\indent\php.vim	/^function! ResetPhpOptions()$/;"	f
ResetSnippets	.\vimfiles\plugin\snipMate.vim	/^fun! ResetSnippets()$/;"	f
ResizeAllExplorers	.\vimfiles\plugin\winmanager.vim	/^function! <SID>ResizeAllExplorers()$/;"	f
Resolve	.\vim73\macros\matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
Resolve	.\vimfiles\plugin\matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreBufVars	.\vim73\autoload\netrw.vim	/^fun! s:RestoreBufVars()$/;"	f
RestoreCursorline	.\vim73\autoload\netrw.vim	/^fun! s:RestoreCursorline()$/;"	f
RestoreFileDisplay	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:RestoreFileDisplay()$/;"	f
RestoreKeywords	.\vim73\autoload\xmlcomplete.vim	/^function! s:RestoreKeywords()$/;"	f
RestoreShiftwidth	.\vim73\ftplugin\cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
RestoreWinVars	.\vim73\autoload\netrw.vim	/^fun! s:RestoreWinVars()$/;"	f
RestoreWindowSettings2	.\vimfiles\autoload\genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
Reword	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
Reword	.\vimfiles\ftplugin\gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
Rfgrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Rfgrep$/;"	c
RfgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file RfgrepAdd$/;"	c
Rgb2xterm	.\vimfiles\plugin\colorizer.vim	/^function! s:Rgb2xterm(color) "{{{2$/;"	f
Rgb2xterm	.\vimfiles\syntax\css.vim	/^function! s:Rgb2xterm(color)$/;"	f
Rgrep	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file Rgrep$/;"	c
RgrepAdd	.\vimfiles\plugin\grep.vim	/^command! -nargs=* -complete=file RgrepAdd$/;"	c
RmVimball	.\vim73\plugin\vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball							call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
Rmdir	.\vim73\autoload\tar.vim	/^fun! s:Rmdir(fname)$/;"	f
Rmdir	.\vim73\autoload\zip.vim	/^fun! s:Rmdir(fname)$/;"	f
Row	.\vim73\tools\ccfilter.c	/^unsigned long  Row;$/;"	v
RplGetFreeIndent	.\vim73\indent\rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	.\vim73\indent\rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RubyBalloonexpr	.\vim73\ftplugin\ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyBalloonexpr	.\vimfiles\ftplugin\ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	.\vim73\ftplugin\ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyCursorIdentifier	.\vimfiles\ftplugin\ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RunGrep	.\vimfiles\plugin\grep.vim	/^function! s:RunGrep(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepCmd	.\vimfiles\plugin\grep.vim	/^function! s:RunGrepCmd(cmd, pattern, action)$/;"	f
RunGrepRecursive	.\vimfiles\plugin\grep.vim	/^function! s:RunGrepRecursive(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepSpecial	.\vimfiles\plugin\grep.vim	/^function! s:RunGrepSpecial(cmd_name, which, action, ...)$/;"	f
S	.\vimfiles\plugin\abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
SEND_MSEC_POLL	.\vim73\tools\xcmdsrv_client.c	206;"	d	file:
SNR	.\vimfiles\autoload\genutils.vim	/^function! s:SNR()$/;"	f
SQL	.\vim73\filetype.vim	/^func! s:SQL()$/;"	f
SQLCAddAlias	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCAddAlias(table_name, table_alias, cols)$/;"	f
SQLCCheck4dbext	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCCheck4dbext()$/;"	f
SQLCErrorMsg	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCErrorMsg(msg)$/;"	f
SQLCGetColumns	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCGetColumns(table_name, list_type)$/;"	f
SQLCGetObjectOwner	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCGetObjectOwner(object) $/;"	f
SQLCGetSyntaxList	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCGetSyntaxList(syn_group)$/;"	f
SQLCWarningMsg	.\vim73\autoload\sqlcomplete.vim	/^function! s:SQLCWarningMsg(msg)$/;"	f
SQLGetType	.\vim73\ftplugin\sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	.\vim73\ftplugin\sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	.\vim73\ftplugin\sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	.\vim73\ftplugin\sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	.\vim73\ftplugin\sql.vim	/^    function SQL_SetType(name)$/;"	f
STATIC_SPACE	.\vim73\tools\xcmdsrv_client.c	109;"	d	file:
STRING	.\vimfiles\plugin\voom\voom_mode_python.py	/^STRING = token.STRING$/;"	v
SVarValueWinManager	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=* SVarValueWinManager :call <SID>ShowVariableValue(<args>)$/;"	c
Safe_indent	.\vim73\indent\awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
SanitizeRLine	.\vim73\indent\r.vim	/^function SanitizeRLine(line)$/;"	f
SaveBufVars	.\vim73\autoload\netrw.vim	/^fun! s:SaveBufVars()$/;"	f
SaveVimSesn	.\vim73\menu.vim	/^fun! s:SaveVimSesn()$/;"	f
SaveWinVars	.\vim73\autoload\netrw.vim	/^fun! s:SaveWinVars()$/;"	f
Search	.\vimfiles\autoload\mark.vim	/^function! s:Search( pattern, isBackward, currentMarkPosition, searchType )$/;"	f
SearchAnyMark	.\vimfiles\plugin\mark.vim	/^function! s:SearchAnyMark(...) " SearchAnyMark(flags)$/;"	f
SearchCurrentMark	.\vimfiles\plugin\mark.vim	/^function! s:SearchCurrentMark(...) " SearchCurrentMark(flags)$/;"	f
SearchList	.\vimfiles\autoload\cocoacomplete.vim	/^fun s:SearchList(list, regex)$/;"	f
SearchList	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun s:SearchList(list, regex)$/;"	f
SearchMembers	.\vim73\autoload\ccomplete.vim	/^function! s:SearchMembers(matches, items, all)$/;"	f
SearchNext	.\vimfiles\plugin\mark.vim	/^function! s:SearchNext(...) " SearchNext(flags)$/;"	f
SearchP	.\vim73\menu.vim	/^fun! s:SearchP()$/;"	f
Seems_continuing	.\vim73\indent\awk.vim	/^function! s:Seems_continuing( line )$/;"	f
Select	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select            :call dbext#DB_execSql("select " . <q-args>)$/;"	c
SelectAll	.\vim73\menu.vim	/^func! <SID>SelectAll()$/;"	f
SelectCompletion	.\vimfiles\plugin\supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectMethod	.\vimfiles\autoload\method_list.vim	/^fun s:SelectMethod()$/;"	f
SelectMethod	.\vimfiles\autoload\objc\method_list.vim	/^fun s:SelectMethod()$/;"	f
SelectWord	.\vimfiles\autoload\snipMate.vim	/^fun s:SelectWord()$/;"	f
SendEventProc	.\vim73\tools\xcmdsrv_client.c	/^SendEventProc(dpy, eventPtr, expected, code)$/;"	f	file:
SendEventProc	.\vim73\tools\xcmdsrv_client.c	/^static char	*SendEventProc __ARGS((Display *dpy, XEvent *eventPtr,$/;"	p	file:	signature:(Display *dpy, XEvent *eventPtr, int expect, int *code)
SendInit	.\vim73\tools\xcmdsrv_client.c	/^SendInit(dpy)$/;"	f	file:
SendInit	.\vim73\tools\xcmdsrv_client.c	/^static int	SendInit __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
Set	.\vimfiles\autoload\rails.vim	/^function! s:Set(bang,...)$/;"	f
Set.All	.\vim73\macros\shellmenu.vim	/^imenu Set.All keyword arguments are placed in the environment set -k$/;"	m
Set.Disable	.\vim73\macros\shellmenu.vim	/^imenu Set.Disable file name generation set -f$/;"	m
Set.Exit	.\vim73\macros\shellmenu.vim	/^imenu Set.Exit after reading and executing one command set -t$/;"	m
Set.Print	.\vim73\macros\shellmenu.vim	/^imenu Set.Print commands and their arguments as they are executed set -x$/;"	m
Set.Print	.\vim73\macros\shellmenu.vim	/^imenu Set.Print shell input lines as they are read set -v$/;"	m
Set.Read	.\vim73\macros\shellmenu.vim	/^imenu Set.Read commands but do not execute them set -n$/;"	m
Set.Treat	.\vim73\macros\shellmenu.vim	/^imenu Set.Treat unset variables as an error when substituting set -u$/;"	m
Set.exit	.\vim73\macros\shellmenu.vim	/^imenu Set.exit when command returns non-zero exit code set -e$/;"	m
Set.mark	.\vim73\macros\shellmenu.vim	/^imenu Set.mark modified or modified variables set -a$/;"	m
Set.remember	.\vim73\macros\shellmenu.vim	/^imenu Set.remember function commands set -h$/;"	m
Set.set	.\vim73\macros\shellmenu.vim	/^imenu Set.set set$/;"	m
Set.unset	.\vim73\macros\shellmenu.vim	/^imenu Set.unset unset$/;"	m
SetBasePath	.\vimfiles\autoload\rails.vim	/^function! s:SetBasePath()$/;"	f
SetBufWinVars	.\vim73\autoload\netrw.vim	/^fun! s:SetBufWinVars()$/;"	f
SetCompletionType	.\vimfiles\plugin\supertab.vim	/^function! s:SetCompletionType()$/;"	f
SetDefaultCompletionType	.\vimfiles\plugin\supertab.vim	/^function! s:SetDefaultCompletionType()$/;"	f
SetFileTypeSH	.\vim73\filetype.vim	/^func! SetFileTypeSH(name)$/;"	f
SetFileTypeShell	.\vim73\filetype.vim	/^func! SetFileTypeShell(name)$/;"	f
SetIsk	.\vim73\syntax\bst.vim	/^    command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	.\vim73\syntax\bst.vim	/^    command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetIsk	.\vim73\syntax\lilo.vim	/^  command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	.\vim73\syntax\lilo.vim	/^  command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetKeywords	.\vim73\autoload\xmlcomplete.vim	/^function! s:SetKeywords()$/;"	f
SetMatcher	.\vimfiles\after\syntax\css.vim	/^function! s:SetMatcher(clr,pat)$/;"	f
SetMatcher	.\vimfiles\plugin\colorizer.vim	/^function! s:SetMatcher(clr,pat) "{{{2$/;"	f
SetMatcher	.\vimfiles\syntax\css.vim	/^function! s:SetMatcher(clr,pat)$/;"	f
SetNamedColor	.\vimfiles\after\syntax\css.vim	/^function! s:SetNamedColor(clr,name)$/;"	f
SetNamedColor	.\vimfiles\syntax\css.vim	/^function! s:SetNamedColor(clr,name)$/;"	f
SetOptDefault	.\vimfiles\plugin\rails.vim	/^function! s:SetOptDefault(opt,val)$/;"	f
SetOption	.\vimfiles\colors\solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetRexDir	.\vim73\autoload\netrw.vim	/^fun! s:SetRexDir(islocal,dirname)$/;"	f
SetSuffixesLast	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:SetSuffixesLast()$/;"	f
SetSyn	.\vim73\synmenu.vim	/^fun! SetSyn(name)$/;"	f
Setsynonly	.\vim73\synmenu.vim	/^fun! s:Setsynonly()$/;"	f
SetupBuffer	.\vimfiles\plugin\vcscommand.vim	/^function! s:SetupBuffer()$/;"	f
SetupMake	.\vimfiles\plugin\bundler.vim	/^function! s:SetupMake() abort$/;"	f
SetupNetrwStatusLine	.\vim73\autoload\netrw.vim	/^fun! s:SetupNetrwStatusLine(statline)$/;"	f
SetupRemoteReplies	.\vim73\plugin\rrhelper.vim	/^function SetupRemoteReplies()$/;"	f
SetupScratchBuffer	.\vimfiles\plugin\vcscommand.vim	/^function! s:SetupScratchBuffer(command, vcsType, originalBuffer, statusText)$/;"	f
Severity	.\vim73\tools\ccfilter.c	/^char	       Severity;$/;"	v
Sexplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Sexplore	call netrw#Explore(<count>,1,0+<bang>0,<q-args>)$/;"	c
Sexplore	.\vimfiles\plugin\winfileexplorer.vim	/^		command -n=? -complete=dir Sexplore :call s:StartExplorer(1, '<a>')$/;"	c
ShowAllFiles	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ShowAllFiles()$/;"	f
ShowAvailableSnips	.\vimfiles\plugin\snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowDirectory	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ShowDirectory()$/;"	f
ShowUsage	.\vim73\tools\ccfilter.c	/^int ShowUsage( char *szError )$/;"	f	signature:( char *szError )
ShowVariableValue	.\vimfiles\plugin\winmanager.vim	/^function! <SID>ShowVariableValue(...)$/;"	f
SkipJavaBlanksAndComments	.\vim73\indent\java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
SkipPattern	.\vim73\indent\sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
Skippmatch	.\vim73\indent\php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch	.\vimfiles\indent\php.vim	/^function! Skippmatch()  " {{{$/;"	f
Skippmatch2	.\vim73\indent\php.vim	/^function! Skippmatch2()$/;"	f
Skippmatch2	.\vimfiles\indent\php.vim	/^function! Skippmatch2()$/;"	f
SolarizedHiTrail	.\vimfiles\colors\solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	.\vimfiles\colors\solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	.\vimfiles\colors\solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	.\vimfiles\colors\solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	.\vimfiles\colors\solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Sort	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:Sort(cmp,direction) range$/;"	f
SortByLineNum	.\vimfiles\autoload\method_list.vim	/^fun s:SortByLineNum(i1, i2)$/;"	f
SortByLineNum	.\vimfiles\autoload\objc\method_list.vim	/^fun s:SortByLineNum(i1, i2)$/;"	f
SortListing	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:SortListing(msg)$/;"	f
SortR	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:SortR(start, end, cmp, direction)$/;"	f
SortReverse	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:SortReverse()$/;"	f
SortSelect	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:SortSelect()$/;"	f
SpShVars.All	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (quoted spaces) ${*}$/;"	m
SpShVars.All	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (unquoted spaces) ${@}$/;"	m
SpShVars.Flags	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.Flags set ${-}$/;"	m
SpShVars.Number	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.Number of positional parameters ${#}$/;"	m
SpShVars.Process	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.Process number of last background command ${!}$/;"	m
SpShVars.Process	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.Process number of this shell ${$}$/;"	m
SpShVars.Return	.\vim73\macros\shellmenu.vim	/^imenu SpShVars.Return code of last command ${?}$/;"	m
SpWhenModified	.\vimfiles\plugin\FavMenu.vim	/^    fu! SpWhenModified(f)$/;"	f
SpWhenNamedOrModified	.\vimfiles\plugin\FavMenu.vim	/^    fu! SpWhenNamedOrModified(f)$/;"	f
Space	.\vim73\optwin.vim	/^fun! <SID>Space()$/;"	f
SpecChangelog	.\vim73\ftplugin\spec.vim	/^	function s:SpecChangelog(format)$/;"	f
SpellDel	.\vim73\menu.vim	/^  func! <SID>SpellDel()$/;"	f
SpellLang	.\vim73\menu.vim	/^  func! s:SpellLang()$/;"	f
SpellPopup	.\vim73\menu.vim	/^  func! <SID>SpellPopup()$/;"	f
SpellPopupMenu	.\vim73\menu.vim	/^  augroup SpellPopupMenu$/;"	a
SpellReplace	.\vim73\menu.vim	/^  func! <SID>SpellReplace(n)$/;"	f
SplitCDeclarations	.\vimfiles\after\plugin\TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
Squash	.\vim73\ftplugin\gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
Squash	.\vimfiles\ftplugin\gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StarSetf	.\vim73\filetype.vim	/^func! s:StarSetf(ft)$/;"	f
StartBufExplorer	.\vimfiles\plugin\bufexplorer.vim	/^function! StartBufExplorer(open)$/;"	f
StartExplorer	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:StartExplorer(split, start_dir)$/;"	f
StartTagsFileDisplay	.\vimfiles\plugin\wintagexplorer.vim	/^function! <SID>StartTagsFileDisplay()$/;"	f
StartWindowsManager	.\vimfiles\plugin\winmanager.vim	/^function! <SID>StartWindowsManager()$/;"	f
Starts_with_word	.\vim73\indent\awk.vim	/^function! s:Starts_with_word( line )$/;"	f
StatementIndent	.\vim73\indent\ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
Stmts.break	break	.\vim73\macros\shellmenu.vim	/^imenu Stmts.break	break $/;"	m
Stmts.case	case	.\vim73\macros\shellmenu.vim	/^imenu Stmts.case	case  in$/;"	m
Stmts.continue	continue	.\vim73\macros\shellmenu.vim	/^imenu Stmts.continue	continue $/;"	m
Stmts.elif	elif	.\vim73\macros\shellmenu.vim	/^imenu Stmts.elif	elif   $/;"	m
Stmts.exit	exit	.\vim73\macros\shellmenu.vim	/^imenu Stmts.exit	exit $/;"	m
Stmts.for	for	.\vim73\macros\shellmenu.vim	/^imenu Stmts.for	for  in $/;"	m
Stmts.function	()	.\vim73\macros\shellmenu.vim	/^imenu Stmts.function	() {$/;"	m
Stmts.if	if	.\vim73\macros\shellmenu.vim	/^imenu Stmts.if	if   $/;"	m
Stmts.if-else	if	.\vim73\macros\shellmenu.vim	/^imenu Stmts.if-else	if   $/;"	m
Stmts.return	return	.\vim73\macros\shellmenu.vim	/^imenu Stmts.return	return $/;"	m
Stmts.return-false	return	.\vim73\macros\shellmenu.vim	/^imenu Stmts.return-false	return 1$/;"	m
Stmts.return-true	return	.\vim73\macros\shellmenu.vim	/^imenu Stmts.return-true	return 0$/;"	m
Stmts.shift	shift	.\vim73\macros\shellmenu.vim	/^imenu Stmts.shift	shift $/;"	m
Stmts.trap	trap	.\vim73\macros\shellmenu.vim	/^imenu Stmts.trap	trap $/;"	m
Stmts.while	while	.\vim73\macros\shellmenu.vim	/^imenu Stmts.while	while   $/;"	m
StrCmp	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:StrCmp(line1, line2, direction)$/;"	f
Strlen	.\vim73\autoload\netrw.vim	/^fun! s:Strlen(x)$/;"	f
Strntok	.\vimfiles\plugin\winmanager.vim	/^fun! <SID>Strntok(s, tok, n)$/;"	f
Strntok	.\vimfiles\plugin\wintagexplorer.vim	/^fun! <SID>Strntok(s, tok, n)$/;"	f
Strntok2	.\vimfiles\plugin\winmanager.vim	/^fun! <SID>Strntok2(s, tok, n)$/;"	f
StructMembers	.\vim73\autoload\ccomplete.vim	/^function! s:StructMembers(typename, items, all)$/;"	f
SubComplete	.\vimfiles\plugin\abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
SubList	.\vimfiles\syntax\googlecodewiki.vim	/^function s:SubList(list, start, count)$/;"	f
SubName	.\vim73\tools\pltags.pl	/^sub SubName($)$/;"	s
Subvert	.\vimfiles\plugin\abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SuperSub	.\vim73\syntax\tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
SuperTab	.\vimfiles\plugin\supertab.vim	/^function! s:SuperTab(command)$/;"	f
SuperTabAlternateCompletion	.\vimfiles\plugin\supertab.vim	/^function! SuperTabAlternateCompletion(type)$/;"	f
SuperTabHelp	.\vimfiles\plugin\supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	.\vimfiles\plugin\supertab.vim	/^function! s:SuperTabHelp()$/;"	f
SuperTabLongestHighlight	.\vimfiles\plugin\supertab.vim	/^function! SuperTabLongestHighlight(dir)$/;"	f
SuperTabSetCompletionType	.\vimfiles\plugin\supertab.vim	/^function! SuperTabSetCompletionType(type)$/;"	f
SuperTabSetDefaultCompletionType	.\vimfiles\plugin\supertab.vim	/^function! SuperTabSetDefaultCompletionType(type)$/;"	f
Syn	.\vim73\makemenu.vim	/^fun! <SID>Syn(arg)$/;"	f
SynColor	.\vim73\syntax\doxygen.vim	/^    command -nargs=+ SynColor hi def <args>$/;"	c
SynColor	.\vim73\syntax\syncolor.vim	/^    command -nargs=* SynColor hi <args>$/;"	c
SynColor	.\vim73\syntax\syncolor.vim	/^    command -nargs=* SynColor hi def <args>$/;"	c
SynColor	.\vim73\syntax\syncolor.vim	/^  command -nargs=* SynColor hi <args>$/;"	c
SynDisplay	.\vim73\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynDisplay	.\vim73\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args>$/;"	c
SynLink	.\vim73\syntax\doxygen.vim	/^    command -nargs=+ SynLink hi def link <args>$/;"	c
SynLink	.\vim73\syntax\syncolor.vim	/^    command -nargs=* SynLink hi def link <args>$/;"	c
SynLink	.\vim73\syntax\syncolor.vim	/^    command -nargs=* SynLink hi! link <args>$/;"	c
SynLink	.\vim73\syntax\syncolor.vim	/^  command -nargs=* SynLink hi link <args>$/;"	c
SynMenu	.\vim73\makemenu.vim	/^command! -nargs=* SynMenu call <SID>Syn(<q-args>)$/;"	c
SynOnOff	.\vim73\menu.vim	/^    fun s:SynOnOff()$/;"	f
SynSet	.\vim73\syntax\synload.vim	/^fun! s:SynSet()$/;"	f
SyntaxCSyntaxGroupItems	.\vim73\autoload\syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f
TBCompressor	.\vimfiles\plugin\TBCompressor.vim	/^function TBCompressor()$/;"	f
TE_ShowVariableValue	.\vimfiles\plugin\wintagexplorer.vim	/^function! TE_ShowVariableValue(...)$/;"	f
TLI_create_checkbox	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:TLI_create_checkbox(lnum) "{{{$/;"	f
TLI_switch_child_state	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:TLI_switch_child_state(lnum) "{{{$/;"	f
TLI_switch_parent_state	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:TLI_switch_parent_state(lnum) "{{{$/;"	f
TLI_toggle	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:TLI_toggle(lnum) "{{{$/;"	f
TOhtml	.\vim73\plugin\tohtml.vim	/^  command -range=% TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)$/;"	c
Tab	.\vim73\ftplugin\cobol.vim	/^function! s:Tab()$/;"	f
Tag	.\vim73\ftplugin\pdf.vim	/^function! s:Tag()$/;"	f
Tag2item	.\vim73\autoload\ccomplete.vim	/^function! s:Tag2item(val)$/;"	f
TagFiles	.\vim73\menu.vim	/^fun! s:TagFiles()$/;"	f
TagList_IsValid	.\vimfiles\plugin\taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	.\vimfiles\plugin\taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	.\vimfiles\plugin\taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	.\vimfiles\plugin\taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
Tagcmd2extra	.\vim73\autoload\ccomplete.vim	/^function! s:Tagcmd2extra(cmd, name, fname)$/;"	f
Tagline2item	.\vim73\autoload\ccomplete.vim	/^function! s:Tagline2item(val, brackets)$/;"	f
TagsExplorer_IsPossible	.\vimfiles\plugin\wintagexplorer.vim	/^function! TagsExplorer_IsPossible()$/;"	f
TagsExplorer_IsValid	.\vimfiles\plugin\wintagexplorer.vim	/^function! TagsExplorer_IsValid()$/;"	f
TagsExplorer_Start	.\vimfiles\plugin\wintagexplorer.vim	/^function! TagsExplorer_Start()$/;"	f
TagsExplorer_WrapUp	.\vimfiles\plugin\wintagexplorer.vim	/^function! TagsExplorer_WrapUp()$/;"	f
TarBrowseSelect	.\vim73\autoload\tar.vim	/^fun! s:TarBrowseSelect()$/;"	f
TcshGetIndent	.\vim73\indent\tcsh.vim	/^function TcshGetIndent()$/;"	f
Test.String	.\vim73\macros\shellmenu.vim	/^imenu Test.String is empty [ x = "x$" ]hhi$/;"	m
Test.String	.\vim73\macros\shellmenu.vim	/^imenu Test.String is not empty [ x != "x$" ]hhi$/;"	m
Test.Strings	.\vim73\macros\shellmenu.vim	/^imenu Test.Strings is equal [ "" = "" ]hhhhhhhi$/;"	m
Test.Strings	.\vim73\macros\shellmenu.vim	/^imenu Test.Strings is not equal [ "" != "" ]hhhhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is equal [  -eq  ]hhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is greater equal [  -ge  ]hhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is greater than [  -gt  ]hhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is less equal [  -le  ]hhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is less than [  -lt  ]hhhhhhi$/;"	m
Test.Values	.\vim73\macros\shellmenu.vim	/^imenu Test.Values is not equal [  -ne  ]hhhhhhi$/;"	m
Test.existence	[	.\vim73\macros\shellmenu.vim	/^imenu Test.existence	[ -e  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - directory	[ -d  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - executable	[ -x  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - file		[ -f  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - file (not empty)	[ -s  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - readable	[ -r  ]hi$/;"	m
Test.existence	.\vim73\macros\shellmenu.vim	/^imenu Test.existence - writable	[ -w  ]hi$/;"	m
TestFiletypeFuncs	.\vim73\filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TexNewMathZone	.\vim73\syntax\tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
Texplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar       -count=0 -complete=dir	Texplore	call netrw#Explore(<count>,0,6        ,<q-args>)$/;"	c
TextWidth	.\vim73\menu.vim	/^fun! s:TextWidth()$/;"	f
TheCWord	.\vimfiles\autoload\rails.vim	/^function! s:TheCWord()$/;"	f
Tlist	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	.\vimfiles\plugin\taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	.\vimfiles\plugin\taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	.\vimfiles\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	.\vimfiles\plugin\taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	.\vimfiles\plugin\taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	.\vimfiles\plugin\taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	.\vimfiles\plugin\taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	.\vimfiles\plugin\taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	.\vimfiles\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	.\vimfiles\plugin\taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	.\vimfiles\plugin\taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	.\vimfiles\plugin\taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	.\vimfiles\plugin\taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	.\vimfiles\plugin\taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	.\vimfiles\plugin\taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToggleFencView	.\vimfiles\plugin\fencview.vim	/^function! s:ToggleFencView() "{{{1$/;"	f
ToggleGuiOption	.\vim73\menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
ToggleHelp	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ToggleHelp()$/;"	f
ToggleLongList	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:ToggleLongList()$/;"	f
ToggleWindowsManager	.\vimfiles\plugin\winmanager.vim	/^function! <SID>ToggleWindowsManager()$/;"	f
ToolBar.Paste		<C-R>+	.\vim73\menu.vim	/^  cnoremenu	 ToolBar.Paste		<C-R>+$/;"	m
ToolBar.Print		:hardcopy<CR>	.\vim73\menu.vim	/^    vnoremenu ToolBar.Print		:hardcopy<CR>$/;"	m
ToolBar.Print		:w	.\vim73\menu.vim	/^    vnoremenu ToolBar.Print		:w !lpr<CR>$/;"	m
ToolBar.Replace		y:promptrepl	.\vim73\menu.vim	/^    vnoremenu ToolBar.Replace		y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
Transfer	.\vimfiles\plugin\TransferChinese.vim	/^function! Transfer(from, to) range abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openRecursively2	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.addChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	f
TreeDirNode.openExplorer	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openRecursively	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.sortChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	f
TreeDirNode.transplantChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootLineNum	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.bookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBoomarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.copy	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.equals	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	f
TreeFileNode.openSplit	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeFileNode.strDisplay	.\vimfiles\plugin\NERD_tree.vim	/^function! s:TreeFileNode.strDisplay()$/;"	f
TreeListMove	.\vim73\autoload\netrw.vim	/^fun! s:TreeListMove(dir)$/;"	f
TriggerSnippet	.\vimfiles\plugin\snipMate.vim	/^fun! TriggerSnippet()$/;"	f
Trim	.\vimfiles\autoload\mark.vim	/^	function! s:Trim( message )$/;"	f
TruncPath	.\vimfiles\plugin\FavMenu.vim	/^    fu! TruncPath(path)$/;"	f
USAGE	.\vim73\tools\ccfilter.c	/^const char USAGE[] =$/;"	v
USAGE	.\vim73\tools\shtags.pl	/^USAGE: $program [-kvwVx] [-t <file>] <files>$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^	 UWAGA:$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^  UWAGA: Litera  d  pojawi siê na dole ekranu. Vim czeka na wpisanie  w .$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^  UWAGA: Przeczytaj ca³± lekcjê zanim wykonasz jakie¶ polecenia!!!$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA:  Mno¿nik pomiêdzy operatorem  d  i ruchem dzia³a podobnie do ruchu bez$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA:  Mo¿esz u¿ywaæ <BS> aby poprawiaæ b³êdy w czasie pisania.$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: :q!<ENTER> porzuca wszelkie zmiany jakie zrobi³e¶. W nastêpnych$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ wczytaæ wyj¶cie zewnêtrznego polecenia. Na przyk³ad$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ zobaczyæ pozycjê kursora w prawym, dolnym rogu ekranu.$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Pamiêtaj, by uczyæ siê æwicz±c, a nie pamiêciowo.$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Po wykonaniu kroku 2. zobaczysz tekst z Lekcji 5.3. Potem przejd¼$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Tryb Replace jest jak tryb Insert, ale ka¿dy znak usuwa istniej±cy$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Ucz siê przez æwiczenie, nie wkuwanie.$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Uzupe³nianie dzia³a dla wielu poleceñ. Spróbuj wcisn±æ CTRL-D i <TAB>.$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Wci¶niêcie  v  zaczyna tryb Wizualny. Mo¿esz poruszaæ kursorem, by$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Wci¶niêcie <ESC> przeniesie Ciê z powrotem do trybu Normal$/;"	l
UWAGA	.\vim73\tutor\tutor.pl	/^UWAGA: Wpisanie tylko ruchu w trybie Normal bez operatora przeniesie kursor$/;"	l
Unfinalise	.\vim73\ftplugin\debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	.\vim73\ftplugin\debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unlarge	.\vimfiles\plugin\LargeFile.vim	/^com! Unlarge			call s:Unlarge()$/;"	c
Unlarge	.\vimfiles\plugin\LargeFile.vim	/^fun! s:Unlarge()$/;"	f
UnmapKey	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun s:UnmapKey(key)$/;"	f
UnmapKey	.\vimfiles\autoload\pum_snippet.vim	/^fun s:UnmapKey(key)$/;"	f
Update	.\vim73\optwin.vim	/^fun! <SID>Update(lnum, line, local, thiswin)$/;"	f
Update	.\vimfiles\plugin\dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update            :call dbext#DB_execSql("update " . <q-args>)$/;"	c
UpdateAll	.\vimfiles\plugin\colorizer.vim	/^function s:UpdateAll() "{{{2$/;"	f
UpdateBuffersMenu	.\vim73\autoload\netrw.vim	/^fun! s:UpdateBuffersMenu()$/;"	f
UpdateChangedSnip	.\vimfiles\autoload\snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateHeader	.\vimfiles\plugin\winfileexplorer.vim	/^function! s:UpdateHeader()$/;"	f
UpdateMark	.\vimfiles\plugin\mark.vim	/^function! s:UpdateMark()$/;"	f
UpdateMethodList	.\vimfiles\autoload\method_list.vim	/^fun s:UpdateMethodList()$/;"	f
UpdateMethodList	.\vimfiles\autoload\objc\method_list.vim	/^fun s:UpdateMethodList()$/;"	f
UpdatePlaceholderTabStops	.\vimfiles\autoload\snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	.\vimfiles\autoload\snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	.\vimfiles\autoload\snipMate.vim	/^fun s:UpdateVars()$/;"	f
Urgency	.\vim73\ftplugin\debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	.\vim73\tools\efm_perl.pl	/^Usage:$/;"	l
UseBufWinVars	.\vim73\autoload\netrw.vim	/^fun! s:UseBufWinVars()$/;"	f
UseVimball	.\vim73\plugin\vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball						call vimball#Vimball(1,<f-args>)$/;"	c
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga:  'b³ond' to nie jest metoda, by przeliterowaæ b³±d; 'b³ond' to b³±d.$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga:  Kiedy szukanie osi±gnie koniec pliku, bêdzie kontynuowane od pocz±tku$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga:  W ten sposób mo¿na wykonaæ wszystkie polecenia pow³oki.$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga:  Wszystkie polecenia  :  musz± byæ zakoñczone <ENTER>.$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga:  a ,  i  oraz  A  prowadz± do trybu Insert, jedyn± ró¿nic± jest miejsce,$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Aby ignorowaæ wielko¶æ liter dla jednego wyszukiwania: \/ignore\\c<ENTER>$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Aby usun±æ pod¶wietlanie dopasowañ, wpisz:   :nohlsearch$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Je¶li nie jeste¶ pewien czego¶ co wpisa³e¶, wci¶nij <ESC>, by wróciæ do$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Klawisze kursora tak¿e powinny dzia³aæ, ale u¿ywaj±c  hjkl  bêdziesz$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Ta funkcja jest bardzo u¿yteczna w debuggowaniu programu$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: Zauwa¿, ¿e gdyby¶ teraz wyszed³ z Vima, a nastêpnie wszed³ ponownie$/;"	l
Uwaga	.\vim73\tutor\tutor.pl	/^Uwaga: mo¿esz u¿yæ  y  jako operatora;  yw  kopiuje jeden wyraz.$/;"	l
VCSAdd	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSAdd call s:MarkOrigBufferForSetup(s:ExecuteVCSCommand('Add', [<f-args>]))$/;"	c
VCSAnnotate	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* -bang VCSAnnotate call s:VCSAnnotate(<q-bang>, <f-args>)$/;"	c
VCSAnnotate	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSAnnotate(bang, ...)$/;"	f
VCSBlame	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* -bang VCSBlame call s:VCSAnnotate(<q-bang>, <f-args>)$/;"	c
VCSCommand	.\vimfiles\plugin\vcscommand.vim	/^augroup VCSCommand$/;"	a
VCSCommandChangeToCurrentFileDir	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandChangeToCurrentFileDir(fileName)$/;"	f
VCSCommandChdir	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandChdir(directory)$/;"	f
VCSCommandCommit	.\vimfiles\plugin\vcscommand.vim	/^augroup VCSCommandCommit$/;"	a
VCSCommandDisableBufferSetup	.\vimfiles\plugin\vcscommand.vim	/^com! VCSCommandDisableBufferSetup call VCSCommandDisableBufferSetup()$/;"	c
VCSCommandDisableBufferSetup	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandDisableBufferSetup()$/;"	f
VCSCommandDoCommand	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandDoCommand(cmd, cmdName, statusText, options)$/;"	f
VCSCommandEnableBufferSetup	.\vimfiles\plugin\vcscommand.vim	/^com! VCSCommandEnableBufferSetup call VCSCommandEnableBufferSetup()$/;"	c
VCSCommandEnableBufferSetup	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandEnableBufferSetup()$/;"	f
VCSCommandGetOption	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandGetOption(name, default)$/;"	f
VCSCommandGetOriginalBuffer	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandGetOriginalBuffer(vcsBuffer)$/;"	f
VCSCommandGetStatusLine	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandGetStatusLine()$/;"	f
VCSCommandGetVCSType	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandGetVCSType(buffer)$/;"	f
VCSCommandRegisterModule	.\vimfiles\plugin\vcscommand.vim	/^function! VCSCommandRegisterModule(name, path, commandMap, mappingMap)$/;"	f
VCSCommandUtility.system	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSCommandUtility.system(...)$/;"	f
VCSCommandVIMShutdown	.\vimfiles\plugin\vcscommand.vim	/^augroup VCSCommandVIMShutdown$/;"	a
VCSCommit	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=? -bang VCSCommit call s:VCSCommit(<q-bang>, <q-args>)$/;"	c
VCSCommit	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSCommit(bang, message)$/;"	f
VCSDelete	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSDelete call s:ExecuteVCSCommand('Delete', [<f-args>])$/;"	c
VCSDiff	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSDiff call s:VCSDiff(<f-args>)$/;"	c
VCSDiff	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSDiff(...)  "{{{2$/;"	f
VCSFinishCommit	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSFinishCommit(logMessageList, originalBuffer)$/;"	f
VCSFinishCommitWithBuffer	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSFinishCommitWithBuffer()$/;"	f
VCSGotoOriginal	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=0 -bang VCSGotoOriginal call s:VCSGotoOriginal(<q-bang>)$/;"	c
VCSGotoOriginal	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSGotoOriginal(bang)$/;"	f
VCSInfo	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSInfo call s:ExecuteVCSCommand('Info', [<f-args>])$/;"	c
VCSLock	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSLock call s:MarkOrigBufferForSetup(s:ExecuteVCSCommand('Lock', [<f-args>]))$/;"	c
VCSLog	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSLog call s:ExecuteVCSCommand('Log', [<f-args>])$/;"	c
VCSReload	.\vimfiles\plugin\vcscommand.vim	/^com! VCSReload let savedPlugins = s:plugins|let s:plugins = {}|aunmenu VCS|unlet! g:loaded_VCSCommand|runtime plugin\/vcscommand.vim|for plugin in values(savedPlugins)|execute 'source' plugin[0]|endfor|unlet savedPlugins$/;"	c
VCSRemove	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSRemove call s:ExecuteVCSCommand('Delete', [<f-args>])$/;"	c
VCSRevert	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=0 VCSRevert call s:MarkOrigBufferForSetup(s:ExecuteVCSCommand('Revert', []))$/;"	c
VCSReview	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=? VCSReview call s:VCSReview(<f-args>)$/;"	c
VCSReview	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSReview(...)  "{{{2$/;"	f
VCSStatus	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSStatus call s:ExecuteVCSCommand('Status', [<f-args>])$/;"	c
VCSUnlock	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSUnlock call s:MarkOrigBufferForSetup(s:ExecuteVCSCommand('Unlock', [<f-args>]))$/;"	c
VCSUpdate	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=0 VCSUpdate call s:MarkOrigBufferForSetup(s:ExecuteVCSCommand('Update', []))$/;"	c
VCSVimDiff	.\vimfiles\plugin\vcscommand.vim	/^com! -nargs=* VCSVimDiff call s:VCSVimDiff(<f-args>)$/;"	c
VCSVimDiff	.\vimfiles\plugin\vcscommand.vim	/^function! s:VCSVimDiff(...)$/;"	f
VERSION	.\vim73\tools\efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VOOM_SCRIPT	.\vimfiles\plugin\voom\voom.py	/^VOOM_SCRIPT = vim.eval('s:voom_script_py')$/;"	v
VarNames	.\vim73\tools\pltags.pl	/^sub VarNames($)$/;"	s
VbGetIndent	.\vim73\indent\vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	.\vim73\ftplugin\vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
Vexplore	.\vim73\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Vexplore	call netrw#Explore(<count>,1,4+<bang>0,<q-args>)$/;"	c
VimDiffRestore	.\vimfiles\plugin\vcscommand.vim	/^augroup VimDiffRestore$/;"	a
VimDiffRestore	.\vimfiles\plugin\vcscommand.vim	/^function! s:VimDiffRestore(vimDiffBuff)$/;"	f
VimEnter	.\vim73\plugin\netrwPlugin.vim	/^fun! s:VimEnter(dirname)$/;"	f
VimballList	.\vim73\plugin\vimballPlugin.vim	/^com! -na=0                VimballList						call vimball#Vimball(0)$/;"	c
Vimuntar	.\vim73\plugin\tarPlugin.vim	/^com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)$/;"	c
Vimwiki2HTML	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer Vimwiki2HTML$/;"	c
VimwikiAll2HTML	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiAll2HTML$/;"	c
VimwikiDeleteWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiDeleteWord call vimwiki#WikiDeleteWord()$/;"	c
VimwikiFoldLevel	.\vimfiles\ftplugin\vimwiki.vim	/^function! VimwikiFoldLevel(lnum) "{{{$/;"	f
VimwikiFoldText	.\vimfiles\ftplugin\vimwiki.vim	/^function! VimwikiFoldText() "{{{$/;"	f
VimwikiFollowWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiFollowWord call vimwiki#WikiFollowWord('nosplit')$/;"	c
VimwikiGenerateLinks	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiGenerateLinks call vimwiki#generate_links()$/;"	c
VimwikiGet	.\vimfiles\plugin\vimwiki.vim	/^function! VimwikiGet(option, ...) "{{{$/;"	f
VimwikiGoBackWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiGoBackWord call vimwiki#WikiGoBackWord()$/;"	c
VimwikiGoHome	.\vimfiles\plugin\vimwiki.vim	/^command! -count VimwikiGoHome$/;"	c
VimwikiMakeDiaryNote	.\vimfiles\plugin\vimwiki.vim	/^command! -count VimwikiMakeDiaryNote$/;"	c
VimwikiNextWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiNextWord call vimwiki#WikiNextWord()$/;"	c
VimwikiPrevWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiPrevWord call vimwiki#WikiPrevWord()$/;"	c
VimwikiRenameWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiRenameWord call vimwiki#WikiRenameWord()$/;"	c
VimwikiSet	.\vimfiles\plugin\vimwiki.vim	/^function! VimwikiSet(option, value, ...) "{{{$/;"	f
VimwikiSplitWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiSplitWord call vimwiki#WikiFollowWord('split')$/;"	c
VimwikiTabGoHome	.\vimfiles\plugin\vimwiki.vim	/^command! -count VimwikiTabGoHome tabedit <bar>$/;"	c
VimwikiTabMakeDiaryNote	.\vimfiles\plugin\vimwiki.vim	/^command! -count VimwikiTabMakeDiaryNote tabedit <bar>$/;"	c
VimwikiTable	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer -nargs=* VimwikiTable call vimwiki_tbl#create(<f-args>)$/;"	c
VimwikiTableAlignQ	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiTableAlignQ call vimwiki_tbl#align_or_cmd('gqq')$/;"	c
VimwikiTableAlignW	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiTableAlignW call vimwiki_tbl#align_or_cmd('gww')$/;"	c
VimwikiTableMoveColumnLeft	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnLeft call vimwiki_tbl#move_column_left()$/;"	c
VimwikiTableMoveColumnRight	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnRight call vimwiki_tbl#move_column_right()$/;"	c
VimwikiToggleListItem	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer -range VimwikiToggleListItem call vimwiki_lst#ToggleListItem(<line1>, <line2>)$/;"	c
VimwikiUISelect	.\vimfiles\plugin\vimwiki.vim	/^command! VimwikiUISelect call vimwiki#WikiUISelect()$/;"	c
VimwikiVSplitWord	.\vimfiles\ftplugin\vimwiki.vim	/^command! -buffer VimwikiVSplitWord call vimwiki#WikiFollowWord('vsplit')$/;"	c
VimwikiWeblinkHandler	.\vimfiles\plugin\vimwiki.vim	/^  function VimwikiWeblinkHandler(weblink)$/;"	f
Voom	.\vimfiles\plugin\voom.vim	/^    com! -complete=custom,Voom_Complete -nargs=? Voom call Voom_Init(<q-args>)$/;"	c
VoomFoldingCleanup	.\vimfiles\plugin\voom.vim	/^com! -range VoomFoldingCleanup call Voom_OopFolding(<line1>,<line2>, 'cleanup')$/;"	c
VoomFoldingRestore	.\vimfiles\plugin\voom.vim	/^com! -range VoomFoldingRestore call Voom_OopFolding(<line1>,<line2>, 'restore')$/;"	c
VoomFoldingSave	.\vimfiles\plugin\voom.vim	/^com! -range VoomFoldingSave    call Voom_OopFolding(<line1>,<line2>, 'save')$/;"	c
VoomInfo	.\vimfiles\voom_addons\voom_info.vim	/^com! VoomInfo call Voom_Info()$/;"	c
VoomOutline	.\vimfiles\plugin\voom\voom.py	/^class VoomOutline: #{{{2$/;"	c	inherits:
VoomPrintData	.\vimfiles\plugin\voom.vim	/^    com! VoomPrintData  call Voom_PrintData()$/;"	c
VoomReload	.\vimfiles\plugin\voom.vim	/^    com! VoomReload    exe 'so '.s:script_path. ' | python reload(voom)'$/;"	c
VoomReloadAll	.\vimfiles\plugin\voom.vim	/^    com! VoomReloadAll call Voom_ReloadAllPre() | exe 'so '.s:script_path | call Voom_Init('')$/;"	c
VoomReloadModes	.\vimfiles\plugin\voom.vim	/^    com! VoomReloadModes call Voom_ReloadMarkupModes()$/;"	c
VoomReloadPy	.\vimfiles\plugin\voom.vim	/^    com! VoomReloadPy  python reload(voom)$/;"	c
VoomReloadVim	.\vimfiles\plugin\voom.vim	/^    com! VoomReloadVim exe 'so '.s:script_path$/;"	c
VoomSort	.\vimfiles\plugin\voom.vim	/^com! -range -nargs=? VoomSort call Voom_OopSort(<line1>,<line2>, <q-args>)$/;"	c
Voom_BodyBufEnter	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyBufEnter() "{{{2$/;"	f
Voom_BodyBufLeave	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyBufLeave() "{{{2$/;"	f
Voom_BodyCheckTicks	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyCheckTicks(body) "{{{2$/;"	f
Voom_BodyConfig	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyConfig() "{{{2$/;"	f
Voom_BodyMap	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyMap() "{{{2$/;"	f
Voom_BodySelect	.\vimfiles\plugin\voom.vim	/^func! Voom_BodySelect() "{{{2$/;"	f
Voom_BodyUnMap	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyUnMap() "{{{2$/;"	f
Voom_BodyUpdateTree	.\vimfiles\plugin\voom.vim	/^func! Voom_BodyUpdateTree() "{{{2$/;"	f
Voom_BufEditable	.\vimfiles\plugin\voom.vim	/^func! Voom_BufEditable(body) "{{{2$/;"	f
Voom_BufLoaded	.\vimfiles\plugin\voom.vim	/^func! Voom_BufLoaded(body) "{{{2$/;"	f
Voom_Complete	.\vimfiles\plugin\voom.vim	/^func! Voom_Complete(A,L,P) "{{{2$/;"	f
Voom_DeleteOutline	.\vimfiles\plugin\voom.vim	/^func! Voom_DeleteOutline(ex_command) "{{{2$/;"	f
Voom_EchoUNL	.\vimfiles\plugin\voom.vim	/^func! Voom_EchoUNL() "{{{2$/;"	f
Voom_ErrorMsg	.\vimfiles\plugin\voom.vim	/^func! Voom_ErrorMsg(...) "{{{2$/;"	f
Voom_Exec	.\vimfiles\plugin\voom.vim	/^func! Voom_Exec(qargs) "{{{2$/;"	f
Voom_FoldStatus	.\vimfiles\plugin\voom.vim	/^func! Voom_FoldStatus(lnum) "{{{2$/;"	f
Voom_GetBodyLines	.\vimfiles\plugin\voom.vim	/^func! Voom_GetBodyLines(lnum) "{{{2$/;"	f
Voom_GetBodyLines1	.\vimfiles\plugin\voom.vim	/^func! Voom_GetBodyLines1(lnum) "{{{2$/;"	f
Voom_GetBufInfo	.\vimfiles\plugin\voom.vim	/^func! Voom_GetBufInfo() "{{{2$/;"	f
Voom_GetData	.\vimfiles\plugin\voom.vim	/^func! Voom_GetData() "{{{2$/;"	f
Voom_GetVar	.\vimfiles\plugin\voom.vim	/^func! Voom_GetVar(var) "{{{2$/;"	f
Voom_Grep	.\vimfiles\plugin\voom.vim	/^func! Voom_Grep(input) "{{{2$/;"	f
Voom_GrepParseInput	.\vimfiles\plugin\voom.vim	/^func! Voom_GrepParseInput(input) "{{{2$/;"	f
Voom_GrepSearch	.\vimfiles\plugin\voom.vim	/^func! Voom_GrepSearch(pattern) "{{{2$/;"	f
Voom_Help	.\vimfiles\plugin\voom.vim	/^func! Voom_Help() "{{{2$/;"	f
Voom_Info	.\vimfiles\voom_addons\voom_info.vim	/^func! Voom_Info()$/;"	f
Voom_Init	.\vimfiles\plugin\voom.vim	/^func! Voom_Init(qargs) "{{{2$/;"	f
Voom_LogBufUnload	.\vimfiles\plugin\voom.vim	/^func! Voom_LogBufUnload() "{{{2$/;"	f
Voom_LogConfig	.\vimfiles\plugin\voom.vim	/^func! Voom_LogConfig() "{{{2$/;"	f
Voom_LogInit	.\vimfiles\plugin\voom.vim	/^func! Voom_LogInit() "{{{2$/;"	f
Voom_LogScroll	.\vimfiles\plugin\voom.vim	/^func! Voom_LogScroll() "{{{2$/;"	f
Voom_LogSessionLoad	.\vimfiles\plugin\voom.vim	/^func! Voom_LogSessionLoad() "{{{2$/;"	f
Voom_LogSyntax	.\vimfiles\plugin\voom.vim	/^func! Voom_LogSyntax() "{{{2$/;"	f
Voom_Oop	.\vimfiles\plugin\voom.vim	/^func! Voom_Oop(op, mode) "{{{3$/;"	f
Voom_OopEdit	.\vimfiles\plugin\voom.vim	/^func! Voom_OopEdit() "{{{3$/;"	f
Voom_OopFolding	.\vimfiles\plugin\voom.vim	/^func! Voom_OopFolding(ln1, ln2, action) "{{{3$/;"	f
Voom_OopFromBody	.\vimfiles\plugin\voom.vim	/^func! Voom_OopFromBody(body, tree, blnShow, setTick) "{{{3$/;"	f
Voom_OopInsert	.\vimfiles\plugin\voom.vim	/^func! Voom_OopInsert(as_child) "{{{3$/;"	f
Voom_OopMark	.\vimfiles\plugin\voom.vim	/^func! Voom_OopMark(op, mode) "{{{3$/;"	f
Voom_OopMarkStartup	.\vimfiles\plugin\voom.vim	/^func! Voom_OopMarkStartup() "{{{3$/;"	f
Voom_OopPaste	.\vimfiles\plugin\voom.vim	/^func! Voom_OopPaste() "{{{3$/;"	f
Voom_OopShowTree	.\vimfiles\plugin\voom.vim	/^func! Voom_OopShowTree(ln1, ln2, mode) " {{{3$/;"	f
Voom_OopSort	.\vimfiles\plugin\voom.vim	/^func! Voom_OopSort(ln1,ln2,qargs) "{{{3$/;"	f
Voom_OopVerify	.\vimfiles\plugin\voom.vim	/^func! Voom_OopVerify(body, tree, op) "{{{3$/;"	f
Voom_PrintData	.\vimfiles\plugin\voom.vim	/^func! Voom_PrintData() "{{{2$/;"	f
Voom_ReloadAllPre	.\vimfiles\plugin\voom.vim	/^func! Voom_ReloadAllPre() "{{{2$/;"	f
Voom_ReloadMarkupModes	.\vimfiles\plugin\voom.vim	/^func! Voom_ReloadMarkupModes() "{{{2$/;"	f
Voom_SetSnLn	.\vimfiles\plugin\voom.vim	/^func! Voom_SetSnLn(body, snLn) "{{{2$/;"	f
Voom_SplitIfUnique	.\vimfiles\plugin\voom.vim	/^func! Voom_SplitIfUnique() "{{{2$/;"	f
Voom_ToBody	.\vimfiles\plugin\voom.vim	/^func! Voom_ToBody(body) abort "{{{2$/;"	f
Voom_ToBodyWin	.\vimfiles\plugin\voom.vim	/^func! Voom_ToBodyWin() "{{{2$/;"	f
Voom_ToLogWin	.\vimfiles\plugin\voom.vim	/^func! Voom_ToLogWin() "{{{2$/;"	f
Voom_ToTree	.\vimfiles\plugin\voom.vim	/^func! Voom_ToTree(tree) abort "{{{2$/;"	f
Voom_ToTreeOrBodyWin	.\vimfiles\plugin\voom.vim	/^func! Voom_ToTreeOrBodyWin() "{{{2$/;"	f
Voom_ToTreeWin	.\vimfiles\plugin\voom.vim	/^func! Voom_ToTreeWin() "{{{2$/;"	f
Voom_TreeBufEnter	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeBufEnter() "{{{2$/;"	f
Voom_TreeBufUnload	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeBufUnload() "{{{2$/;"	f
Voom_TreeConfig	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeConfig(body) "{{{2$/;"	f
Voom_TreeConfigWin	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeConfigWin() "{{{2$/;"	f
Voom_TreeCreate	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeCreate(body) "{{{2$/;"	f
Voom_TreeFoldexpr	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeFoldexpr(lnum) "{{{2$/;"	f
Voom_TreeLeft	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeLeft() "{{{3$/;"	f
Voom_TreeMap	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeMap() "{{{2=$/;"	f
Voom_TreeMouseClick	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeMouseClick() "{{{3$/;"	f
Voom_TreeRight	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeRight() "{{{3$/;"	f
Voom_TreeSelect	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeSelect(stayInTree) "{{{3$/;"	f
Voom_TreeSessionLoad	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeSessionLoad() "{{{2$/;"	f
Voom_TreeSyntax	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeSyntax(body) "{{{2$/;"	f
Voom_TreeToLine	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeToLine(lnum) "{{{3$/;"	f
Voom_TreeToMark	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeToMark(back) "{{{3$/;"	f
Voom_TreeToSelected	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeToSelected() "{{{3$/;"	f
Voom_TreeToStartupNode	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeToStartupNode() "{{{3$/;"	f
Voom_TreeToggleFold	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeToggleFold() "{{{3$/;"	f
Voom_TreeZV	.\vimfiles\plugin\voom.vim	/^func! Voom_TreeZV() "{{{3$/;"	f
Voom_Tree_CO	.\vimfiles\plugin\voom.vim	/^func! Voom_Tree_CO(action, mode) "{{{3$/;"	f
Voom_Tree_KJUD	.\vimfiles\plugin\voom.vim	/^func! Voom_Tree_KJUD(action, mode) "{{{3$/;"	f
Voom_Tree_Pco	.\vimfiles\plugin\voom.vim	/^func! Voom_Tree_Pco(action, mode) "{{{3$/;"	f
Voom_UnVoom	.\vimfiles\plugin\voom.vim	/^func! Voom_UnVoom(body,tree) "{{{2$/;"	f
Voom_WarningMsg	.\vimfiles\plugin\voom.vim	/^func! Voom_WarningMsg(...) "{{{2$/;"	f
Voomexec	.\vimfiles\plugin\voom.vim	/^    com! -nargs=? Voomexec call Voom_Exec(<q-args>)$/;"	c
Voomgrep	.\vimfiles\plugin\voom.vim	/^com! -nargs=? Voomgrep call Voom_Grep(<q-args>)$/;"	c
Voomhelp	.\vimfiles\plugin\voom.vim	/^    com! Voomhelp call Voom_Help()$/;"	c
Voomlog	.\vimfiles\plugin\voom.vim	/^    com! Voomlog  call Voom_LogInit()$/;"	c
Voomunl	.\vimfiles\plugin\voom.vim	/^com! Voomunl call Voom_EchoUNL()$/;"	c
WMClose	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=0 WMClose :silent call <SID>CloseWindowsManager()$/;"	c
WMToggle	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=0 WMToggle :silent call <SID>ToggleWindowsManager()$/;"	c
WManager	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=0 WManager :silent call <SID>StartWindowsManager()$/;"	c
WarnIfNotUnfinalised	.\vim73\ftplugin\debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
WhichMemberVisible	.\vimfiles\plugin\winmanager.vim	/^function! <SID>WhichMemberVisible(i)$/;"	f
Wholematch	.\vim73\macros\matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Wholematch	.\vimfiles\plugin\matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WikiHiLink	.\vimfiles\syntax\creole.vim	/^  command! -nargs=+ WikiHiLink hi def link <args>$/;"	c
WikiHiLink	.\vimfiles\syntax\creole.vim	/^  command! -nargs=+ WikiHiLink hi link <args>$/;"	c
WillComplete	.\vimfiles\plugin\supertab.vim	/^function! s:WillComplete()$/;"	f
WinManagerFileEdit	.\vimfiles\plugin\winmanager.vim	/^function! WinManagerFileEdit(bufName, split)$/;"	f
WinManagerForceReSize	.\vimfiles\plugin\winmanager.vim	/^function! WinManagerForceReSize(explName)$/;"	f
WinManagerGetLastEditedFile	.\vimfiles\plugin\winmanager.vim	/^function! WinManagerGetLastEditedFile(...)$/;"	f
WinManagerGotoNextInGroup	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=1 WinManagerGotoNextInGroup :silent call <SID>GotoNextExplorerInGroup(<args>)$/;"	c
WinManagerGotoPrevInGroup	.\vimfiles\plugin\winmanager.vim	/^	command -nargs=1 WinManagerGotoPrevInGroup :silent call <SID>GotoNextExplorerInGroup(<args>,-1)$/;"	c
WinManagerResumeAUs	.\vimfiles\plugin\winmanager.vim	/^function! WinManagerResumeAUs()$/;"	f
WinManagerSuspendAUs	.\vimfiles\plugin\winmanager.vim	/^function! WinManagerSuspendAUs()$/;"	f
WipeoutCommandBuffers	.\vimfiles\plugin\vcscommand.vim	/^function! s:WipeoutCommandBuffers(originalBuffer, VCSCommand)$/;"	f
Worker	.\vimfiles\autoload\l9\async.py	/^class Worker(threading.Thread):$/;"	c	inherits:threading.Thread
WrapMessage	.\vimfiles\autoload\mark.vim	/^	function! s:WrapMessage( searchType, searchPattern, isBackward )$/;"	f
Wydawca	.\vim73\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly) - wg 6. ang. wydania$/;"	l
Wydawca	.\vim73\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly).$/;"	l
Wydawca	.\vim73\tutor\tutor.pl	/^	Wydawca: New Riders$/;"	l
Wydawca	.\vim73\tutor\tutor.pl	/^	Wydawca: O'Reilly & Associates Inc.$/;"	l
XMLent	.\vim73\ftplugin\xml.vim	/^command! -nargs=? XMLent call xmlcomplete#CreateEntConnection(<f-args>)$/;"	c
XMLns	.\vim73\ftplugin\xml.vim	/^command! -nargs=+ XMLns call xmlcomplete#CreateConnection(<f-args>)$/;"	c
XcodeRun	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^fun s:XcodeRun(command)$/;"	f
Xf86confdeclopt	.\vim73\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86confValue,xf86confComment skipwhite$/;"	c
Xf86confdeclopt	.\vim73\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
XmlIndentGet	.\vim73\indent\xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f
XmlIndentSum	.\vim73\indent\xml.vim	/^fun! <SID>XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentSynCheck	.\vim73\indent\xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f
XmlIndentWithPattern	.\vim73\indent\xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f
Xterm2rgb	.\vimfiles\plugin\colorizer.vim	/^function! s:Xterm2rgb(color) "{{{2$/;"	f
Xterm2rgb	.\vimfiles\syntax\css.vim	/^function! s:Xterm2rgb(color) $/;"	f
XxdBack	.\vim73\menu.vim	/^func! s:XxdBack()$/;"	f
XxdConv	.\vim73\menu.vim	/^func! s:XxdConv()$/;"	f
XxdFind	.\vim73\menu.vim	/^func! s:XxdFind()$/;"	f
ZipBrowseSelect	.\vim73\autoload\zip.vim	/^fun! s:ZipBrowseSelect()$/;"	f
["	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
[#	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[%	.\vim73\macros\matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	.\vim73\macros\matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	.\vim73\macros\matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[%	.\vimfiles\plugin\matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	.\vimfiles\plugin\matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	.\vimfiles\plugin\matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[M	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[M	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	.\vim73\ftplugin\abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\s*\\.','bW')<CR>$/;"	m
[[	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	.\vim73\ftplugin\python.vim	/^nnoremap <silent> <buffer> [[ :call <SID>Python_jump('?^\\(class\\\\|def\\)')<cr>$/;"	m
[[	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[[	.\vim73\ftplugin\sql.vim	/^nmap <buffer> <silent> [[ :call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	.\vim73\ftplugin\sql.vim	/^vmap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	.\vim73\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[[	.\vim73\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[[	.\vim73\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> [[ m':call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	.\vim73\ftplugin\sql.vim	/^nmap <buffer> <silent> [] :call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	.\vim73\ftplugin\sql.vim	/^vmap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	.\vim73\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[]	.\vim73\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[]	.\vim73\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> [] m':call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[m	.\vim73\ftplugin\python.vim	/^nnoremap <silent> <buffer> [m :call <SID>Python_jump('?^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
[m	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
[m	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]"	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]#	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]%	.\vim73\macros\matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	.\vim73\macros\matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	.\vim73\macros\matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]%	.\vimfiles\plugin\matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	.\vimfiles\plugin\matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	.\vimfiles\plugin\matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]M	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
]M	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
][	.\vim73\ftplugin\sql.vim	/^nmap <buffer> <silent> ][ :call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	.\vim73\ftplugin\sql.vim	/^vmap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	.\vim73\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
][	.\vim73\ftplugin\vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
][	.\vim73\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> ][ m':call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
][	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
][	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	.\vim73\ftplugin\abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	.\vim73\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\.','W')<CR>$/;"	m
]]	.\vim73\ftplugin\hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	.\vim73\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]] :call <SID>Python_jump('\/^\\(class\\\\|def\\)')<cr>$/;"	m
]]	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	.\vim73\ftplugin\sql.vim	/^nmap <buffer> <silent> ]] :call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	.\vim73\ftplugin\sql.vim	/^vmap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	.\vim73\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
]]	.\vim73\ftplugin\vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
]]	.\vim73\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	.\vim73\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]] m':call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	.\vim73\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]m	.\vim73\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]m :call <SID>Python_jump('\/^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
]m	.\vim73\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
]m	.\vimfiles\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
__ARGS	.\vim73\tools\xcmdsrv_client.c	32;"	d	file:
__CCFILTER_C__	.\vim73\tools\ccfilter.c	14;"	d	file:
__init__	.\vimfiles\autoload\l9\async.py	/^    def __init__(self):$/;"	m	class:Asyncer	access:public
__init__	.\vimfiles\autoload\l9\async.py	/^    def __init__(self):$/;"	m	class:Worker	access:public
__init__	.\vimfiles\autoload\l9\async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor	access:public
__init__	.\vimfiles\plugin\voom\voom.py	/^    def __init__(self): #{{{3$/;"	m	class:LogBufferClass	access:public
__init__	.\vimfiles\plugin\voom\voom.py	/^    def __init__(self,body):$/;"	m	class:VoomOutline	access:public
__init__	.\vimfiles\plugin\voom\voom_mode_python.py	/^    def __init__(self, blines):$/;"	m	class:BLines	access:public
_j	.\vim73\macros\justify.vim	/^nmap _j :%call Justify('tw',4)<CR>$/;"	m
_j	.\vim73\macros\justify.vim	/^vmap _j :call Justify('tw',4)<CR>$/;"	m
_makeArgumentList	.\vimfiles\autoload\genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	.\vimfiles\autoload\genutils.vim	/^function! s:_makeArgumentString()$/;"	f
a	.\vimfiles\voom_samples\test_outline.py	/^a = [1, # COMMENT, headline$/;"	v
a%	.\vim73\macros\matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
a%	.\vimfiles\plugin\matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
aM	.\vimfiles\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
a\	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> a\\ :<C-U>call vimwiki#TO_table_cell(0, 0)<CR>$/;"	m
a\	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> a\\ :<C-U>call vimwiki#TO_table_cell(0, 1)<CR>$/;"	m
abbreviate_from_dict	.\vimfiles\plugin\abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
abolish_l	.\vimfiles\plugin\rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	.\vimfiles\plugin\rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	.\vimfiles\plugin\rails.vim	/^function! s:abolish_t(word)$/;"	f
ac	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> ac :<C-U>call vimwiki#TO_table_col(0, 0)<CR>$/;"	m
ac	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> ac :<C-U>call vimwiki#TO_table_col(0, 1)<CR>$/;"	m
acp#completeSnipmate	.\vimfiles\autoload\acp.vim	/^function acp#completeSnipmate(findstart, base)$/;"	f
acp#disable	.\vimfiles\autoload\acp.vim	/^function acp#disable()$/;"	f
acp#enable	.\vimfiles\autoload\acp.vim	/^function acp#enable()$/;"	f
acp#lock	.\vimfiles\autoload\acp.vim	/^function acp#lock()$/;"	f
acp#meetsForCssOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForCssOmni(context)$/;"	f
acp#meetsForFile	.\vimfiles\autoload\acp.vim	/^function acp#meetsForFile(context)$/;"	f
acp#meetsForHtmlOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForHtmlOmni(context)$/;"	f
acp#meetsForKeyword	.\vimfiles\autoload\acp.vim	/^function acp#meetsForKeyword(context)$/;"	f
acp#meetsForPerlOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForPerlOmni(context)$/;"	f
acp#meetsForPythonOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForPythonOmni(context)$/;"	f
acp#meetsForRubyOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForRubyOmni(context)$/;"	f
acp#meetsForSnipmate	.\vimfiles\autoload\acp.vim	/^function acp#meetsForSnipmate(context)$/;"	f
acp#meetsForXmlOmni	.\vimfiles\autoload\acp.vim	/^function acp#meetsForXmlOmni(context)$/;"	f
acp#onBs	.\vimfiles\autoload\acp.vim	/^function acp#onBs()$/;"	f
acp#onPopupCloseSnipmate	.\vimfiles\autoload\acp.vim	/^function acp#onPopupCloseSnipmate()$/;"	f
acp#onPopupPost	.\vimfiles\autoload\acp.vim	/^function acp#onPopupPost()$/;"	f
acp#unlock	.\vimfiles\autoload\acp.vim	/^function acp#unlock()$/;"	f
activateFufBuffer	.\vimfiles\autoload\fuf.vim	/^function s:activateFufBuffer()$/;"	f
activateNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	f
ada#Completion	.\vim73\autoload\ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	.\vim73\autoload\ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	.\vim73\autoload\ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	.\vim73\autoload\ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	.\vim73\autoload\ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	.\vim73\autoload\ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	.\vim73\autoload\ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	.\vim73\autoload\ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	.\vim73\autoload\ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	.\vim73\autoload\ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	.\vim73\autoload\ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	.\vim73\autoload\ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	.\vim73\autoload\ada.vim	/^function ada#Word (...)$/;"	f
adacomplete#Complete	.\vim73\autoload\adacomplete.vim	/^function! adacomplete#Complete (findstart, base)$/;"	f
add_link	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:add_link(page, header, link) "{{{$/;"	f
add_methods	.\vimfiles\autoload\rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	.\vimfiles\plugin\bundler.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
addfilecmds	.\vimfiles\autoload\rails.vim	/^function! s:addfilecmds(type)$/;"	f
addtorecent	.\vimfiles\plugin\functionlist.vim	/^function! s:addtorecent(fnc,lno)$/;"	f
afold	.\vim73\syntax\2html.vim	/^	  let afold.firstline = g:html_start_line$/;"	v
afold	.\vim73\syntax\2html.vim	/^	let afold.firstline = g:html_start_line$/;"	v
afold	.\vim73\syntax\2html.vim	/^      let afold.level -= leveladjust$/;"	v
ah	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> ah :<C-U>call vimwiki#TO_header(0, 0)<CR>$/;"	m
ah	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> ah :<C-U>call vimwiki#TO_header(0, 1)<CR>$/;"	m
all_siblings_checked	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:all_siblings_checked(lnum) "{{{$/;"	f
allsteps	.\vim73\ftplugin\cucumber.vim	/^function! s:allsteps()$/;"	f
alternateExtensionsDict	.\vimfiles\plugin\a.vim	/^let alternateExtensionsDict = {}$/;"	v
am	.\vimfiles\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
any	.\vimfiles\plugin\vimwiki.vim	/^let any = upp.nup$/;"	v
app_background_script_command	.\vimfiles\autoload\rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_dbext_settings	.\vimfiles\autoload\rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	.\vimfiles\autoload\rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_destroy_command	.\vimfiles\autoload\rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_environments	.\vimfiles\autoload\rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	.\vimfiles\autoload\rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_script_command	.\vimfiles\autoload\rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_file	.\vimfiles\autoload\rails.vim	/^function! s:app_file(name)$/;"	f
app_find_file	.\vimfiles\autoload\rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_generate_command	.\vimfiles\autoload\rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generators	.\vimfiles\autoload\rails.vim	/^function! s:app_generators() dict$/;"	f
app_has	.\vimfiles\autoload\rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	.\vimfiles\autoload\rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_lightweight_ruby_eval	.\vimfiles\autoload\rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	.\vimfiles\autoload\rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	.\vimfiles\autoload\rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_path	.\vimfiles\autoload\rails.vim	/^function! s:app_path(...) dict$/;"	f
app_rake_tasks	.\vimfiles\autoload\rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	.\vimfiles\autoload\rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	.\vimfiles\autoload\rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_shell_command	.\vimfiles\autoload\rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_runner_command	.\vimfiles\autoload\rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_script_command	.\vimfiles\autoload\rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_shell_command	.\vimfiles\autoload\rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_server_command	.\vimfiles\autoload\rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_source_callback	.\vimfiles\autoload\rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_tags_command	.\vimfiles\autoload\rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	.\vimfiles\autoload\rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	.\vimfiles\autoload\rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	.\vimfiles\autoload\rails.vim	/^function! s:app_user_classes() dict$/;"	f
argv	.\vimfiles\lib\extras\cocoa_classes.py	/^    from sys import argv$/;"	i
argv	.\vimfiles\lib\extras\cocoa_definitions.py	/^from sys import argv$/;"	i
argv	.\vimfiles\lib\extras\cocoa_methods.py	/^    from sys import argv$/;"	i
at	.\vim73\syntax\sed.vim	/^let __at = char2nr("@")$/;"	v
auto_load_session	.\vimfiles\plugin\gsession.vim	/^fun! s:auto_load_session()$/;"	f
auto_save_session	.\vimfiles\plugin\gsession.vim	/^fun! s:auto_save_session()$/;"	f
autocamelize	.\vimfiles\autoload\rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	.\vimfiles\plugin\rails.vim	/^function! s:autoload(...)$/;"	f
b	.\vim73\macros\less.vim	/^noremap <script> b <C-B><SID>L$/;"	m
b	.\vimfiles\voom_samples\test_outline.py	/^    b = []$/;"	v	class:Class1
b	.\vimfiles\voom_samples\test_outline.py	/^    b = []$/;"	v	class:Class2
b:	.\vim73\syntax\liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:InPHPcode	.\vim73\indent\php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode	.\vimfiles\indent\php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	.\vim73\indent\php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_and_script	.\vimfiles\indent\php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	.\vim73\indent\php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_checked	.\vimfiles\indent\php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	.\vim73\indent\php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:InPHPcode_tofind	.\vimfiles\indent\php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	.\vim73\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	.\vim73\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_BracesAtCodeLevel	.\vimfiles\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	.\vimfiles\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	.\vim73\indent\php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_CurrentIndentLevel	.\vimfiles\indent\php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	.\vim73\indent\php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_InsideMultilineComment	.\vimfiles\indent\php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	.\vim73\indent\php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_LastIndentedWasComment	.\vimfiles\indent\php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	.\vim73\indent\php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	.\vim73\indent\php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_autoformatcomment	.\vimfiles\indent\php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	.\vimfiles\indent\php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	.\vim73\indent\php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	.\vim73\indent\php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_default_indenting	.\vimfiles\indent\php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	.\vimfiles\indent\php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	.\vim73\indent\php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentbeforelast	.\vimfiles\indent\php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	.\vim73\indent\php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_indentinghuge	.\vimfiles\indent\php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	.\vim73\indent\php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_lastindented	.\vimfiles\indent\php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	.\vim73\indent\php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_oldchangetick	.\vimfiles\indent\php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentphpescape	.\vim73\indent\php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	.\vim73\indent\php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	.\vim73\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	.\vim73\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:PHP_vintage_case_default_indent	.\vimfiles\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	.\vimfiles\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = PHP_vintage_case_default_indent$/;"	v
b:UserIsTypingComment	.\vim73\indent\php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:UserIsTypingComment	.\vimfiles\indent\php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:annotation_file_located	.\vim73\ftplugin\ocaml.vim	/^  let b:annotation_file_located = 0$/;"	v
b:autohotkey_syntax_sync_minlines	.\vim73\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = 50$/;"	v
b:autohotkey_syntax_sync_minlines	.\vim73\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = g:autohotkey_syntax_sync_minlines$/;"	v
b:bdf_minlines	.\vim73\syntax\bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	.\vim73\syntax\bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:browsefilter	.\vim73\ftplugin\abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\c.vim	/^    let b:browsefilter = "C Source Files (*.c)\\t*.c\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\c.vim	/^    let b:browsefilter = "C++ Source Files (*.cpp *.c++)\\t*.cpp;*.c++\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\c.vim	/^    let b:browsefilter = "Ch Source Files (*.ch *.chf)\\t*.ch;*.chf\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	.\vim73\ftplugin\config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\csh.vim	/^    let  b:browsefilter="csh Scripts (*.csh)\\t*.csh\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	.\vim73\ftplugin\dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn)\\t*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\ishd.vim	/^    let b:browsefilter = "InstallShield Files (*.rul)\\t*.rul\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	.\vim73\ftplugin\liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\msmessages.vim	/^  let b:browsefilter = "MS Message Files (*.mc)\\t*.mc\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\perl6.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\php.vim	/^    let  b:browsefilter="PHP Files (*.php)\\t*.php\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\python.vim	/^    let b:browsefilter = "Python Files (*.py)\\t*.py\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\sgml.vim	/^    let  b:browsefilter="SGML Files (*.sgml,*.sgm)\\t*.sgm*\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\sh.vim	/^    let  b:browsefilter="Bourne Shell Scripts (*.sh)\\t*.sh\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\svg.vim	/^    let  b:browsefilter="SVG Files (*.svg)\\t*.svg\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\tcsh.vim	/^    let  b:browsefilter="tcsh Scripts (*.tcsh)\\t*.tcsh\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\xml.vim	/^    let  b:browsefilter="XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:browsefilter	.\vim73\ftplugin\xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vim73\ftplugin\xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	.\vim73\syntax\lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:browsefilter	.\vimfiles\ftplugin\eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	.\vimfiles\ftplugin\ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:c_minlines	.\vim73\syntax\c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	.\vim73\syntax\c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	.\vim73\syntax\c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\vim73\syntax\calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	.\vim73\syntax\calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	.\vim73\syntax\calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\vim73\syntax\indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	.\vim73\syntax\indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	.\vim73\syntax\indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\vim73\syntax\lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	.\vim73\syntax\lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	.\vim73\syntax\lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:cocoa_proj	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^			let b:cocoa_proj = fnameescape(globpath(expand('<afile>:p:h:h:h:h'), '*.xcodeproj'))$/;"	v
b:cocoa_proj	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^		let b:cocoa_proj = fnameescape(globpath(expand('<afile>:p:h:h:h'), '*.xcodeproj'))$/;"	v
b:cocoa_proj	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^	let b:cocoa_proj  = fnameescape(globpath(expand('<afile>:p:h:h'), '*.xcodeproj'))$/;"	v
b:cocoa_proj	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^let b:cocoa_proj = fnameescape(globpath(expand('<afile>:p:h'), '*.xcodeproj'))$/;"	v
b:comment_end	.\vim73\ftplugin\sql.vim	/^let b:comment_end = '\\\\(^\\\\s*'.b:comment_leader.'.*\\\\n\\\\)'.$/;"	v
b:comment_jump_over	.\vim73\ftplugin\sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	.\vim73\ftplugin\sql.vim	/^let b:comment_leader = '\\\\(--\\\\\\|\\\\\/\\\\\/\\\\\\|\\\\*\\\\\\|\\\\\/\\\\*\\\\\\|\\\\*\\\\\/\\\\)'$/;"	v
b:comment_skip_back	.\vim73\ftplugin\sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	.\vim73\ftplugin\sql.vim	/^let b:comment_start  = '^\\\\(\\\\s*'.b:comment_leader.'.*\\\\n\\\\)\\\\@<!'.$/;"	v
b:cucumber_root	.\vim73\ftplugin\cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_ftplugin	.\vim73\ftplugin\sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	.\vim73\indent\sqlanywhere.vim	/^let b:current_indent = "sqlanywhere"$/;"	v
b:current_syntax	.\vim73\syntax\a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	.\vim73\syntax\a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	.\vim73\syntax\aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	.\vim73\syntax\abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	.\vim73\syntax\abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	.\vim73\syntax\abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	.\vim73\syntax\abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	.\vim73\syntax\acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	.\vim73\syntax\ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	.\vim73\syntax\aflex.vim	/^let b:current_syntax = "aflex"$/;"	v
b:current_syntax	.\vim73\syntax\ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	.\vim73\syntax\alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	.\vim73\syntax\amiga.vim	/^let b:current_syntax = "amiga"$/;"	v
b:current_syntax	.\vim73\syntax\aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	.\vim73\syntax\ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	.\vim73\syntax\ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	.\vim73\syntax\antlr.vim	/^let b:current_syntax = "antlr"$/;"	v
b:current_syntax	.\vim73\syntax\apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	.\vim73\syntax\apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	.\vim73\syntax\arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	.\vim73\syntax\art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	.\vim73\syntax\asm.vim	/^let b:current_syntax = "asm"$/;"	v
b:current_syntax	.\vim73\syntax\asm68k.vim	/^let b:current_syntax = "asm68k"$/;"	v
b:current_syntax	.\vim73\syntax\asmh8300.vim	/^let b:current_syntax = "asmh8300"$/;"	v
b:current_syntax	.\vim73\syntax\asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	.\vim73\syntax\aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	.\vim73\syntax\aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	.\vim73\syntax\asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	.\vim73\syntax\asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	.\vim73\syntax\atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	.\vim73\syntax\autohotkey.vim	/^let b:current_syntax = "autohotkey"$/;"	v
b:current_syntax	.\vim73\syntax\automake.vim	/^let b:current_syntax = "automake"$/;"	v
b:current_syntax	.\vim73\syntax\ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	.\vim73\syntax\awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	.\vim73\syntax\ayacc.vim	/^let b:current_syntax = "ayacc"$/;"	v
b:current_syntax	.\vim73\syntax\b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	.\vim73\syntax\baan.vim	/^let b:current_syntax = "baan"$/;"	v
b:current_syntax	.\vim73\syntax\basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	.\vim73\syntax\bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	.\vim73\syntax\bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	.\vim73\syntax\bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	.\vim73\syntax\bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	.\vim73\syntax\blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	.\vim73\syntax\bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	.\vim73\syntax\btm.vim	/^let b:current_syntax = "btm"$/;"	v
b:current_syntax	.\vim73\syntax\bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	.\vim73\syntax\c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	.\vim73\syntax\cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	.\vim73\syntax\calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	.\vim73\syntax\catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	.\vim73\syntax\cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	.\vim73\syntax\cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	.\vim73\syntax\cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	.\vim73\syntax\cf.vim	/^let b:current_syntax = "cf"$/;"	v
b:current_syntax	.\vim73\syntax\cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	.\vim73\syntax\ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	.\vim73\syntax\chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	.\vim73\syntax\change.vim	/^let b:current_syntax = "change"$/;"	v
b:current_syntax	.\vim73\syntax\changelog.vim	/^let b:current_syntax = "changelog"$/;"	v
b:current_syntax	.\vim73\syntax\cheetah.vim	/^let b:current_syntax = "cheetah"$/;"	v
b:current_syntax	.\vim73\syntax\chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	.\vim73\syntax\chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	.\vim73\syntax\cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	.\vim73\syntax\clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	.\vim73\syntax\clipper.vim	/^let b:current_syntax = "clipper"$/;"	v
b:current_syntax	.\vim73\syntax\cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	.\vim73\syntax\cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	.\vim73\syntax\cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	.\vim73\syntax\conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	.\vim73\syntax\conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	.\vim73\syntax\config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	.\vim73\syntax\context.vim	/^let b:current_syntax = "context"$/;"	v
b:current_syntax	.\vim73\syntax\cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	.\vim73\syntax\crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	.\vim73\syntax\crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	.\vim73\syntax\cs.vim	/^let b:current_syntax = "cs"$/;"	v
b:current_syntax	.\vim73\syntax\csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	.\vim73\syntax\csh.vim	/^let b:current_syntax = "csh"$/;"	v
b:current_syntax	.\vim73\syntax\csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	.\vim73\syntax\css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	.\vim73\syntax\cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	.\vim73\syntax\cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	.\vim73\syntax\cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	.\vim73\syntax\cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	.\vim73\syntax\cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	.\vim73\syntax\cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	.\vim73\syntax\cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	.\vim73\syntax\cweb.vim	/^let b:current_syntax = "cweb"$/;"	v
b:current_syntax	.\vim73\syntax\cynlib.vim	/^let b:current_syntax = "cynlib"$/;"	v
b:current_syntax	.\vim73\syntax\cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	.\vim73\syntax\d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	.\vim73\syntax\datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	.\vim73\syntax\dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	.\vim73\syntax\dcl.vim	/^let b:current_syntax = "dcl"$/;"	v
b:current_syntax	.\vim73\syntax\debchangelog.vim	/^let b:current_syntax = "debchangelog"$/;"	v
b:current_syntax	.\vim73\syntax\debcontrol.vim	/^let b:current_syntax = "debcontrol"$/;"	v
b:current_syntax	.\vim73\syntax\debsources.vim	/^let b:current_syntax = "debsources"$/;"	v
b:current_syntax	.\vim73\syntax\def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	.\vim73\syntax\denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	.\vim73\syntax\desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	.\vim73\syntax\desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	.\vim73\syntax\dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	.\vim73\syntax\dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	.\vim73\syntax\diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	.\vim73\syntax\dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	.\vim73\syntax\dirpager.vim	/^let b:current_syntax = "dirpager"$/;"	v
b:current_syntax	.\vim73\syntax\diva.vim	/^let b:current_syntax = "diva"$/;"	v
b:current_syntax	.\vim73\syntax\django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	.\vim73\syntax\dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	.\vim73\syntax\docbk.vim	/^let b:current_syntax = "docbk"$/;"	v
b:current_syntax	.\vim73\syntax\dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	.\vim73\syntax\dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	.\vim73\syntax\dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	.\vim73\syntax\doxygen.vim	/^    let b:current_syntax = "doxygen"$/;"	v
b:current_syntax	.\vim73\syntax\doxygen.vim	/^    let b:current_syntax = b:current_syntax.'.doxygen'$/;"	v
b:current_syntax	.\vim73\syntax\doxygen.vim	/^    let b:current_syntax=b:doxygen_syntax_save$/;"	v
b:current_syntax	.\vim73\syntax\dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	.\vim73\syntax\dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	.\vim73\syntax\dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	.\vim73\syntax\dtml.vim	/^let b:current_syntax = "dtml"$/;"	v
b:current_syntax	.\vim73\syntax\dtrace.vim	/^let b:current_syntax = "dtrace"$/;"	v
b:current_syntax	.\vim73\syntax\dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	.\vim73\syntax\dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	.\vim73\syntax\dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	.\vim73\syntax\ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	.\vim73\syntax\edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	.\vim73\syntax\eiffel.vim	/^let b:current_syntax = "eiffel"$/;"	v
b:current_syntax	.\vim73\syntax\elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	.\vim73\syntax\elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	.\vim73\syntax\elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	.\vim73\syntax\erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	.\vim73\syntax\eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	.\vim73\syntax\esmtprc.vim	/^let b:current_syntax="esmtprc"$/;"	v
b:current_syntax	.\vim73\syntax\esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	.\vim73\syntax\esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	.\vim73\syntax\eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	.\vim73\syntax\eviews.vim	/^let b:current_syntax="eviews"$/;"	v
b:current_syntax	.\vim73\syntax\exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	.\vim73\syntax\expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	.\vim73\syntax\exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	.\vim73\syntax\falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	.\vim73\syntax\fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	.\vim73\syntax\fasm.vim	/^let b:current_syntax = "fasm"$/;"	v
b:current_syntax	.\vim73\syntax\fdcc.vim	/^let b:current_syntax = "fdcc"$/;"	v
b:current_syntax	.\vim73\syntax\fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	.\vim73\syntax\fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	.\vim73\syntax\flexwiki.vim	/^let b:current_syntax="FlexWiki"$/;"	v
b:current_syntax	.\vim73\syntax\focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	.\vim73\syntax\form.vim	/^  let b:current_syntax = "form"$/;"	v
b:current_syntax	.\vim73\syntax\forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	.\vim73\syntax\fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	.\vim73\syntax\foxpro.vim	/^let b:current_syntax = "foxpro"$/;"	v
b:current_syntax	.\vim73\syntax\framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	.\vim73\syntax\freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	.\vim73\syntax\fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	.\vim73\syntax\fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	.\vim73\syntax\fvwm2m4.vim	/^let b:current_syntax = 'fvwm2m4'$/;"	v
b:current_syntax	.\vim73\syntax\gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	.\vim73\syntax\gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	.\vim73\syntax\gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	.\vim73\syntax\git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	.\vim73\syntax\gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	.\vim73\syntax\gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	.\vim73\syntax\gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	.\vim73\syntax\gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	.\vim73\syntax\gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	.\vim73\syntax\gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	.\vim73\syntax\gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	.\vim73\syntax\gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	.\vim73\syntax\gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	.\vim73\syntax\gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	.\vim73\syntax\grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	.\vim73\syntax\gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	.\vim73\syntax\groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	.\vim73\syntax\group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	.\vim73\syntax\grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	.\vim73\syntax\gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	.\vim73\syntax\gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	.\vim73\syntax\haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	.\vim73\syntax\hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	.\vim73\syntax\haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	.\vim73\syntax\haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	.\vim73\syntax\hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	.\vim73\syntax\hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	.\vim73\syntax\help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	.\vim73\syntax\hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	.\vim73\syntax\hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	.\vim73\syntax\hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	.\vim73\syntax\hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	.\vim73\syntax\hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	.\vim73\syntax\html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	.\vim73\syntax\htmlcheetah.vim	/^let b:current_syntax = "htmlcheetah"$/;"	v
b:current_syntax	.\vim73\syntax\htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	.\vim73\syntax\htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	.\vim73\syntax\htmlos.vim	/^let b:current_syntax = "htmlos"$/;"	v
b:current_syntax	.\vim73\syntax\ia64.vim	/^let b:current_syntax = "ia64"$/;"	v
b:current_syntax	.\vim73\syntax\ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	.\vim73\syntax\icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	.\vim73\syntax\icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	.\vim73\syntax\idl.vim	/^let b:current_syntax = "idl"$/;"	v
b:current_syntax	.\vim73\syntax\idlang.vim	/^let b:current_syntax = "idlang"$/;"	v
b:current_syntax	.\vim73\syntax\indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	.\vim73\syntax\inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	.\vim73\syntax\initex.vim	/^let b:current_syntax = "initex"$/;"	v
b:current_syntax	.\vim73\syntax\initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	.\vim73\syntax\inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	.\vim73\syntax\ishd.vim	/^let b:current_syntax = "ishd"$/;"	v
b:current_syntax	.\vim73\syntax\iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	.\vim73\syntax\ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	.\vim73\syntax\jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	.\vim73\syntax\jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	.\vim73\syntax\jargon.vim	/^let b:current_syntax = "jargon"$/;"	v
b:current_syntax	.\vim73\syntax\java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	.\vim73\syntax\javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	.\vim73\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	.\vim73\syntax\jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	.\vim73\syntax\jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	.\vim73\syntax\jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	.\vim73\syntax\jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	.\vim73\syntax\jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	.\vim73\syntax\kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	.\vim73\syntax\kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	.\vim73\syntax\kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	.\vim73\syntax\kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	.\vim73\syntax\lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	.\vim73\syntax\latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	.\vim73\syntax\ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	.\vim73\syntax\ldapconf.vim	/^let b:current_syntax = "ldapconf"$/;"	v
b:current_syntax	.\vim73\syntax\ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	.\vim73\syntax\lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	.\vim73\syntax\lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	.\vim73\syntax\lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	.\vim73\syntax\libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	.\vim73\syntax\lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	.\vim73\syntax\lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	.\vim73\syntax\limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	.\vim73\syntax\liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	.\vim73\syntax\lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	.\vim73\syntax\lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	.\vim73\syntax\litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	.\vim73\syntax\loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	.\vim73\syntax\logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	.\vim73\syntax\logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	.\vim73\syntax\lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	.\vim73\syntax\lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	.\vim73\syntax\lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	.\vim73\syntax\lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	.\vim73\syntax\lscript.vim	/^let b:current_syntax = "lscript"$/;"	v
b:current_syntax	.\vim73\syntax\lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	.\vim73\syntax\lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	.\vim73\syntax\lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	.\vim73\syntax\lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	.\vim73\syntax\m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	.\vim73\syntax\mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	.\vim73\syntax\mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	.\vim73\syntax\mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	.\vim73\syntax\make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	.\vim73\syntax\man.vim	/^let b:current_syntax = "man"$/;"	v
b:current_syntax	.\vim73\syntax\manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	.\vim73\syntax\maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	.\vim73\syntax\markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	.\vim73\syntax\masm.vim	/^let b:current_syntax = "masm"$/;"	v
b:current_syntax	.\vim73\syntax\mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	.\vim73\syntax\master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	.\vim73\syntax\matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	.\vim73\syntax\maxima.vim	/^let b:current_syntax = "maxima"$/;"	v
b:current_syntax	.\vim73\syntax\mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	.\vim73\syntax\messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	.\vim73\syntax\mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	.\vim73\syntax\mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	.\vim73\syntax\mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	.\vim73\syntax\mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	.\vim73\syntax\mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	.\vim73\syntax\mmix.vim	/^let b:current_syntax = "mmix"$/;"	v
b:current_syntax	.\vim73\syntax\mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	.\vim73\syntax\modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	.\vim73\syntax\model.vim	/^let b:current_syntax = "model"$/;"	v
b:current_syntax	.\vim73\syntax\modsim3.vim	/^let b:current_syntax = "modsim3"$/;"	v
b:current_syntax	.\vim73\syntax\modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	.\vim73\syntax\modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	.\vim73\syntax\monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	.\vim73\syntax\moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	.\vim73\syntax\mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	.\vim73\syntax\mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	.\vim73\syntax\mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	.\vim73\syntax\msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	.\vim73\syntax\msmessages.vim	/^let b:current_syntax = "msmessages"$/;"	v
b:current_syntax	.\vim73\syntax\msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	.\vim73\syntax\mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	.\vim73\syntax\muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	.\vim73\syntax\mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	.\vim73\syntax\named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	.\vim73\syntax\nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	.\vim73\syntax\nasm.vim	/^let b:current_syntax = "nasm"$/;"	v
b:current_syntax	.\vim73\syntax\nastran.vim	/^let b:current_syntax = "nastran"$/;"	v
b:current_syntax	.\vim73\syntax\natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	.\vim73\syntax\ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	.\vim73\syntax\netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	.\vim73\syntax\netrw.vim	/^let   b:current_syntax = "netrwlist"$/;"	v
b:current_syntax	.\vim73\syntax\nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	.\vim73\syntax\nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	.\vim73\syntax\nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	.\vim73\syntax\obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	.\vim73\syntax\objc.vim	/^let b:current_syntax = "objc"$/;"	v
b:current_syntax	.\vim73\syntax\objcpp.vim	/^let b:current_syntax = "objcpp"$/;"	v
b:current_syntax	.\vim73\syntax\ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	.\vim73\syntax\occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	.\vim73\syntax\omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	.\vim73\syntax\openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	.\vim73\syntax\opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	.\vim73\syntax\ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	.\vim73\syntax\pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	.\vim73\syntax\papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	.\vim73\syntax\pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	.\vim73\syntax\passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	.\vim73\syntax\pcap.vim	/^let b:current_syntax = "pcap"$/;"	v
b:current_syntax	.\vim73\syntax\pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	.\vim73\syntax\pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	.\vim73\syntax\perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	.\vim73\syntax\perl6.vim	/^let b:current_syntax = "perl6"$/;"	v
b:current_syntax	.\vim73\syntax\pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	.\vim73\syntax\pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	.\vim73\syntax\php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	.\vim73\syntax\pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	.\vim73\syntax\pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	.\vim73\syntax\pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	.\vim73\syntax\pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	.\vim73\syntax\pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	.\vim73\syntax\plaintex.vim	/^let b:current_syntax = "plaintex"$/;"	v
b:current_syntax	.\vim73\syntax\plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	.\vim73\syntax\plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	.\vim73\syntax\plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	.\vim73\syntax\po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	.\vim73\syntax\pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	.\vim73\syntax\postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	.\vim73\syntax\pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	.\vim73\syntax\povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	.\vim73\syntax\ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	.\vim73\syntax\ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	.\vim73\syntax\prescribe.vim	/^let b:current_syntax = "prescribe"$/;"	v
b:current_syntax	.\vim73\syntax\privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	.\vim73\syntax\procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	.\vim73\syntax\progress.vim	/^let b:current_syntax = "progress"$/;"	v
b:current_syntax	.\vim73\syntax\prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	.\vim73\syntax\promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	.\vim73\syntax\protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	.\vim73\syntax\psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	.\vim73\syntax\ptcap.vim	/^let b:current_syntax = "ptcap"$/;"	v
b:current_syntax	.\vim73\syntax\purifylog.vim	/^let b:current_syntax = "purifylog"$/;"	v
b:current_syntax	.\vim73\syntax\pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	.\vim73\syntax\python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	.\vim73\syntax\qf.vim	/^let b:current_syntax = "qf"$/;"	v
b:current_syntax	.\vim73\syntax\quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	.\vim73\syntax\r.vim	/^let b:current_syntax="r"$/;"	v
b:current_syntax	.\vim73\syntax\racc.vim	/^let b:current_syntax = "racc"$/;"	v
b:current_syntax	.\vim73\syntax\radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	.\vim73\syntax\ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	.\vim73\syntax\rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	.\vim73\syntax\rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	.\vim73\syntax\rcslog.vim	/^let b:current_syntax = "rcslog"$/;"	v
b:current_syntax	.\vim73\syntax\readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	.\vim73\syntax\rebol.vim	/^let b:current_syntax = "rebol"$/;"	v
b:current_syntax	.\vim73\syntax\registry.vim	/^let b:current_syntax = "registry"$/;"	v
b:current_syntax	.\vim73\syntax\remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	.\vim73\syntax\resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	.\vim73\syntax\reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	.\vim73\syntax\rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	.\vim73\syntax\rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	.\vim73\syntax\rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	.\vim73\syntax\rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	.\vim73\syntax\rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	.\vim73\syntax\robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	.\vim73\syntax\rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	.\vim73\syntax\rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	.\vim73\syntax\rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	.\vim73\syntax\rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	.\vim73\syntax\ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	.\vim73\syntax\samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	.\vim73\syntax\sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	.\vim73\syntax\sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	.\vim73\syntax\sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	.\vim73\syntax\scheme.vim	/^let b:current_syntax = "scheme"$/;"	v
b:current_syntax	.\vim73\syntax\scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	.\vim73\syntax\screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	.\vim73\syntax\scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	.\vim73\syntax\sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	.\vim73\syntax\sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	.\vim73\syntax\sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	.\vim73\syntax\sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	.\vim73\syntax\sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	.\vim73\syntax\services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	.\vim73\syntax\setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	.\vim73\syntax\sgml.vim	/^let b:current_syntax = "sgml"$/;"	v
b:current_syntax	.\vim73\syntax\sgmldecl.vim	/^let b:current_syntax = "sgmldecl"$/;"	v
b:current_syntax	.\vim73\syntax\sgmllnx.vim	/^let b:current_syntax = "sgmllnx"$/;"	v
b:current_syntax	.\vim73\syntax\sh.vim	/^ let b:current_syntax = "bash"$/;"	v
b:current_syntax	.\vim73\syntax\sh.vim	/^ let b:current_syntax = "ksh"$/;"	v
b:current_syntax	.\vim73\syntax\sh.vim	/^ let b:current_syntax = "sh"$/;"	v
b:current_syntax	.\vim73\syntax\sicad.vim	/^let b:current_syntax = "sicad"$/;"	v
b:current_syntax	.\vim73\syntax\sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	.\vim73\syntax\simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	.\vim73\syntax\sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	.\vim73\syntax\sindacmp.vim	/^let b:current_syntax = "sindacmp"$/;"	v
b:current_syntax	.\vim73\syntax\sindaout.vim	/^let b:current_syntax = "sindaout"$/;"	v
b:current_syntax	.\vim73\syntax\sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	.\vim73\syntax\skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	.\vim73\syntax\sl.vim	/^let b:current_syntax = "sl"$/;"	v
b:current_syntax	.\vim73\syntax\slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	.\vim73\syntax\slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	.\vim73\syntax\slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	.\vim73\syntax\slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	.\vim73\syntax\slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	.\vim73\syntax\slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	.\vim73\syntax\slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	.\vim73\syntax\sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	.\vim73\syntax\smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	.\vim73\syntax\smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	.\vim73\syntax\smil.vim	/^let b:current_syntax = "smil"$/;"	v
b:current_syntax	.\vim73\syntax\smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	.\vim73\syntax\sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	.\vim73\syntax\snnsnet.vim	/^let b:current_syntax = "snnsnet"$/;"	v
b:current_syntax	.\vim73\syntax\snnspat.vim	/^let b:current_syntax = "snnspat"$/;"	v
b:current_syntax	.\vim73\syntax\snnsres.vim	/^let b:current_syntax = "snnsres"$/;"	v
b:current_syntax	.\vim73\syntax\snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	.\vim73\syntax\spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	.\vim73\syntax\specman.vim	/^let b:current_syntax = "specman"$/;"	v
b:current_syntax	.\vim73\syntax\spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	.\vim73\syntax\splint.vim	/^let b:current_syntax = "splint"$/;"	v
b:current_syntax	.\vim73\syntax\spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	.\vim73\syntax\spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	.\vim73\syntax\sqlanywhere.vim	/^let b:current_syntax = "sqlanywhere"$/;"	v
b:current_syntax	.\vim73\syntax\sqlforms.vim	/^let b:current_syntax = "sqlforms"$/;"	v
b:current_syntax	.\vim73\syntax\sqlinformix.vim	/^let b:current_syntax = "sqlinformix"$/;"	v
b:current_syntax	.\vim73\syntax\sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	.\vim73\syntax\sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	.\vim73\syntax\sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	.\vim73\syntax\squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	.\vim73\syntax\sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	.\vim73\syntax\sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	.\vim73\syntax\st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	.\vim73\syntax\stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	.\vim73\syntax\stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	.\vim73\syntax\strace.vim	/^let b:current_syntax = "strace"$/;"	v
b:current_syntax	.\vim73\syntax\sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	.\vim73\syntax\svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	.\vim73\syntax\svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	.\vim73\syntax\sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	.\vim73\syntax\tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	.\vim73\syntax\tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	.\vim73\syntax\tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	.\vim73\syntax\takcmp.vim	/^let b:current_syntax = "takcmp"$/;"	v
b:current_syntax	.\vim73\syntax\takout.vim	/^let b:current_syntax = "takout"$/;"	v
b:current_syntax	.\vim73\syntax\taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	.\vim73\syntax\taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	.\vim73\syntax\tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	.\vim73\syntax\tcsh.vim	/^let b:current_syntax = 'tcsh'$/;"	v
b:current_syntax	.\vim73\syntax\terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	.\vim73\syntax\tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	.\vim73\syntax\texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	.\vim73\syntax\texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	.\vim73\syntax\tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	.\vim73\syntax\tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	.\vim73\syntax\tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	.\vim73\syntax\tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	.\vim73\syntax\tpp.vim	/^let b:current_syntax = "tpp"$/;"	v
b:current_syntax	.\vim73\syntax\trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	.\vim73\syntax\treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	.\vim73\syntax\tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	.\vim73\syntax\tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	.\vim73\syntax\tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	.\vim73\syntax\tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	.\vim73\syntax\uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	.\vim73\syntax\udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	.\vim73\syntax\udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	.\vim73\syntax\udevrules.vim	/^let b:current_syntax = "udevrules"$/;"	v
b:current_syntax	.\vim73\syntax\uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	.\vim73\syntax\updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	.\vim73\syntax\upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	.\vim73\syntax\valgrind.vim	/^let b:current_syntax = "valgrind"$/;"	v
b:current_syntax	.\vim73\syntax\vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	.\vim73\syntax\vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	.\vim73\syntax\verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	.\vim73\syntax\verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	.\vim73\syntax\vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	.\vim73\syntax\vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	.\vim73\syntax\vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	.\vim73\syntax\viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	.\vim73\syntax\virata.vim	/^let b:current_syntax = "virata"$/;"	v
b:current_syntax	.\vim73\syntax\vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	.\vim73\syntax\voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	.\vim73\syntax\vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	.\vim73\syntax\vsejcl.vim	/^let b:current_syntax = "vsejcl"$/;"	v
b:current_syntax	.\vim73\syntax\wdiff.vim	/^let b:current_syntax = "wdiff"$/;"	v
b:current_syntax	.\vim73\syntax\web.vim	/^let b:current_syntax = "web"$/;"	v
b:current_syntax	.\vim73\syntax\webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	.\vim73\syntax\wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	.\vim73\syntax\winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	.\vim73\syntax\wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	.\vim73\syntax\wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	.\vim73\syntax\wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	.\vim73\syntax\wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	.\vim73\syntax\xbl.vim	/^let b:current_syntax = "xbl"$/;"	v
b:current_syntax	.\vim73\syntax\xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	.\vim73\syntax\xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	.\vim73\syntax\xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	.\vim73\syntax\xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	.\vim73\syntax\xkb.vim	/^let b:current_syntax = "xkb"$/;"	v
b:current_syntax	.\vim73\syntax\xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	.\vim73\syntax\xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	.\vim73\syntax\xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	.\vim73\syntax\xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	.\vim73\syntax\xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	.\vim73\syntax\xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	.\vim73\syntax\xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	.\vim73\syntax\xxd.vim	/^let b:current_syntax = "xxd"$/;"	v
b:current_syntax	.\vim73\syntax\yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	.\vim73\syntax\yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	.\vim73\syntax\z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	.\vim73\syntax\zsh.vim	/^let b:current_syntax = "zsh"$/;"	v
b:current_syntax	.\vimfiles\colors\bandit.vim	/^let b:current_syntax = "colours_bandit"$/;"	v
b:current_syntax	.\vimfiles\syntax\CVSAnnotate.vim	/^let b:current_syntax="CVSAnnotate"$/;"	v
b:current_syntax	.\vimfiles\syntax\SVKAnnotate.vim	/^let b:current_syntax="svkAnnotate"$/;"	v
b:current_syntax	.\vimfiles\syntax\SVNAnnotate.vim	/^let b:current_syntax="svnAnnotate"$/;"	v
b:current_syntax	.\vimfiles\syntax\applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	.\vimfiles\syntax\creole.vim	/^let b:current_syntax = "creole"$/;"	v
b:current_syntax	.\vimfiles\syntax\css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	.\vimfiles\syntax\css3.vim	/^let b:current_syntax = "css3"$/;"	v
b:current_syntax	.\vimfiles\syntax\eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	.\vimfiles\syntax\git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitAnnotate.vim	/^let b:current_syntax="gitAnnotate"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	.\vimfiles\syntax\gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	.\vimfiles\syntax\gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	.\vimfiles\syntax\googlecodewiki.vim	/^let b:current_syntax="GoogleCodeWiki"$/;"	v
b:current_syntax	.\vimfiles\syntax\hgannotate.vim	/^let b:current_syntax="hgAnnotate"$/;"	v
b:current_syntax	.\vimfiles\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	.\vimfiles\syntax\jquery.vim	/^let b:current_syntax = 'jquery'$/;"	v
b:current_syntax	.\vimfiles\syntax\json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	.\vimfiles\syntax\mkd.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	.\vimfiles\syntax\nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	.\vimfiles\syntax\php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	.\vimfiles\syntax\python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	.\vimfiles\syntax\rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	.\vimfiles\syntax\ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	.\vimfiles\syntax\svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	.\vimfiles\syntax\svnlog.vim	/^let b:current_syntax = "svnlog"$/;"	v
b:current_syntax	.\vimfiles\syntax\vcscommit.vim	/^let b:current_syntax = "vcscommit"$/;"	v
b:current_syntax	.\vimfiles\syntax\vimwiki.vim	/^let b:current_syntax="vimwiki"$/;"	v
b:curret_syntax	.\vim73\syntax\tasm.vim	/^let b:curret_syntax = "tasm"$/;"	v
b:did_ftplugin	.\vim73\ftplugin\a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	.\vim73\ftplugin\alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\c.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\changelog.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\context.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\csh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\dtrace.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\flexwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_ftplugin	.\vim73\ftplugin\fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\haskell.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\initex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ishd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\javascript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\lua.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\man.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\msmessages.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\perl6.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\php.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\python.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\racc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sgml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\svg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\tcsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\udevrules.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\vim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vim73\ftplugin\zsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\vimfiles\ftplugin\vimwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_indent	.\vim73\indent\ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	.\vim73\indent\awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\c.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\changelog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cpp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\dtrace.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\eiffel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\erlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\idlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\ishd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\mma.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\objc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\perl6.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\sh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\sqlanywhere.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	.\vim73\indent\tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\tcsh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\vim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\xml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\indent\yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vim73\syntax\spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent	.\vimfiles\indent\eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vimfiles\indent\gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vimfiles\indent\php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\vimfiles\indent\ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_r_indent	.\vim73\indent\r.vim	/^let b:did_r_indent = 1$/;"	v
b:dnsmasq_backrgound_light	.\vim73\syntax\dnsmasq.vim	/^		let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	.\vim73\syntax\dnsmasq.vim	/^		let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:docbk_type	.\vim73\ftplugin\docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	.\vim73\ftplugin\docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	.\vim73\syntax\docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	.\vim73\syntax\docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	.\vim73\syntax\docbksgml.vim	/^let b:docbk_type="sgml"$/;"	v
b:docbk_type	.\vim73\syntax\docbkxml.vim	/^let b:docbk_type="xml"$/;"	v
b:doxygen_syntax_save	.\vim73\syntax\doxygen.vim	/^    let b:doxygen_syntax_save=b:current_syntax$/;"	v
b:enforce_freedesktop_standard	.\vim73\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 0$/;"	v
b:enforce_freedesktop_standard	.\vim73\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 1$/;"	v
b:eruby_nest_level	.\vim73\syntax\eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	.\vim73\syntax\eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	.\vimfiles\syntax\eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	.\vimfiles\syntax\eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\vim73\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\vim73\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vimfiles\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\vimfiles\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	.\vim73\indent\eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eruby_subtype_indentexpr	.\vimfiles\indent\eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	.\vim73\syntax\eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	.\vim73\syntax\eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "elf"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "f77"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "f90"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "f95"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = "unknown"$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^    let b:fortran_dialect = matchstr(fortran_dialect,'\\<\\(f\\(9[05]\\|77\\)\\|elf\\|F\\)\\>')$/;"	v
b:fortran_dialect	.\vim73\syntax\fortran.vim	/^  let b:fortran_dialect = "unknown"$/;"	v
b:fortran_fixed_source	.\vim73\ftplugin\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	.\vim73\indent\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\indent\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\indent\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	.\vim73\syntax\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\syntax\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\vim73\syntax\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	.\vim73\syntax\fortran.vim	/^  let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	.\vim73\syntax\framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	.\vim73\ftplugin\git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	.\vim73\ftplugin\git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	.\vim73\ftplugin\git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	.\vim73\ftplugin\gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:git_dir	.\vimfiles\ftplugin\git.vim	/^        let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	.\vimfiles\ftplugin\git.vim	/^        let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	.\vimfiles\ftplugin\git.vim	/^        let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	.\vimfiles\ftplugin\gitcommit.vim	/^    let b:git_dir = expand("%:p:h")$/;"	v
b:hs_chs	.\vim73\syntax\chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor .= 'f'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor .= 's'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor .= 't'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor = 'html40'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor = 'html401'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^                let b:html_omni_flavor = 'xhtml10'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^            let b:html_omni_flavor = 'html32'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^            let b:html_omni_flavor = 'html401t'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^            let b:html_omni_flavor = 'xhtml10s'$/;"	v
b:html_omni_flavor	.\vim73\ftplugin\html.vim	/^            let b:html_omni_flavor = 'xhtml11'$/;"	v
b:i	.\vim73\syntax\hitest.vim	/^   let b:i = b:i + 1$/;"	v
b:i	.\vim73\syntax\hitest.vim	/^let b:i = 1$/;"	v
b:indent_use_syntax	.\vim73\indent\perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	.\vim73\indent\perl6.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:is_bash	.\vim73\syntax\sh.vim	/^    let b:is_bash= 1$/;"	v
b:is_kornshell	.\vim73\syntax\sh.vim	/^    let b:is_kornshell= 1$/;"	v
b:is_sh	.\vim73\syntax\sh.vim	/^    let b:is_sh= 1$/;"	v
b:javascript_fold	.\vimfiles\syntax\javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:keymap	.\vim73\keymap\magyar_utf-8.vim	/^let b:keymap = "magyar"$/;"	v
b:keymap_name	.\vim73\keymap\accents.vim	/^let b:keymap_name = "acc"$/;"	v
b:keymap_name	.\vim73\keymap\arabic_utf-8.vim	/^let b:keymap_name = "arab"$/;"	v
b:keymap_name	.\vim73\keymap\bulgarian-bds.vim	/^let b:keymap_name = "bds"$/;"	v
b:keymap_name	.\vim73\keymap\bulgarian-phonetic.vim	/^let b:keymap_name = "pho"$/;"	v
b:keymap_name	.\vim73\keymap\canfr-win.vim	/^let b:keymap_name = "canfr"$/;"	v
b:keymap_name	.\vim73\keymap\croatian_cp1250.vim	/^let b:keymap_name = "croatian-cp1250"$/;"	v
b:keymap_name	.\vim73\keymap\croatian_iso-8859-2.vim	/^let b:keymap_name = "croatian-iso-8859-2"$/;"	v
b:keymap_name	.\vim73\keymap\croatian_utf-8.vim	/^let b:keymap_name = "croatian-UTF-8"$/;"	v
b:keymap_name	.\vim73\keymap\czech_utf-8.vim	/^let b:keymap_name = "czech"$/;"	v
b:keymap_name	.\vim73\keymap\dvorak.vim	/^let b:keymap_name = "en-dv"$/;"	v
b:keymap_name	.\vim73\keymap\esperanto_utf-8.vim	/^let b:keymap_name = "Eo"$/;"	v
b:keymap_name	.\vim73\keymap\greek_cp1253.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\vim73\keymap\greek_cp737.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\vim73\keymap\greek_iso-8859-7.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\vim73\keymap\greek_utf-8.vim	/^let b:keymap_name = "grk"$/;"	v
b:keymap_name	.\vim73\keymap\hebrew_cp1255.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\vim73\keymap\hebrew_iso-8859-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\vim73\keymap\hebrew_utf-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\vim73\keymap\hebrewp_cp1255.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\vim73\keymap\hebrewp_iso-8859-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\vim73\keymap\hebrewp_utf-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\vim73\keymap\kana.vim	/^let b:keymap_name = "kana"$/;"	v
b:keymap_name	.\vim73\keymap\lithuanian-baltic.vim	/^let b:keymap_name = "lt"$/;"	v
b:keymap_name	.\vim73\keymap\mongolian_utf-8.vim	/^let b:keymap_name = "mn"$/;"	v
b:keymap_name	.\vim73\keymap\persian-iranian_utf-8.vim	/^let b:keymap_name = "per"$/;"	v
b:keymap_name	.\vim73\keymap\pinyin.vim	/^let b:keymap_name = "py"$/;"	v
b:keymap_name	.\vim73\keymap\polish-slash_cp1250.vim	/^let b:keymap_name = "PL-slash-WIN"$/;"	v
b:keymap_name	.\vim73\keymap\polish-slash_cp852.vim	/^let b:keymap_name = "PL-slash-DOS"$/;"	v
b:keymap_name	.\vim73\keymap\polish-slash_iso-8859-2.vim	/^let b:keymap_name = "PL-slash-ISO"$/;"	v
b:keymap_name	.\vim73\keymap\polish-slash_utf-8.vim	/^let b:keymap_name = "PL-slash-UTF"$/;"	v
b:keymap_name	.\vim73\keymap\russian-dvorak.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\vim73\keymap\russian-jcuken.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\vim73\keymap\russian-jcukenwin.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\vim73\keymap\russian-yawerty.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\vim73\keymap\serbian-latin_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	.\vim73\keymap\serbian_cp1250.vim	/^let b:keymap_name = "serbian-cp1250"$/;"	v
b:keymap_name	.\vim73\keymap\serbian_cp1251.vim	/^let b:keymap_name = "serbian-cp1251"$/;"	v
b:keymap_name	.\vim73\keymap\serbian_iso-8859-2.vim	/^let b:keymap_name = "serbian-iso-8859-2"$/;"	v
b:keymap_name	.\vim73\keymap\serbian_iso-8859-5.vim	/^let b:keymap_name = "serbian-iso-8859-5"$/;"	v
b:keymap_name	.\vim73\keymap\serbian_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	.\vim73\keymap\sinhala-phonetic_utf-8.vim	/^let b:keymap_name = "sinhala"$/;"	v
b:keymap_name	.\vim73\keymap\slovak_cp1250.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\vim73\keymap\slovak_iso-8859-2.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\vim73\keymap\slovak_utf-8.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\vim73\keymap\tamil_tscii.vim	/^let b:keymap_name = "tamil_tscii"$/;"	v
b:keymap_name	.\vim73\keymap\thaana-phonetic_utf-8.vim	/^let b:keymap_name= "thaana"$/;"	v
b:keymap_name	.\vim73\keymap\ukrainian-dvorak.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	.\vim73\keymap\ukrainian-jcuken.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	.\vim73\keymap\vietnamese-viqr_utf-8.vim	/^let b:keymap_name = "vietnamese"$/;"	v
b:lhs_markup	.\vim73\syntax\lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	.\vim73\syntax\lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	.\vim73\syntax\lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	.\vim73\syntax\lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	.\vim73\syntax\lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	.\vim73\ftplugin\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	.\vim73\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\vim73\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	.\vim73\ftplugin\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\vim73\syntax\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	.\vim73\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\vim73\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	.\vim73\syntax\liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	.\vim73\syntax\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	.\vim73\indent\liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:main_syntax	.\vim73\syntax\groff.vim	/^let b:main_syntax = "nroff"$/;"	v
b:match_ignorecase	.\vim73\ftplugin\abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\context.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\ishd.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\lua.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_ignorecase	.\vim73\ftplugin\plaintex.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\vim73\ftplugin\vim.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\vim73\ftplugin\xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\vimfiles\ftplugin\ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	.\vim73\ftplugin\c.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	.\vim73\ftplugin\context.vim	/^  let b:match_skip = 'r:\\\\\\@<!\\%(\\\\\\\\\\)*%'$/;"	v
b:match_skip	.\vim73\ftplugin\dtrace.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	.\vim73\ftplugin\ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	.\vim73\ftplugin\vim.vim	/^  let b:match_skip = 'getline(".") =~ "^\\\\s*sy\\\\%[ntax]\\\\s\\\\+region" ||$/;"	v
b:match_skip	.\vim73\ftplugin\zsh.vim	/^let b:match_skip = 's:comment\\|string\\|heredoc\\|subst'$/;"	v
b:match_skip	.\vimfiles\ftplugin\ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	.\vim73\ftplugin\abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	.\vim73\ftplugin\ada.vim	/^   let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\c.vim	/^let b:match_words = &matchpairs . ',^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s*#\\s*endif\\>'$/;"	v
b:match_words	.\vim73\ftplugin\cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	.\vim73\ftplugin\context.vim	/^  let b:match_words = '(:),\\[:],{:},\\\\(:\\\\),\\\\\\[:\\\\],' .$/;"	v
b:match_words	.\vim73\ftplugin\csc.vim	/^    let b:match_words=$/;"	v
b:match_words	.\vim73\ftplugin\csh.vim	/^    let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	.\vim73\ftplugin\dtrace.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	.\vim73\ftplugin\eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.\vim73\ftplugin\falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.\vim73\ftplugin\hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	.\vim73\ftplugin\ishd.vim	/^    let b:match_words=$/;"	v
b:match_words	.\vim73\ftplugin\jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	.\vim73\ftplugin\liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	.\vim73\ftplugin\liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	.\vim73\ftplugin\liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	.\vim73\ftplugin\lua.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\matlab.vim	/^	let b:match_words = '\\<if\\>\\|\\<while\\>\\|\\<for\\>\\|\\<switch\\>:' .$/;"	v
b:match_words	.\vim73\ftplugin\ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	.\vim73\ftplugin\pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:match_words	.\vim73\ftplugin\pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	.\vim73\ftplugin\pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	.\vim73\ftplugin\pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	.\vim73\ftplugin\pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<endstream\\>,\\<xref\\>:\\<trailer\\>,<<:>>'$/;"	v
b:match_words	.\vim73\ftplugin\php.vim	/^    let b:match_words = '<?php:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:match_words	.\vim73\ftplugin\postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grestore\\>'$/;"	v
b:match_words	.\vim73\ftplugin\ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\sh.vim	/^    let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\spec.vim	/^let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\sql.vim	/^    let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	.\vim73\ftplugin\vb.vim	/^    let b:match_words=$/;"	v
b:match_words	.\vim73\ftplugin\verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	.\vim73\ftplugin\vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\vim.vim	/^  let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	.\vim73\ftplugin\xml.vim	/^    let b:match_words =$/;"	v
b:match_words	.\vim73\ftplugin\zsh.vim	/^let b:match_words =$/;"	v
b:match_words	.\vim73\syntax\cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	.\vimfiles\ftplugin\eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.\vimfiles\ftplugin\ruby.vim	/^  let b:match_words =$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	.\vim73\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:nroff_is_groff	.\vim73\syntax\groff.vim	/^let b:nroff_is_groff = 1$/;"	v
b:optionsset	.\vim73\indent\php.vim	/^let b:optionsset = 0$/;"	v
b:optionsset	.\vimfiles\indent\php.vim	/^let b:optionsset = 0$/;"	v
b:pdf_tagstack	.\vim73\ftplugin\pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:ruby_no_expensive	.\vim73\syntax\haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	.\vim73\syntax\ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	.\vimfiles\syntax\ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:spell_options	.\vim73\syntax\groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	.\vim73\syntax\java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	.\vim73\syntax\wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	.\vim73\ftplugin\sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	.\vim73\ftplugin\sql.vim	/^    let b:sql_vis = 1$/;"	v
b:synhead	.\vim73\syntax\hitest.vim	/^	    let b:synhead = b:synhead."s"$/;"	v
b:synhead	.\vim73\syntax\hitest.vim	/^	 let b:synhead = b:synhead." - filetype"$/;"	v
b:synhead	.\vim73\syntax\hitest.vim	/^	 let b:synhead = b:synhead.":".@a$/;"	v
b:synhead	.\vim73\syntax\hitest.vim	/^   let b:synhead = "Syntax highlighting groups"$/;"	v
b:tex_stylish	.\vim73\syntax\tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	.\vim73\syntax\tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	.\vim73\syntax\tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:browsefilter"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\c.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\changelog.vim	/^    let b:undo_ftplugin .= " tw<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\changelog.vim	/^  let b:undo_ftplugin = "setl com< fo< et< ai<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\context.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< sua< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\csh.vim	/^let b:undo_ftplugin = "setlocal commentstring< formatoptions<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cucumber.vim	/^  let b:undo_ftplugin .= "| sil! iunmap! <C-]>| sil! iunmap! <C-W>]| sil! iunmap! <C-W><C-]>| sil! iunmap! <C-W>}"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\debchangelog.vim	/^let b:undo_ftplugin = "setlocal tw< comments< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\debcontrol.vim	/^let b:undo_ftplugin = "setlocal tw< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\dtrace.vim	/^let b:undo_ftplugin = "setl fo< com< cms< isk<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\flexwiki.vim	/^let b:undo_ftplugin = "setl tw< wrap< lbr< et< ts< fenc< bomb< ff<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitcommit.vim	/^    let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitcommit.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . "|setl tw<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\haskell.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\initex.vim	/^let b:undo_ftplugin = "setl com< cms< define< include< sua<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	v
b:undo_ftplugin	.\vim73\ftplugin\jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\logcheck.vim	/^let b:undo_ftplugin = "setl fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\make.vim	/^let b:undo_ftplugin = "setl et< sts< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< "$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\msmessages.vim	/^let b:undo_ftplugin = "setl fo< com< cms< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\perl6.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\php.vim	/^let b:undo_ftplugin = "setlocal commentstring< include< omnifunc<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\plaintex.vim	/^let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\qf.vim	/^let b:undo_ftplugin = "set stl<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\racc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< kp<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sgml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sh.vim	/^let b:undo_ftplugin = "setlocal cms< | unlet! b:browsefilter b:match_words"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sql.vim	/^let b:undo_ftplugin = "setl comments<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\svg.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\tcsh.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\udevrules.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\vim.vim	/^let b:undo_ftplugin = "setl fo< isk< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xml.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	.\vim73\ftplugin\zsh.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitcommit.vim	/^      let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitcommit.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . "|setl tw<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitrebase.vim	/^    let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	.\vimfiles\ftplugin\vimwiki.vim	/^let b:undo_ftplugin = "setlocal ".$/;"	v
b:undo_indent	.\vim73\indent\bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\c.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\changelog.vim	/^let b:undo_indent = "setl ai<"$/;"	v
b:undo_indent	.\vim73\indent\cpp.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\cs.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\dtrace.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\ishd.vim	/^let b:undo_indent = "setl ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	.\vim73\indent\java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	.\vim73\indent\javascript.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\vim73\indent\lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	.\vim73\indent\lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	.\vim73\indent\rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	.\vim73\indent\vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:various	.\vim73\syntax\hitest.vim	/^let b:various = &highlight.',:Normal,:Cursor,:,'$/;"	v
b:vera_minlines	.\vim73\syntax\vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	.\vim73\syntax\vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	.\vim73\syntax\vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	.\vim73\ftplugin\vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\|package\\|procedure\\|process\\|record\\|units\\)'$/;"	v
b:xf86conf_xfree86_version	.\vim73\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	.\vim73\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xml_indent_close	.\vim73\indent\xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	.\vim73\indent\xml.vim	/^    let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
badgood	.\vimfiles\plugin\abolish.vim	/^function! s:badgood(args)$/;"	f
bindMappings	.\vimfiles\plugin\NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bisect	.\vimfiles\plugin\voom\voom.py	/^import bisect$/;"	i
bmenu_priority	.\vim73\menu.vim	/^  let bmenu_priority = 60$/;"	v
bookmark	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
bookmarkNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:bookmarkNode(name)$/;"	f
bsub	.\vim73\ftplugin\cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
bufInWindows	.\vimfiles\plugin\NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	.\vimfiles\plugin\bundler.vim	/^function! s:buffer(...) abort$/;"	f
buffer_alter_paths	.\vimfiles\plugin\bundler.vim	/^function! s:buffer_alter_paths() dict abort$/;"	f
buffer_app	.\vimfiles\autoload\rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_getline	.\vimfiles\autoload\rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	.\vimfiles\autoload\rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	.\vimfiles\plugin\bundler.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_lines	.\vimfiles\autoload\rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	.\vimfiles\autoload\rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	.\vimfiles\autoload\rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	.\vimfiles\autoload\rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_project	.\vimfiles\plugin\bundler.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_setvar	.\vimfiles\autoload\rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	.\vimfiles\plugin\bundler.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_shiftwidth	.\vim73\indent\sh.vim	/^function s:buffer_shiftwidth()$/;"	f
buffer_type_name	.\vimfiles\autoload\rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
build_menu	.\vimfiles\plugin\vimwiki.vim	/^function! s:build_menu(topmenu)$/;"	f
build_path_option	.\vimfiles\plugin\bundler.vim	/^function! s:build_path_option(paths,suffix) abort$/;"	f
build_table_menu	.\vimfiles\plugin\vimwiki.vim	/^function! s:build_table_menu(topmenu)$/;"	f
bundler	.\vimfiles\plugin\bundler.vim	/^augroup bundler$/;"	a
bundler#buffer	.\vimfiles\plugin\bundler.vim	/^function! bundler#buffer(...) abort$/;"	f
bundler_make	.\vimfiles\plugin\bundler.vim	/^augroup bundler_make$/;"	a
bundler_path	.\vimfiles\plugin\bundler.vim	/^augroup bundler_path$/;"	a
bundler_syntax	.\vimfiles\plugin\bundler.vim	/^augroup bundler_syntax$/;"	a
bundler_utility	.\vimfiles\plugin\bundler.vim	/^augroup bundler_utility$/;"	a
bzrFunctions.Add	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Add(argList)$/;"	f
bzrFunctions.Annotate	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Annotate(argList)$/;"	f
bzrFunctions.Commit	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Commit(argList)$/;"	f
bzrFunctions.Delete	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Delete(argList)$/;"	f
bzrFunctions.Diff	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Diff(argList)$/;"	f
bzrFunctions.GetBufferInfo	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.GetBufferInfo()$/;"	f
bzrFunctions.Identify	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Identify(buffer)$/;"	f
bzrFunctions.Info	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Info(argList)$/;"	f
bzrFunctions.Lock	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Lock(argList)$/;"	f
bzrFunctions.Log	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Log(argList)$/;"	f
bzrFunctions.Revert	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Revert(argList)$/;"	f
bzrFunctions.Review	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Review(argList)$/;"	f
bzrFunctions.Status	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Status(argList)$/;"	f
bzrFunctions.Unlock	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Unlock(argList)$/;"	f
bzrFunctions.Update	.\vimfiles\plugin\vcsbzr.vim	/^function! s:bzrFunctions.Update(argList)$/;"	f
c	.\vimfiles\plugin\abolish.vim	/^function! s:c()$/;"	f
c	.\vimfiles\voom_samples\test_outline.py	/^    c = 4$/;"	v
c_comment_strings	.\vim73\gvimrc_example.vim	/^  let c_comment_strings=1$/;"	v
cache_clear	.\vimfiles\autoload\rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	.\vimfiles\autoload\rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	.\vimfiles\autoload\rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	.\vimfiles\autoload\rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	.\vimfiles\autoload\rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
camelcase	.\vimfiles\plugin\abolish.vim	/^function! s:camelcase(word)$/;"	f
canonicalize_session_name	.\vimfiles\plugin\gsession.vim	/^fun! s:canonicalize_session_name(name)$/;"	f
capitalize	.\vim73\ftplugin\changelog.vim	/^  function! s:capitalize(word)$/;"	f
ccomplete#Complete	.\vim73\autoload\ccomplete.vim	/^function! ccomplete#Complete(findstart, base)$/;"	f
cells	.\vimfiles\autoload\vimwiki_html.vim	/^    let cells = split(a:line, '\\s*|\\s*', 1)[1: -2]$/;"	v
centerView	.\vimfiles\plugin\NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	.\vimfiles\plugin\NERD_tree.vim	/^function! s:chCwd()$/;"	f
chRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:chRoot()$/;"	f
changeCoverage	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
changeLevBodyHead	.\vimfiles\plugin\voom\voom.py	/^def changeLevBodyHead(VO, h, levDelta): #{{{2$/;"	f	access:public
changeLevTreeHead	.\vimfiles\plugin\voom\voom.py	/^def changeLevTreeHead(h, levDelta): #{{{2$/;"	f	access:public
change_content	.\vimfiles\autoload\zencoding.vim	/^function! s:change_content(region, content)$/;"	f
change_content	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:change_content(region, content)$/;"	f
changelogMenu	.\vim73\ftplugin\debchangelog.vim	/^augroup changelogMenu$/;"	a
chars	.\vim73\syntax\xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	.\vim73\syntax\xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	.\vim73\syntax\xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	.\vim73\syntax\xpm.vim	/^let chars  = ""$/;"	v
chars	.\vim73\syntax\xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	.\vim73\syntax\xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	.\vim73\syntax\xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	.\vim73\syntax\xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	.\vim73\syntax\xpm2.vim	/^  let chars  = ""$/;"	v
check	.\vim73\autoload\gzip.vim	/^fun s:check(cmd)$/;"	f
checkDataFileCompatibility	.\vimfiles\autoload\fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkForActivate	.\vimfiles\plugin\NERD_tree.vim	/^function! s:checkForActivate()$/;"	f
checkForBrowse	.\vimfiles\plugin\NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
checkKey	.\vimfiles\autoload\l9\async.vim	/^function s:checkKey(key)$/;"	f
check_shell	.\vim73\tools\shtags.pl	/^sub check_shell$/;"	s
checkbox	.\vimfiles\autoload\vimwiki_html.vim	/^    let checkbox = '\\s*\\[\\(.\\?\\)\\]\\s*'$/;"	v
chill_minlines	.\vim73\syntax\chill.vim	/^  let chill_minlines = 15$/;"	v
choose	.\vim73\ftplugin\gitrebase.vim	/^function! s:choose(word)$/;"	f
choose	.\vimfiles\ftplugin\gitrebase.vim	/^function! s:choose(word)$/;"	f
clearBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clear_outputs	.\vimfiles\autoload\l9\async.py	/^    def clear_outputs(self):$/;"	m	class:Worker	access:public
clearsearchbx	.\vimfiles\plugin\functionlist.vim	/^function! s:clearsearchbx()$/;"	f
closeChildren	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeChildren()$/;"	f
closeCurrentDir	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	f
closeTree	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	.\vimfiles\plugin\NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
close_tag_def_list	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_def_list(deflist, ldest) "{{{$/;"	f
close_tag_list	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_list(lists, ldest) "{{{$/;"	f
close_tag_para	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_para(para, ldest) "{{{$/;"	f
close_tag_pre	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_pre(pre, ldest) "{{{$/;"	f
close_tag_quote	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_quote(quote, ldest) "{{{$/;"	f
close_tag_table	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:close_tag_table(table, ldest) "{{{$/;"	f
cocoa_definitions	.\vimfiles\lib\extras\build_syntaxfile.py	/^import cocoa_definitions$/;"	i
coerce	.\vimfiles\plugin\abolish.vim	/^function! s:coerce(transformation)$/;"	f
col1	.\vim73\syntax\colortest.vim	/^  let col1 = substitute(expand("<cword>"), '\\(\\a\\+\\)_on_\\a\\+', '\\1', "")$/;"	v
col2	.\vim73\syntax\colortest.vim	/^  let col2 = substitute(expand("<cword>"), '\\a\\+_on_\\(\\a\\+\\)', '\\1', "")$/;"	v
col_count	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:col_count(lnum) "{{{$/;"	f
color	.\vim73\syntax\xpm.vim	/^		     let color = ""$/;"	v
color	.\vim73\syntax\xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm.vim	/^let color  = ""$/;"	v
color	.\vim73\syntax\xpm2.vim	/^		let color = ""$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\vim73\syntax\xpm2.vim	/^  let color  = ""$/;"	v
color	.\vimfiles\plugin\colorizer.vim	/^   let color = s:Xterm2rgb(c)$/;"	v
color	.\vimfiles\syntax\css.vim	/^   let color = s:Xterm2rgb(c)$/;"	v
colors	.\vim73\syntax\xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	.\vim73\syntax\xpm.vim	/^let colors = 0$/;"	v
colors	.\vim73\syntax\xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	.\vim73\syntax\xpm2.vim	/^  let colors = 0$/;"	v
colors_name	.\vim73\colors\darkblue.vim	/^let colors_name = "darkblue"$/;"	v
colors_name	.\vim73\colors\default.vim	/^let colors_name = "default"$/;"	v
colors_name	.\vim73\colors\delek.vim	/^let colors_name = "delek"$/;"	v
colors_name	.\vim73\colors\evening.vim	/^let colors_name = "evening"$/;"	v
colors_name	.\vim73\colors\morning.vim	/^let colors_name = "morning"$/;"	v
colors_name	.\vim73\colors\peachpuff.vim	/^let colors_name = "peachpuff"$/;"	v
colors_name	.\vim73\colors\shine.vim	/^let colors_name = "shine"$/;"	v
colors_name	.\vim73\colors\slate.vim	/^let colors_name = "slate"$/;"	v
colors_name	.\vimfiles\colors\autumn.vim	/^let colors_name = "autumn"$/;"	v
colors_name	.\vimfiles\colors\campfire.vim	/^let colors_name = "campfire"$/;"	v
colors_name	.\vimfiles\colors\dusk.vim	/^let colors_name = "dusk"$/;"	v
colors_name	.\vimfiles\colors\emacs.vim	/^let colors_name = "emacs"$/;"	v
colors_name	.\vimfiles\colors\industrial.vim	/^let colors_name = "industrial"$/;"	v
colors_name	.\vimfiles\colors\lucius.vim	/^let colors_name="lucius"$/;"	v
colors_name	.\vimfiles\colors\moria.vim	/^let colors_name = "moria"$/;"	v
colors_name	.\vimfiles\colors\pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	.\vimfiles\colors\solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	.\vimfiles\colors\winter.vim	/^let colors_name = "winter"$/;"	v
commProperty	.\vim73\tools\xcmdsrv_client.c	/^static Atom	commProperty = None;$/;"	v	file:
commWindow	.\vim73\tools\xcmdsrv_client.c	/^static Window	commWindow = None;$/;"	v	file:
command	.\vimfiles\plugin\bundler.vim	/^function! s:command(definition) abort$/;"	f
commands	.\vimfiles\lib\extras\cocoa_definitions.py	/^import os, commands, re$/;"	i
commands.abbrev.process	.\vimfiles\plugin\abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
commands.abstract.dispatch	.\vimfiles\plugin\abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
commands.abstract.go	.\vimfiles\plugin\abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
commands.search.process	.\vimfiles\plugin\abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
commands.substitute.process	.\vimfiles\plugin\abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
comment_tag_sub	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^comment_tag_sub = re.compile('<!--.*?-->\\s*$').sub$/;"	v
compact	.\vimfiles\autoload\rails.vim	/^function! s:compact(ary)$/;"	f
compareBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	.\vimfiles\plugin\NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compareTimeDescending	.\vimfiles\autoload\fuf\buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
completeBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
completion_filter	.\vimfiles\autoload\rails.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	.\vimfiles\plugin\bundler.vim	/^function! s:completion_filter(results,A)$/;"	f
computeSnLn	.\vimfiles\plugin\voom\voom.py	/^def computeSnLn(body, blnr): #{{{2$/;"	f	access:public
controller	.\vimfiles\autoload\rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	.\vimfiles\autoload\rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	.\vimfiles\autoload\rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copyNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:copyNode()$/;"	f
copy_outputs	.\vimfiles\autoload\l9\async.py	/^    def copy_outputs(self):$/;"	m	class:Worker	access:public
count	.\vim73\indent\bst.vim	/^function! s:count(string,char)$/;"	f
count	.\vim73\indent\liquid.vim	/^function! s:count(string,pattern)$/;"	f
count_braces	.\vim73\indent\css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\vim73\indent\ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\vim73\indent\tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\vim73\indent\xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_separators_down	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:count_separators_down(lnum) "{{{$/;"	f
count_separators_up	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:count_separators_up(lnum) "{{{$/;"	f
cpo_save	.\vim73\ftplugin\hamster.vim	/^let cpo_save = &cpo$/;"	v
cpoptions	.\vimfiles\plugin\fontsize.vim	/^let cpoptions = s:save_cpoptions$/;"	v
cpp	.\vim73\syntax\xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	.\vim73\syntax\xpm.vim	/^let cpp    = 0$/;"	v
cpp	.\vim73\syntax\xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	.\vim73\syntax\xpm2.vim	/^  let cpp    = 0$/;"	v
cr	.\vimfiles\plugin\abolish.vim	/^nmap cr  <Plug>Coerce$/;"	m
cr	.\vimfiles\plugin\supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
createChangeCoverageListener	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	.\vimfiles\autoload\fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createEditDataListener	.\vimfiles\autoload\fuf.vim	/^function s:createEditDataListener()$/;"	f
createTreeWin	.\vimfiles\plugin\NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
create_cb_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:create_cb_list_item(lnum) "{{{$/;"	f
create_default_CSS	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:create_default_CSS(path) " {{{$/;"	f
create_dictionary	.\vimfiles\plugin\abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
create_empty_row	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:create_empty_row(cols) "{{{$/;"	f
create_row_sep	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:create_row_sep(cols) "{{{$/;"	f
csc_minlines	.\vim73\syntax\csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
csscomplete#CompleteCSS	.\vim73\autoload\csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f
csscomplete#CompleteCSS	.\vimfiles\autoload\csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f
cterm	.\vimfiles\colors\bandit.vim	/^		let cterm = s:colours['CTERM']$/;"	v
cterm	.\vimfiles\colors\bandit.vim	/^		let cterm=gui$/;"	v
ctermbg	.\vimfiles\colors\bandit.vim	/^			let ctermbg='NONE'$/;"	v
ctermbg	.\vimfiles\colors\bandit.vim	/^			let ctermbg=guibg$/;"	v
ctermbg	.\vimfiles\colors\bandit.vim	/^		let ctermbg = s:colours['CTERMBG']$/;"	v
ctermfg	.\vimfiles\colors\bandit.vim	/^			let ctermfg='Blue'$/;"	v
ctermfg	.\vimfiles\colors\bandit.vim	/^			let ctermfg=guifg$/;"	v
ctermfg	.\vimfiles\colors\bandit.vim	/^		let ctermfg = s:colours['CTERMFG']$/;"	v
ctrl_n	.\vimfiles\plugin\supertab.vim	/^    let ctrl_n = substitute(ctrl_n, '<', '<lt>', 'g')$/;"	v
ctrl_n	.\vimfiles\plugin\supertab.vim	/^  let ctrl_n = maparg('<c-n>', 'i')$/;"	v
ctrl_p	.\vimfiles\plugin\supertab.vim	/^    let ctrl_p = substitute(ctrl_p, '<', '<lt>', 'g')$/;"	v
ctrl_p	.\vimfiles\plugin\supertab.vim	/^  let ctrl_p = maparg('<c-p>', 'i')$/;"	v
cur_column	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:cur_column() "{{{$/;"	f
current_compiler	.\vim73\compiler\ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	.\vim73\compiler\bcc.vim	/^let current_compiler = "bcc"$/;"	v
current_compiler	.\vim73\compiler\bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	.\vim73\compiler\checkstyle.vim	/^let current_compiler = "checkstyle"$/;"	v
current_compiler	.\vim73\compiler\cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	.\vim73\compiler\cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	.\vim73\compiler\decada.vim	/^let current_compiler = "decada"$/;"	v
current_compiler	.\vim73\compiler\dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	.\vim73\compiler\eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	.\vim73\compiler\fortran_F.vim	/^let current_compiler = "fortran_F"$/;"	v
current_compiler	.\vim73\compiler\fortran_cv.vim	/^let current_compiler = "fortran_cv"$/;"	v
current_compiler	.\vim73\compiler\fortran_elf90.vim	/^let current_compiler = "fortran_elf90"$/;"	v
current_compiler	.\vim73\compiler\fortran_g77.vim	/^let current_compiler = "fortran_g77"$/;"	v
current_compiler	.\vim73\compiler\fortran_lf95.vim	/^let current_compiler = "fortran_lf95"$/;"	v
current_compiler	.\vim73\compiler\fpc.vim	/^let current_compiler = "fpc"$/;"	v
current_compiler	.\vim73\compiler\g95.vim	/^let current_compiler = 'g95'$/;"	v
current_compiler	.\vim73\compiler\gcc.vim	/^let current_compiler = "gcc"$/;"	v
current_compiler	.\vim73\compiler\gfortran.vim	/^let current_compiler = 'gfortran'$/;"	v
current_compiler	.\vim73\compiler\gnat.vim	/^let current_compiler = "gnat"$/;"	v
current_compiler	.\vim73\compiler\hp_acc.vim	/^let current_compiler = "hp_acc"$/;"	v
current_compiler	.\vim73\compiler\icc.vim	/^let current_compiler = "icc"$/;"	v
current_compiler	.\vim73\compiler\ifort.vim	/^let current_compiler = 'ifort'$/;"	v
current_compiler	.\vim73\compiler\intel.vim	/^let current_compiler = "intel"$/;"	v
current_compiler	.\vim73\compiler\irix5_c.vim	/^let current_compiler = "irix5_c"$/;"	v
current_compiler	.\vim73\compiler\irix5_cpp.vim	/^let current_compiler = "irix5_cpp"$/;"	v
current_compiler	.\vim73\compiler\javac.vim	/^let current_compiler = "javac"$/;"	v
current_compiler	.\vim73\compiler\jikes.vim	/^let current_compiler = "jikes"$/;"	v
current_compiler	.\vim73\compiler\mcs.vim	/^let current_compiler = "mcs"$/;"	v
current_compiler	.\vim73\compiler\mips_c.vim	/^let current_compiler = "mips_c"$/;"	v
current_compiler	.\vim73\compiler\mipspro_c89.vim	/^let current_compiler = "mipspro_c89"$/;"	v
current_compiler	.\vim73\compiler\mipspro_cpp.vim	/^let current_compiler = "mipspro_cpp"$/;"	v
current_compiler	.\vim73\compiler\modelsim_vcom.vim	/^let current_compiler = "modelsim_vcom"$/;"	v
current_compiler	.\vim73\compiler\msvc.vim	/^let current_compiler = "msvc"$/;"	v
current_compiler	.\vim73\compiler\neato.vim	/^let current_compiler = "neato"$/;"	v
current_compiler	.\vim73\compiler\onsgmls.vim	/^let current_compiler = "onsgmls"$/;"	v
current_compiler	.\vim73\compiler\pbx.vim	/^let current_compiler = "pbx"$/;"	v
current_compiler	.\vim73\compiler\perl.vim	/^let current_compiler = "perl"$/;"	v
current_compiler	.\vim73\compiler\php.vim	/^let current_compiler = "php"$/;"	v
current_compiler	.\vim73\compiler\pyunit.vim	/^let current_compiler = "pyunit"$/;"	v
current_compiler	.\vim73\compiler\rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	.\vim73\compiler\rst.vim	/^let current_compiler = "rst"$/;"	v
current_compiler	.\vim73\compiler\ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	.\vim73\compiler\rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	.\vim73\compiler\se.vim	/^let current_compiler = "se"$/;"	v
current_compiler	.\vim73\compiler\splint.vim	/^let current_compiler = "splint"$/;"	v
current_compiler	.\vim73\compiler\tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	.\vim73\compiler\tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	.\vim73\compiler\tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	.\vim73\compiler\tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	.\vim73\compiler\tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	.\vim73\compiler\tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	.\vim73\compiler\xmllint.vim	/^let current_compiler = "xmllint"$/;"	v
current_compiler	.\vim73\compiler\xmlwf.vim	/^let current_compiler = "xmlwf"$/;"	v
current_compiler	.\vimfiles\compiler\eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	.\vimfiles\compiler\rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	.\vimfiles\compiler\ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	.\vimfiles\compiler\rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
cursor	.\vimfiles\autoload\vimwiki.vim	/^function! s:cursor(lnum, cnum) "{{{$/;"	f
cursor_in_region	.\vimfiles\autoload\zencoding.vim	/^function! s:cursor_in_region(region)$/;"	f
cursor_in_region	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:cursor_in_region(region)$/;"	f
cvsFunctions.Add	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Add(argList)$/;"	f
cvsFunctions.Annotate	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Annotate(argList)$/;"	f
cvsFunctions.Commit	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Commit(argList)$/;"	f
cvsFunctions.Delete	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Delete(argList)$/;"	f
cvsFunctions.Diff	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Diff(argList)$/;"	f
cvsFunctions.GetBufferInfo	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.GetBufferInfo()$/;"	f
cvsFunctions.Identify	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Identify(buffer)$/;"	f
cvsFunctions.Log	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Log(argList)$/;"	f
cvsFunctions.Revert	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Revert(argList)$/;"	f
cvsFunctions.Review	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Review(argList)$/;"	f
cvsFunctions.Status	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Status(argList)$/;"	f
cvsFunctions.Update	.\vimfiles\plugin\vcscvs.vim	/^function! s:cvsFunctions.Update(argList)$/;"	f
cycle	.\vim73\ftplugin\gitrebase.vim	/^function! s:cycle()$/;"	f
cycle	.\vimfiles\ftplugin\gitrebase.vim	/^function! s:cycle()$/;"	f
d	.\vim73\macros\less.vim	/^noremap <script> d <C-D><SID>L$/;"	m
d	.\vimfiles\plugin\voom\voom_mode_rest.py	/^d = {}.fromkeys(AD_STYLES)$/;"	v
dashcase	.\vimfiles\plugin\abolish.vim	/^function! s:dashcase(word)$/;"	f
datetime	.\vimfiles\lib\extras\build_syntaxfile.py	/^import sys, datetime$/;"	i
dbext	.\vimfiles\plugin\dbext.vim	/^augroup dbext$/;"	a
dbext#DB_DictionaryCreate	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_DictionaryCreate( drop_dict, which ) "{{{$/;"	f
dbext#DB_auBufDelete	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_auBufDelete(del_buf_nr) "{{{$/;"	f
dbext#DB_auVimLeavePre	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_auVimLeavePre() "{{{$/;"	f
dbext#DB_auVimLeavePreOld	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_auVimLeavePreOld() "{{{$/;"	f
dbext#DB_checkModeline	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_checkModeline()$/;"	f
dbext#DB_commit	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_commit()$/;"	f
dbext#DB_completeSettings	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_completeSettings(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeTables	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_completeTables(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeVariable	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_completeVariable(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_connect	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_connect()$/;"	f
dbext#DB_describeProcedure	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_describeProcedure(...)$/;"	f
dbext#DB_describeProcedurePrompt	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_describeProcedurePrompt()$/;"	f
dbext#DB_describeTable	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_describeTable(...)$/;"	f
dbext#DB_describeTablePrompt	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_describeTablePrompt()$/;"	f
dbext#DB_disconnect	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_disconnect(...)$/;"	f
dbext#DB_disconnectAll	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_disconnectAll()$/;"	f
dbext#DB_execFuncTypeWCheck	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execFuncTypeWCheck(name,...)$/;"	f
dbext#DB_execFuncWCheck	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execFuncWCheck(name,...)$/;"	f
dbext#DB_execRangeSql	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execRangeSql() range$/;"	f
dbext#DB_execSql	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execSql(query)$/;"	f
dbext#DB_execSqlTopX	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execSqlTopX(...)$/;"	f
dbext#DB_execSqlWithDefault	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_execSqlWithDefault(...)$/;"	f
dbext#DB_getDictionaryName	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getDictionaryName( which ) "{{{$/;"	f
dbext#DB_getListColumn	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getListColumn(table_name, silent_mode, use_newline_sep ) $/;"	f
dbext#DB_getListConnections	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getListConnections()$/;"	f
dbext#DB_getListProcedure	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getListProcedure(...)$/;"	f
dbext#DB_getListTable	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getListTable(...)$/;"	f
dbext#DB_getListView	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getListView(...)$/;"	f
dbext#DB_getQueryUnderCursor	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getQueryUnderCursor()$/;"	f
dbext#DB_getSqlWithDefault	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getSqlWithDefault(...)$/;"	f
dbext#DB_getWType	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_getWType(name)$/;"	f
dbext#DB_historyList	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_historyList()$/;"	f
dbext#DB_listOption	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_listOption(...)$/;"	f
dbext#DB_orientationToggle	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_orientationToggle(...)$/;"	f
dbext#DB_parseQuery	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_parseQuery(query)$/;"	f
dbext#DB_removeVariable	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_removeVariable() range$/;"	f
dbext#DB_rollback	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_rollback()$/;"	f
dbext#DB_runPrevCmd	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_runPrevCmd(...)$/;"	f
dbext#DB_selectTablePrompt	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_selectTablePrompt()$/;"	f
dbext#DB_setMultipleOptions	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_setMultipleOptions(multi_options, ...)$/;"	f
dbext#DB_setTitle	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_setTitle() $/;"	f
dbext#DB_sqlVarAssignment	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_sqlVarAssignment(drop_var, stmt)$/;"	f
dbext#DB_sqlVarList	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_sqlVarList(...)$/;"	f
dbext#DB_sqlVarRangeAssignment	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_sqlVarRangeAssignment(remove_var) range$/;"	f
dbext#DB_switchPrevBuf	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_switchPrevBuf()$/;"	f
dbext#DB_windowClose	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_windowClose(buf_name)$/;"	f
dbext#DB_windowOpen	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_windowOpen()$/;"	f
dbext#DB_windowResize	.\vimfiles\autoload\dbext.vim	/^function! dbext#DB_windowResize()$/;"	f
dbext_dbi#DBI_load_perl_subs	.\vimfiles\autoload\dbext_dbi.vim	/^function! dbext_dbi#DBI_load_perl_subs()$/;"	f
deactivateFufBuffer	.\vimfiles\autoload\fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
debug	.\vimfiles\autoload\rails.vim	/^function! s:debug(str)$/;"	f
decada#Make	.\vim73\autoload\decada.vim	/^function decada#Make () dict					     " {{{1$/;"	f
decada#New	.\vim73\autoload\decada.vim	/^function decada#New ()						     " }}}1$/;"	f
decada#Set_Session	.\vim73\autoload\decada.vim	/^function decada#Set_Session (...) dict				     " {{{1$/;"	f
decada#Unit_Name	.\vim73\autoload\decada.vim	/^function decada#Unit_Name () dict				     " {{{1$/;"	f
decrease	.\vim73\ftplugin\cobol.vim	/^function! s:decrease(...)$/;"	f
deduce_ad_style	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def deduce_ad_style(L1,L2,L3):$/;"	f	access:public
deduce_ad_style_test	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def deduce_ad_style_test(VO):$/;"	f	access:public
def_comment	.\vim73\syntax\cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
def_keyword	.\vim73\syntax\cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
def_keywords	.\vim73\syntax\cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
def_match	.\vim73\syntax\cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
def_region	.\vim73\syntax\cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
default	.\vimfiles\plugin\vimwiki.vim	/^function! s:default(varname, value) "{{{$/;"	f
default_headers	.\vimfiles\lib\extras\cocoa_definitions.py	/^def default_headers():$/;"	f	access:public
default_headers	.\vimfiles\lib\extras\cocoa_methods.py	/^from cocoa_definitions import default_headers, format_function_line$/;"	i
defineOption	.\vimfiles\plugin\acp.vim	/^function s:defineOption(name, default)$/;"	f
define_commands	.\vimfiles\plugin\bundler.vim	/^function! s:define_commands()$/;"	f
defopt	.\vimfiles\plugin\gsession.vim	/^fun! s:defopt(n,v)$/;"	f
deleteBookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:deleteBookmark()$/;"	f
deleteNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:deleteNode()$/;"	f
delete_content	.\vimfiles\autoload\zencoding.vim	/^function! s:delete_content(region)$/;"	f
delete_content	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:delete_content(region)$/;"	f
delete_html_files	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:delete_html_files(path) "{{{$/;"	f
deleted	.\vim73\spell\fixdup.vim	/^      let deleted += 1$/;"	v
deleted	.\vim73\spell\fixdup.vim	/^let deleted = 0$/;"	v
desc	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:desc(d1, d2) "{{{$/;"	f
diary_date_link	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:diary_date_link() "{{{$/;"	f
diary_index	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:diary_index() "{{{$/;"	f
diary_path	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:diary_path() "{{{$/;"	f
did_OPL_syntax_inits	.\vim73\syntax\opl.vim	/^    let did_OPL_syntax_inits = 1$/;"	v
did_VRML_syntax_inits	.\vim73\syntax\vrml.vim	/^    let did_VRML_syntax_inits = 1$/;"	v
did_a65_syntax_inits	.\vim73\syntax\a65.vim	/^    let did_a65_syntax_inits = 1$/;"	v
did_abap_syntax_inits	.\vim73\syntax\abap.vim	/^    let did_abap_syntax_inits = 1$/;"	v
did_abaqus_syn_inits	.\vim73\syntax\abaqus.vim	/^		let did_abaqus_syn_inits = 1$/;"	v
did_abc_syn_inits	.\vim73\syntax\abc.vim	/^    let did_abc_syn_inits = 1$/;"	v
did_abel_syn_inits	.\vim73\syntax\abel.vim	/^    let did_abel_syn_inits = 1$/;"	v
did_acedb_syn_inits	.\vim73\syntax\acedb.vim	/^    let did_acedb_syn_inits = 1$/;"	v
did_aflex_syntax_inits	.\vim73\syntax\aflex.vim	/^      let did_aflex_syntax_inits = 1$/;"	v
did_ahdl_syn_inits	.\vim73\syntax\ahdl.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_ahdl_syn_inits	.\vim73\syntax\ppd.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_amiga_syn_inits	.\vim73\syntax\amiga.vim	/^    let did_amiga_syn_inits = 1$/;"	v
did_aml_syntax_inits	.\vim73\syntax\aml.vim	/^    let did_aml_syntax_inits = 1$/;"	v
did_ampl_syntax_inits	.\vim73\syntax\ampl.vim	/^    let did_ampl_syntax_inits = 1$/;"	v
did_antlr_syntax_inits	.\vim73\syntax\antlr.vim	/^      let did_antlr_syntax_inits = 1$/;"	v
did_apache_syntax_inits	.\vim73\syntax\apache.vim	/^		let did_apache_syntax_inits = 1$/;"	v
did_apachestyle_syn_inits	.\vim73\syntax\apachestyle.vim	/^    let did_apachestyle_syn_inits = 1$/;"	v
did_asm68k_syntax_inits	.\vim73\syntax\asm68k.vim	/^    let did_asm68k_syntax_inits = 1$/;"	v
did_asm_syntax_inits	.\vim73\syntax\asm.vim	/^    let did_asm_syntax_inits = 1$/;"	v
did_asn_syn_inits	.\vim73\syntax\asn.vim	/^    let did_asn_syn_inits = 1$/;"	v
did_aspvbs_syn_inits	.\vim73\syntax\aspvbs.vim	/^    let did_aspvbs_syn_inits = 1$/;"	v
did_atlas_syntax_inits	.\vim73\syntax\atlas.vim	/^    let did_atlas_syntax_inits = 1$/;"	v
did_automake_syntax_inits	.\vim73\syntax\automake.vim	/^    let did_automake_syntax_inits = 1$/;"	v
did_ave_syn_inits	.\vim73\syntax\ave.vim	/^	let did_ave_syn_inits = 1$/;"	v
did_awk_syn_inits	.\vim73\syntax\awk.vim	/^    let did_awk_syn_inits = 1$/;"	v
did_ayacc_syntax_inits	.\vim73\syntax\ayacc.vim	/^      let did_ayacc_syntax_inits = 1$/;"	v
did_b_syntax_inits	.\vim73\syntax\b.vim	/^      let did_b_syntax_inits = 1$/;"	v
did_baan_syn_inits	.\vim73\syntax\baan.vim	/^    let did_baan_syn_inits = 1$/;"	v
did_basic_syntax_inits	.\vim73\syntax\basic.vim	/^    let did_basic_syntax_inits = 1$/;"	v
did_bc_syntax_inits	.\vim73\syntax\bc.vim	/^    let did_bc_syntax_inits = 1$/;"	v
did_bib_syn_inits	.\vim73\syntax\bib.vim	/^    let did_bib_syn_inits = 1$/;"	v
did_bind_zone_syn_inits	.\vim73\syntax\bindzone.vim	/^    let did_bind_zone_syn_inits = 1$/;"	v
did_blank_syntax_inits	.\vim73\syntax\blank.vim	/^    let did_blank_syntax_inits = 1$/;"	v
did_bst_syn_inits	.\vim73\syntax\bst.vim	/^        let did_bst_syn_inits = 1$/;"	v
did_btm_syntax_inits	.\vim73\syntax\btm.vim	/^    let did_btm_syntax_inits = 1$/;"	v
did_bzr_syn_inits	.\vim73\syntax\bzr.vim	/^    let did_bzr_syn_inits = 1$/;"	v
did_c_syn_inits	.\vim73\syntax\pf.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cabal_syn_inits	.\vim73\syntax\cabal.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cabal_syn_inits	.\vim73\syntax\obj.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cfg_syn_inits	.\vim73\syntax\cfg.vim	/^	let did_cfg_syn_inits = 1$/;"	v
did_ch_syntax_inits	.\vim73\syntax\ch.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_ch_syntax_inits	.\vim73\syntax\chill.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_change_syntax_inits	.\vim73\syntax\change.vim	/^    let did_change_syntax_inits = 1$/;"	v
did_changelog_syntax_inits	.\vim73\syntax\changelog.vim	/^    let did_changelog_syntax_inits = 1$/;"	v
did_cheetah_syn_inits	.\vim73\syntax\cheetah.vim	/^		let did_cheetah_syn_inits = 1$/;"	v
did_cl_syntax_inits	.\vim73\syntax\cl.vim	/^		let did_cl_syntax_inits = 1$/;"	v
did_clean_syntax_init	.\vim73\syntax\clean.vim	/^    let did_clean_syntax_init = 1$/;"	v
did_clipper_syntax_inits	.\vim73\syntax\clipper.vim	/^    let did_clipper_syntax_inits = 1$/;"	v
did_cmake_syntax_inits	.\vim73\syntax\cmake.vim	/^    let did_cmake_syntax_inits = 1$/;"	v
did_cobol_syntax_inits	.\vim73\syntax\cobol.vim	/^    let did_cobol_syntax_inits = 1$/;"	v
did_conf_syntax_inits	.\vim73\syntax\asterisk.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_conf_syntax_inits	.\vim73\syntax\asteriskvm.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\vim73\syntax\config.vim	/^    let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\vim73\syntax\fstab.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\vim73\syntax\resolv.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\vim73\syntax\sd.vim	/^                let did_config_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	.\vim73\syntax\cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_crontab_syn_inits	.\vim73\syntax\crontab.vim	/^    let did_crontab_syn_inits = 1$/;"	v
did_csc_syntax_inits	.\vim73\syntax\cdl.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csc_syntax_inits	.\vim73\syntax\csc.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csh_syntax_inits	.\vim73\syntax\csh.vim	/^    let did_csh_syntax_inits = 1$/;"	v
did_csp_syn_inits	.\vim73\syntax\csp.vim	/^    let did_csp_syn_inits = 1$/;"	v
did_css_syn_inits	.\vim73\syntax\css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	.\vim73\syntax\javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	.\vimfiles\syntax\css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_cterm_syntax_inits	.\vim73\syntax\cterm.vim	/^    let did_cterm_syntax_inits = 1$/;"	v
did_cupl_syn_inits	.\vim73\syntax\cupl.vim	/^    let did_cupl_syn_inits = 1$/;"	v
did_cuplsim_syn_inits	.\vim73\syntax\cuplsim.vim	/^    let did_cuplsim_syn_inits = 1$/;"	v
did_cvs_syn_inits	.\vim73\syntax\cvs.vim	/^		let did_cvs_syn_inits = 1$/;"	v
did_cvsannotate_syntax_inits	.\vimfiles\syntax\CVSAnnotate.vim	/^	let did_cvsannotate_syntax_inits = 1$/;"	v
did_cweb_syntax_inits	.\vim73\syntax\cweb.vim	/^    let did_cweb_syntax_inits = 1$/;"	v
did_cynlib_syntax_inits	.\vim73\syntax\cynlib.vim	/^    let did_cynlib_syntax_inits = 1$/;"	v
did_cynpp_syntax_inits	.\vim73\syntax\cynpp.vim	/^    let did_cynpp_syntax_inits = 1$/;"	v
did_dcd_syntax_inits	.\vim73\syntax\dcd.vim	/^    let did_dcd_syntax_inits = 1$/;"	v
did_dcl_syntax_inits	.\vim73\syntax\dcl.vim	/^    let did_dcl_syntax_inits = 1$/;"	v
did_debchangelog_syn_inits	.\vim73\syntax\debchangelog.vim	/^    let did_debchangelog_syn_inits = 1$/;"	v
did_debcontrol_syn_inits	.\vim73\syntax\debcontrol.vim	/^    let did_debcontrol_syn_inits = 1$/;"	v
did_def_syntax_inits	.\vim73\syntax\def.vim	/^    let did_def_syntax_inits = 1$/;"	v
did_desc_syntax_inits	.\vim73\syntax\desc.vim	/^    let did_desc_syntax_inits = 1$/;"	v
did_diva_syntax_inits	.\vim73\syntax\diva.vim	/^		let did_diva_syntax_inits = 1$/;"	v
did_django_syn_inits	.\vim73\syntax\django.vim	/^    let did_django_syn_inits = 1$/;"	v
did_docbk_syn_inits	.\vim73\syntax\docbk.vim	/^    let did_docbk_syn_inits = 1$/;"	v
did_dosbatch_syntax_inits	.\vim73\syntax\dosbatch.vim	/^    let did_dosbatch_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	.\vim73\syntax\desktop.vim	/^		let did_dosini_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	.\vim73\syntax\dosini.vim	/^    let did_dosini_syntax_inits = 1$/;"	v
did_dot_syntax_inits	.\vim73\syntax\dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_dracula_syn_inits	.\vim73\syntax\dracula.vim	/^    let did_dracula_syn_inits = 1$/;"	v
did_drchip_netrwlist_syntax	.\vim73\syntax\netrw.vim	/^ let did_drchip_netrwlist_syntax= 1$/;"	v
did_drchip_tags_inits	.\vim73\syntax\tags.vim	/^    let did_drchip_tags_inits = 1$/;"	v
did_dtd_syn_inits	.\vim73\syntax\dtd.vim	/^	let did_dtd_syn_inits = 1$/;"	v
did_dtml_syntax_inits	.\vim73\syntax\dtml.vim	/^    let did_dtml_syntax_inits = 1$/;"	v
did_dummy_syn_inits	.\vim73\syntax\ist.vim	/^    let did_dummy_syn_inits = 1$/;"	v
did_dylan_intr_syntax_inits	.\vim73\syntax\dylanintr.vim	/^    let did_dylan_intr_syntax_inits = 1$/;"	v
did_dylan_lid_syntax_inits	.\vim73\syntax\dylanlid.vim	/^    let did_dylan_lid_syntax_inits = 1$/;"	v
did_dylan_syntax_inits	.\vim73\syntax\dylan.vim	/^    let did_dylan_syntax_inits = 1$/;"	v
did_ecd_syn_inits	.\vim73\syntax\ecd.vim	/^    let did_ecd_syn_inits = 1$/;"	v
did_edif_syntax_inits	.\vim73\syntax\edif.vim	/^    let did_edif_syntax_inits = 1$/;"	v
did_eiffel_syntax_inits	.\vim73\syntax\eiffel.vim	/^    let did_eiffel_syntax_inits = 1$/;"	v
did_elf_syn_inits	.\vim73\syntax\elf.vim	/^		let did_elf_syn_inits = 1$/;"	v
did_elmfilt_syntax_inits	.\vim73\syntax\elmfilt.vim	/^    let did_elmfilt_syntax_inits = 1$/;"	v
did_erlang_inits	.\vim73\syntax\erlang.vim	/^        let did_erlang_inits = 1$/;"	v
did_esqlc_syntax_inits	.\vim73\syntax\esqlc.vim	/^    let did_esqlc_syntax_inits = 1$/;"	v
did_esterel_syntax_inits	.\vim73\syntax\esterel.vim	/^    let did_esterel_syntax_inits = 1$/;"	v
did_exim_syntax_inits	.\vim73\syntax\exim.vim	/^		let did_exim_syntax_inits = 1$/;"	v
did_expect_syntax_inits	.\vim73\syntax\expect.vim	/^    let did_expect_syntax_inits = 1$/;"	v
did_exports_syntax_inits	.\vim73\syntax\exports.vim	/^    let did_exports_syntax_inits = 1$/;"	v
did_fdcc_syn_inits	.\vim73\syntax\fdcc.vim	/^    let did_fdcc_syn_inits = 1$/;"	v
did_fgl_syntax_inits	.\vim73\syntax\fgl.vim	/^    let did_fgl_syntax_inits = 1$/;"	v
did_focexec_syntax_inits	.\vim73\syntax\focexec.vim	/^    let did_focexec_syntax_inits = 1$/;"	v
did_form_syn_inits	.\vim73\syntax\form.vim	/^    let did_form_syn_inits = 1$/;"	v
did_forth_syn_inits	.\vim73\syntax\forth.vim	/^	let did_forth_syn_inits = 1$/;"	v
did_fortran_syn_inits	.\vim73\syntax\fortran.vim	/^    let did_fortran_syn_inits = 1$/;"	v
did_foxpro_syn_inits	.\vim73\syntax\foxpro.vim	/^	let did_foxpro_syn_inits = 1$/;"	v
did_gdb_syn_inits	.\vim73\syntax\gdb.vim	/^    let did_gdb_syn_inits = 1$/;"	v
did_gdmo_syntax_inits	.\vim73\syntax\gdmo.vim	/^    let did_gdmo_syntax_inits = 1$/;"	v
did_gedcom_syntax_inits	.\vim73\syntax\gedcom.vim	/^    let did_gedcom_syntax_inits = 1$/;"	v
did_gitannotate_syntax_inits	.\vimfiles\syntax\gitAnnotate.vim	/^	let did_gitannotate_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	.\vim73\syntax\gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_gp_syn_inits	.\vim73\syntax\gp.vim	/^    let did_gp_syn_inits = 1$/;"	v
did_groovy_syn_inits	.\vim73\syntax\groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_gs_syn_inits	.\vim73\syntax\grads.vim	/^	let did_gs_syn_inits = 1$/;"	v
did_gtkrc_syntax_inits	.\vim73\syntax\gkrellmrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_gtkrc_syntax_inits	.\vim73\syntax\gtkrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_hamster_syn_inits	.\vim73\syntax\hamster.vim	/^        let did_hamster_syn_inits = 1$/;"	v
did_hb_syntax_inits	.\vim73\syntax\hb.vim	/^    let did_hb_syntax_inits = 1$/;"	v
did_hercules_syntax_inits	.\vim73\syntax\hercules.vim	/^    let did_hercules_syntax_inits = 1$/;"	v
did_hex_syntax_inits	.\vim73\syntax\hex.vim	/^    let did_hex_syntax_inits = 1$/;"	v
did_hgannotate_syntax_inits	.\vimfiles\syntax\hgannotate.vim	/^	let did_hgannotate_syntax_inits = 1$/;"	v
did_hitachi_syntax_inits	.\vim73\syntax\asmh8300.vim	/^    let did_hitachi_syntax_inits = 1$/;"	v
did_hog_syn_inits	.\vim73\syntax\hog.vim	/^    let did_hog_syn_inits = 1$/;"	v
did_hs_syntax_inits	.\vim73\syntax\haskell.vim	/^    let did_hs_syntax_inits = 1$/;"	v
did_html_syn_inits	.\vim73\syntax\html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_htmlos_syn_inits	.\vim73\syntax\htmlos.vim	/^    let did_htmlos_syn_inits = 1$/;"	v
did_ia64_syn_inits	.\vim73\syntax\ia64.vim	/^		let did_ia64_syn_inits = 1$/;"	v
did_icon_syn_inits	.\vim73\syntax\icon.vim	/^    let did_icon_syn_inits = 1$/;"	v
did_idl_syntax_inits	.\vim73\syntax\idl.vim	/^  let did_idl_syntax_inits = 1$/;"	v
did_idlang_syn_inits	.\vim73\syntax\idlang.vim	/^    let did_idlang_syn_inits = 1$/;"	v
did_indent_on	.\vim73\indent.vim	/^let did_indent_on = 1$/;"	v
did_inform_syn_inits	.\vim73\syntax\inform.vim	/^    let did_inform_syn_inits = 1$/;"	v
did_inittab_syntax_inits	.\vim73\syntax\inittab.vim	/^    let did_inittab_syntax_inits = 1$/;"	v
did_install_default_menus	.\vim73\menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	.\vim73\menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_is_syntax_inits	.\vim73\syntax\ishd.vim	/^    let did_is_syntax_inits = 1$/;"	v
did_iss_syntax_inits	.\vim73\syntax\iss.vim	/^    let did_iss_syntax_inits = 1$/;"	v
did_jal_syn_inits	.\vim73\syntax\jal.vim	/^  let did_jal_syn_inits = 1$/;"	v
did_jam_syn_inits	.\vim73\syntax\jam.vim	/^    let did_jam_syn_inits = 1$/;"	v
did_jargon_syntax_inits	.\vim73\syntax\jargon.vim	/^		let did_jargon_syntax_inits = 1$/;"	v
did_java_syn_inits	.\vim73\syntax\java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_javascript_syn_inits	.\vim73\syntax\javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	.\vimfiles\syntax\javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jess_syntax_inits	.\vim73\syntax\jess.vim	/^    let did_jess_syntax_inits = 1$/;"	v
did_jgraph_syn_inits	.\vim73\syntax\jgraph.vim	/^    let did_jgraph_syn_inits = 1$/;"	v
did_jproperties_syntax_inits	.\vim73\syntax\jproperties.vim	/^    let did_jproperties_syntax_inits = 1$/;"	v
did_json_syn_inits	.\vimfiles\syntax\json.vim	/^    let did_json_syn_inits = 1$/;"	v
did_jsp_syn_inits	.\vim73\syntax\jsp.vim	/^    let did_jsp_syn_inits = 1$/;"	v
did_kix_syn_inits	.\vim73\syntax\kix.vim	/^		let did_kix_syn_inits=1$/;"	v
did_kscript_syntax_inits	.\vim73\syntax\kscript.vim	/^    let did_kscript_syntax_inits = 1$/;"	v
did_kwt_syn_inits	.\vim73\syntax\kwt.vim	/^	let did_kwt_syn_inits = 1$/;"	v
did_lace_syntax_inits	.\vim73\syntax\lace.vim	/^    let did_lace_syntax_inits = 1$/;"	v
did_latte_syntax_inits	.\vim73\syntax\latte.vim	/^    let did_latte_syntax_inits = 1$/;"	v
did_ldif_syn_inits	.\vim73\syntax\ldif.vim	/^    let did_ldif_syn_inits = 1$/;"	v
did_lifelines_syn_inits	.\vim73\syntax\lifelines.vim	/^    let did_lifelines_syn_inits = 1$/;"	v
did_lilo_syntax_inits	.\vim73\syntax\lilo.vim	/^    let did_lilo_syntax_inits = 1$/;"	v
did_lisp_syntax_inits	.\vimfiles\syntax\jquery.vim	/^    let did_lisp_syntax_inits = 1$/;"	v
did_lite_syn_inits	.\vim73\syntax\lite.vim	/^    let did_lite_syn_inits = 1$/;"	v
did_load_filetypes	.\vim73\filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_ftplugin	.\vim73\ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_logtalk_syn_inits	.\vim73\syntax\logtalk.vim	/^		let did_logtalk_syn_inits = 1$/;"	v
did_lotos_syntax_inits	.\vim73\syntax\lotos.vim	/^    let did_lotos_syntax_inits = 1$/;"	v
did_lout_syn_inits	.\vim73\syntax\lout.vim	/^		let did_lout_syn_inits = 1$/;"	v
did_lpc_syn_inits	.\vim73\syntax\lpc.vim	/^    let did_lpc_syn_inits = 1$/;"	v
did_lprolog_syntax_inits	.\vim73\syntax\lprolog.vim	/^    let did_lprolog_syntax_inits = 1$/;"	v
did_lscript_syntax_inits	.\vim73\syntax\lscript.vim	/^    let did_lscript_syntax_inits = 1$/;"	v
did_lss_syntax_inits	.\vim73\syntax\lss.vim	/^    let did_lss_syntax_inits = 1$/;"	v
did_lua_syntax_inits	.\vim73\syntax\lua.vim	/^    let did_lua_syntax_inits = 1$/;"	v
did_m4_syn_inits	.\vim73\syntax\m4.vim	/^    let did_m4_syn_inits = 1$/;"	v
did_macro_syntax_inits	.\vim73\syntax\vmasm.vim	/^    let did_macro_syntax_inits = 1$/;"	v
did_mailcap_syntax_inits	.\vim73\syntax\mailcap.vim	/^    let did_mailcap_syntax_inits = 1$/;"	v
did_make_syn_inits	.\vim73\syntax\make.vim	/^    let did_make_syn_inits = 1$/;"	v
did_man_syn_inits	.\vim73\syntax\man.vim	/^    let did_man_syn_inits = 1$/;"	v
did_maplev_syntax_inits	.\vim73\syntax\maple.vim	/^    let did_maplev_syntax_inits = 1$/;"	v
did_masm_syntax_inits	.\vim73\syntax\masm.vim	/^    let did_masm_syntax_inits = 1$/;"	v
did_mason_syn_inits	.\vim73\syntax\mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_master_syntax_inits	.\vim73\syntax\master.vim	/^    let did_master_syntax_inits = 1$/;"	v
did_matlab_syntax_inits	.\vim73\syntax\matlab.vim	/^    let did_matlab_syntax_inits = 1$/;"	v
did_maxima_syntax_inits	.\vim73\syntax\maxima.vim	/^    let did_maxima_syntax_inits = 1$/;"	v
did_mel_syntax_inits	.\vim73\syntax\mel.vim	/^    let did_mel_syntax_inits = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_af_af.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ca_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_chinese_gb.936.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_chinese_taiwan.950.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_cs_cz.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_czech_czech_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_czech_czech_republic.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_de_de.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_en_gb.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_eo.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_es_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_fi_fi.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_fr_fr.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_it_it.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_japanese_japan.932.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ko_kr.euckr.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ko_kr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_nl_nl.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_no_no.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_polish_poland.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_pt_br.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_pt_pt.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_ru_ru.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sk_sk.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sl_si.cp1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sl_si.latin2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sl_si.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_slovak_slovak_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sr_rs.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_sv_se.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_vi_vn.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_zh_cn.gb2312.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_zh_cn.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\vim73\lang\menu_zh_tw.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_mf_syntax_inits	.\vim73\syntax\mf.vim	/^    let did_mf_syntax_inits = 1$/;"	v
did_mgl_syn_inits	.\vim73\syntax\mgl.vim	/^    let did_mgl_syn_inits = 1$/;"	v
did_mgp_syn_inits	.\vim73\syntax\mgp.vim	/^    let did_mgp_syn_inits = 1$/;"	v
did_mgp_syn_inits	.\vim73\syntax\mgp.vim	/^  let did_mgp_syn_inits = 1$/;"	v
did_mma_syn_inits	.\vim73\syntax\mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_mmix_syntax_inits	.\vim73\syntax\mmix.vim	/^    let did_mmix_syntax_inits = 1$/;"	v
did_mmp_syntax_inits	.\vim73\syntax\mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_modsim3_syntax_inits	.\vim73\syntax\modsim3.vim	/^    let did_modsim3_syntax_inits = 1$/;"	v
did_modula2_syntax_inits	.\vim73\syntax\modula2.vim	/^    let did_modula2_syntax_inits = 1$/;"	v
did_modula3_syntax_inits	.\vim73\syntax\modula3.vim	/^    let did_modula3_syntax_inits = 1$/;"	v
did_monk_syntax_inits	.\vim73\syntax\monk.vim	/^    let did_monk_syntax_inits = 1$/;"	v
did_mp_syntax_inits	.\vim73\syntax\mp.vim	/^    let did_mp_syntax_inits = 1$/;"	v
did_msidl_syntax_inits	.\vim73\syntax\msidl.vim	/^    let did_msidl_syntax_inits = 1$/;"	v
did_msql_syn_inits	.\vim73\syntax\msql.vim	/^    let did_msql_syn_inits = 1$/;"	v
did_mupad_syntax_inits	.\vim73\syntax\mupad.vim	/^    let did_mupad_syntax_inits = 1$/;"	v
did_mush_syntax_inits	.\vim73\syntax\mush.vim	/^    let did_mush_syntax_inits = 1$/;"	v
did_muttrc_syntax_inits	.\vim73\syntax\muttrc.vim	/^    let did_muttrc_syntax_inits = 1$/;"	v
did_mysql_syn_inits	.\vim73\syntax\mysql.vim	/^    let did_mysql_syn_inits = 1$/;"	v
did_named_syn_inits	.\vim73\syntax\named.vim	/^    let did_named_syn_inits = 1$/;"	v
did_nasm_syntax_inits	.\vim73\syntax\nasm.vim	/^    let did_nasm_syntax_inits = 1$/;"	v
did_nastran_syntax_inits	.\vim73\syntax\nastran.vim	/^     let did_nastran_syntax_inits = 1$/;"	v
did_natural_syntax_inits	.\vim73\syntax\natural.vim	/^    let did_natural_syntax_inits = 1$/;"	v
did_ncf_syntax_inits	.\vim73\syntax\ncf.vim	/^	let did_ncf_syntax_inits = 1$/;"	v
did_nqc_syn_inits	.\vim73\syntax\nqc.vim	/^    let did_nqc_syn_inits = 1$/;"	v
did_nroff_syn_inits	.\vim73\syntax\nroff.vim	/^		let did_nroff_syn_inits = 1$/;"	v
did_nsys_syn_inits	.\vim73\syntax\nsis.vim	/^    let did_nsys_syn_inits = 1$/;"	v
did_objc_syntax_inits	.\vim73\syntax\objc.vim	/^    let did_objc_syntax_inits = 1$/;"	v
did_ocaml_syntax_inits	.\vim73\syntax\ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_occam_syntax_inits	.\vim73\syntax\occam.vim	/^    let did_occam_syntax_inits = 1$/;"	v
did_omnimark_syntax_inits	.\vim73\syntax\omnimark.vim	/^    let did_omnimark_syntax_inits = 1$/;"	v
did_openroad_syntax_inits	.\vim73\syntax\openroad.vim	/^		let did_openroad_syntax_inits = 1$/;"	v
did_optwin_syntax_inits	.\vim73\optwin.vim	/^    let did_optwin_syntax_inits = 1$/;"	v
did_ora_syn_inits	.\vim73\syntax\ora.vim	/^    let did_ora_syn_inits = 1$/;"	v
did_pascal_syn_inits	.\vim73\syntax\pascal.vim	/^    let did_pascal_syn_inits = 1$/;"	v
did_pcap_syntax_inits	.\vim73\syntax\pcap.vim	/^    let did_pcap_syntax_inits = 1$/;"	v
did_pccts_syntax_inits	.\vim73\syntax\pccts.vim	/^    let did_pccts_syntax_inits = 1$/;"	v
did_perl6_syntax_inits	.\vim73\syntax\perl6.vim	/^        let did_perl6_syntax_inits = 1$/;"	v
did_php_syn_inits	.\vim73\syntax\php.vim	/^    let did_php_syn_inits = 1$/;"	v
did_php_syn_inits	.\vimfiles\syntax\php.vim	/^    let did_php_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	.\vim73\syntax\pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_pike_syntax_inits	.\vim73\syntax\pike.vim	/^    let did_pike_syntax_inits = 1$/;"	v
did_pilrc_syntax_inits	.\vim73\syntax\pilrc.vim	/^	let did_pilrc_syntax_inits = 1$/;"	v
did_pine_syn_inits	.\vim73\syntax\pine.vim	/^    let did_pine_syn_inits = 1$/;"	v
did_plm_syntax_inits	.\vim73\syntax\plm.vim	/^    let did_plm_syntax_inits = 1$/;"	v
did_plsql_syn_inits	.\vim73\syntax\plsql.vim	/^    let did_plsql_syn_inits = 1$/;"	v
did_po_syn_inits	.\vim73\syntax\po.vim	/^    let did_po_syn_inits = 1$/;"	v
did_pod_syntax_inits	.\vim73\syntax\pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_postscr_syntax_inits	.\vim73\syntax\postscr.vim	/^    let did_postscr_syntax_inits = 1$/;"	v
did_ppwiz_syn_inits	.\vim73\syntax\ppwiz.vim	/^		let did_ppwiz_syn_inits = 1$/;"	v
did_prescribe_syn_inits	.\vim73\syntax\prescribe.vim	/^    let did_prescribe_syn_inits = 1$/;"	v
did_procmail_syntax_inits	.\vim73\syntax\procmail.vim	/^    let did_procmail_syntax_inits = 1$/;"	v
did_progress_syntax_inits	.\vim73\syntax\progress.vim	/^	let did_progress_syntax_inits = 1$/;"	v
did_prolog_syn_inits	.\vim73\syntax\prolog.vim	/^    let did_prolog_syn_inits = 1$/;"	v
did_psf_syntax_inits	.\vim73\syntax\psf.vim	/^    let did_psf_syntax_inits = 1$/;"	v
did_ptcap_syntax_inits	.\vim73\syntax\ptcap.vim	/^	let did_ptcap_syntax_inits = 1$/;"	v
did_purifyLog_syntax_inits	.\vim73\syntax\purifylog.vim	/^    let did_purifyLog_syntax_inits = 1$/;"	v
did_pyrex_syntax_inits	.\vim73\syntax\pyrex.vim	/^    let did_pyrex_syntax_inits = 1$/;"	v
did_python_syn_inits	.\vim73\syntax\python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_python_syn_inits	.\vimfiles\syntax\python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_r_syn_inits	.\vim73\syntax\eviews.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	.\vim73\syntax\gretl.vim	/^    let did_r_syn_inits = 1$/;"	v
did_radiance_syn_inits	.\vim73\syntax\radiance.vim	/^    let did_radiance_syn_inits = 1$/;"	v
did_ratpoison_syn_inits	.\vim73\syntax\ratpoison.vim	/^    let did_ratpoison_syn_inits = 1$/;"	v
did_rc_syntax_inits	.\vim73\syntax\rc.vim	/^    let did_rc_syntax_inits = 1$/;"	v
did_rcs_syn_inits	.\vim73\syntax\rcs.vim	/^    let did_rcs_syn_inits = 1$/;"	v
did_rcslog_syntax_inits	.\vim73\syntax\rcslog.vim	/^    let did_rcslog_syntax_inits = 1$/;"	v
did_rebol_syntax_inits	.\vim73\syntax\rebol.vim	/^    let did_rebol_syntax_inits = 1$/;"	v
did_registry_syntax_inits	.\vim73\syntax\registry.vim	/^    let did_registry_syntax_inits = 1$/;"	v
did_remind_syn_inits	.\vim73\syntax\remind.vim	/^    let did_remind_syn_inits = 1$/;"	v
did_reva_syntax_inits	.\vim73\syntax\reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rexx_syn_inits	.\vim73\syntax\rexx.vim	/^    let did_rexx_syn_inits = 1$/;"	v
did_rhelp_syntax_inits	.\vim73\syntax\rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_rib_syntax_inits	.\vim73\syntax\rib.vim	/^    let did_rib_syntax_inits = 1$/;"	v
did_robots_syntax_inits	.\vim73\syntax\robots.vim	/^    let did_robots_syntax_inits = 1$/;"	v
did_rpcgen_syntax_inits	.\vim73\syntax\rpcgen.vim	/^    let did_rpcgen_syntax_inits = 1$/;"	v
did_rpl_syntax_inits	.\vim73\syntax\rpl.vim	/^    let did_rpl_syntax_inits = 1$/;"	v
did_rtf_syntax_inits	.\vim73\syntax\rtf.vim	/^    let did_rtf_syntax_inits = 1$/;"	v
did_samba_syn_inits	.\vim73\syntax\samba.vim	/^    let did_samba_syn_inits = 1$/;"	v
did_sas_syntax_inits	.\vim73\syntax\sas.vim	/^      let did_sas_syntax_inits = 1$/;"	v
did_sather_syn_inits	.\vim73\syntax\sather.vim	/^    let did_sather_syn_inits = 1$/;"	v
did_scheme_syntax_inits	.\vim73\syntax\scheme.vim	/^    let did_scheme_syntax_inits = 1$/;"	v
did_scilab_syntax_inits	.\vim73\syntax\scilab.vim	/^		let did_scilab_syntax_inits = 1$/;"	v
did_sdl_syn_inits	.\vim73\syntax\sdl.vim	/^	let did_sdl_syn_inits = 1$/;"	v
did_sed_syntax_inits	.\vim73\syntax\sed.vim	/^	let did_sed_syntax_inits = 1$/;"	v
did_sgmldecl_syntax_init	.\vim73\syntax\sgmldecl.vim	/^    let did_sgmldecl_syntax_init = 1$/;"	v
did_sgmllnx_syn_inits	.\vim73\syntax\sgmllnx.vim	/^    let did_sgmllnx_syn_inits = 1$/;"	v
did_sicad_syntax_inits	.\vim73\syntax\sicad.vim	/^    let did_sicad_syntax_inits = 1$/;"	v
did_simula_syntax_inits	.\vim73\syntax\simula.vim	/^	let did_simula_syntax_inits = 1$/;"	v
did_sinda_syntax_inits	.\vim73\syntax\sinda.vim	/^    let did_sinda_syntax_inits = 1$/;"	v
did_sindacmp_syntax_inits	.\vim73\syntax\sindacmp.vim	/^    let did_sindacmp_syntax_inits = 1$/;"	v
did_sindaout_syntax_inits	.\vim73\syntax\sindaout.vim	/^    let did_sindaout_syntax_inits = 1$/;"	v
did_skill_syntax_inits	.\vim73\syntax\skill.vim	/^    let did_skill_syntax_inits = 1$/;"	v
did_sl_syntax_inits	.\vim73\syntax\sl.vim	/^    let did_sl_syntax_inits = 1$/;"	v
did_slang_syntax_inits	.\vim73\syntax\slang.vim	/^    let did_slang_syntax_inits = 1$/;"	v
did_slice_syn_inits	.\vim73\syntax\slice.vim	/^    let did_slice_syn_inits = 1$/;"	v
did_slrnrc_syntax_inits	.\vim73\syntax\slrnrc.vim	/^    let did_slrnrc_syntax_inits = 1$/;"	v
did_slrnsc_syntax_inits	.\vim73\syntax\slrnsc.vim	/^    let did_slrnsc_syntax_inits = 1$/;"	v
did_smarty_syn_inits	.\vim73\syntax\smarty.vim	/^    let did_smarty_syn_inits = 1$/;"	v
did_smil_syntax_inits	.\vim73\syntax\sm.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smil_syntax_inits	.\vim73\syntax\smil.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smith_syntax_inits	.\vim73\syntax\smith.vim	/^    let did_smith_syntax_inits = 1$/;"	v
did_sml_syntax_inits	.\vim73\syntax\sml.vim	/^    let did_sml_syntax_inits = 1$/;"	v
did_snnsnet_syn_inits	.\vim73\syntax\snnsnet.vim	/^    let did_snnsnet_syn_inits = 1$/;"	v
did_snnspat_syn_inits	.\vim73\syntax\snnspat.vim	/^    let did_snnspat_syn_inits = 1$/;"	v
did_snnsres_syn_inits	.\vim73\syntax\snnsres.vim	/^    let did_snnsres_syn_inits = 1$/;"	v
did_snobol4_syntax_inits	.\vim73\syntax\snobol4.vim	/^    let did_snobol4_syntax_inits = 1$/;"	v
did_spec_syntax_inits	.\vim73\syntax\spec.vim	/^    let did_spec_syntax_inits = 1$/;"	v
did_specman_syn_inits	.\vim73\syntax\specman.vim	/^    let did_specman_syn_inits = 1$/;"	v
did_spice_syntax_inits	.\vim73\syntax\spice.vim	/^    let did_spice_syntax_inits = 1$/;"	v
did_splint_syntax_inits	.\vim73\syntax\splint.vim	/^    let did_splint_syntax_inits = 1$/;"	v
did_spup_syn_inits	.\vim73\syntax\spup.vim	/^		let did_spup_syn_inits = 1$/;"	v
did_sql_syn_inits	.\vim73\syntax\sqlanywhere.vim	/^        let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	.\vim73\syntax\sqlinformix.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	.\vim73\syntax\sqloracle.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sqlforms_syn_inits	.\vim73\syntax\sqlforms.vim	/^	let did_sqlforms_syn_inits = 1$/;"	v
did_sqlj_syn_inits	.\vim73\syntax\sqlj.vim	/^    let did_sqlj_syn_inits = 1$/;"	v
did_sqr_syn_inits	.\vim73\syntax\sqr.vim	/^    let did_sqr_syn_inits = 1$/;"	v
did_squid_syntax_inits	.\vim73\syntax\squid.vim	/^    let did_squid_syntax_inits = 1$/;"	v
did_sshconfig_syntax_inits	.\vim73\syntax\sshconfig.vim	/^    let did_sshconfig_syntax_inits = 1$/;"	v
did_sshdconfig_syntax_inits	.\vim73\syntax\sshdconfig.vim	/^    let did_sshdconfig_syntax_inits = 1$/;"	v
did_st_syntax_inits	.\vim73\syntax\st.vim	/^    let did_st_syntax_inits = 1$/;"	v
did_stp_syn_inits	.\vim73\syntax\stp.vim	/^    let did_stp_syn_inits = 1$/;"	v
did_strace_syntax_inits	.\vim73\syntax\strace.vim	/^		let did_strace_syntax_inits = 1$/;"	v
did_svkannotate_syntax_inits	.\vimfiles\syntax\SVKAnnotate.vim	/^	let did_svkannotate_syntax_inits = 1$/;"	v
did_svn_syn_inits	.\vim73\syntax\svn.vim	/^    let did_svn_syn_inits = 1$/;"	v
did_svn_syn_inits	.\vimfiles\syntax\svn.vim	/^		let did_svn_syn_inits = 1$/;"	v
did_svnannotate_syntax_inits	.\vimfiles\syntax\SVNAnnotate.vim	/^	let did_svnannotate_syntax_inits = 1$/;"	v
did_svnlog_syn_inits	.\vimfiles\syntax\svnlog.vim	/^        let did_svnlog_syn_inits = 1$/;"	v
did_tads_syn_inits	.\vim73\syntax\tads.vim	/^    let did_tads_syn_inits = 1$/;"	v
did_tak_syntax_inits	.\vim73\syntax\tak.vim	/^    let did_tak_syntax_inits = 1$/;"	v
did_takcmp_syntax_inits	.\vim73\syntax\takcmp.vim	/^    let did_takcmp_syntax_inits = 1$/;"	v
did_takout_syntax_inits	.\vim73\syntax\takout.vim	/^    let did_takout_syntax_inits = 1$/;"	v
did_tasm_syntax_inits	.\vim73\syntax\tasm.vim	/^    let did_tasm_syntax_inits = 1$/;"	v
did_tcl_syntax_inits	.\vim73\syntax\tcl.vim	/^    let did_tcl_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\vim73\syntax\lhaskell.vim	/^    let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\vim73\syntax\tex.vim	/^ let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\vim73\syntax\tex.vim	/^ let did_tex_syntax_inits= 2$/;"	v
did_texinfo_syn_inits	.\vim73\syntax\texinfo.vim	/^    let did_texinfo_syn_inits = 1$/;"	v
did_texmf_syntax_inits	.\vim73\syntax\texmf.vim	/^    let did_texmf_syntax_inits = 1$/;"	v
did_tf_syn_inits	.\vim73\syntax\tf.vim	/^    let did_tf_syn_inits = 1$/;"	v
did_tidy_syn_inits	.\vim73\syntax\tidy.vim	/^    let did_tidy_syn_inits = 1$/;"	v
did_tli_syntax_inits	.\vim73\syntax\tli.vim	/^    let did_tli_syntax_inits = 1$/;"	v
did_toolbar_tmenu	.\vim73\menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tpp_syn_inits	.\vim73\syntax\tpp.vim	/^    let did_tpp_syn_inits = 1$/;"	v
did_trasys_syntax_inits	.\vim73\syntax\trasys.vim	/^    let did_trasys_syntax_inits = 1$/;"	v
did_tsalt_syntax_inits	.\vim73\syntax\tsalt.vim	/^    let did_tsalt_syntax_inits = 1$/;"	v
did_tsscl_syntax_inits	.\vim73\syntax\tsscl.vim	/^    let did_tsscl_syntax_inits = 1$/;"	v
did_tssgm_syntax_inits	.\vim73\syntax\tssgm.vim	/^    let did_tssgm_syntax_inits = 1$/;"	v
did_tssop_syntax_inits	.\vim73\syntax\tssop.vim	/^    let did_tssop_syntax_inits = 1$/;"	v
did_uc_syntax_inits	.\vim73\syntax\uc.vim	/^    let did_uc_syntax_inits = 1$/;"	v
did_uil_syn_inits	.\vim73\syntax\uil.vim	/^    let did_uil_syn_inits = 1$/;"	v
did_vb_syntax_inits	.\vim73\syntax\vb.vim	/^		let did_vb_syntax_inits = 1$/;"	v
did_vera_syn_inits	.\vim73\syntax\vera.vim	/^    let did_vera_syn_inits = 1$/;"	v
did_verilog_syn_inits	.\vim73\syntax\verilog.vim	/^      let did_verilog_syn_inits = 1$/;"	v
did_verilogams_syn_inits	.\vim73\syntax\verilogams.vim	/^      let did_verilogams_syn_inits = 1$/;"	v
did_vhdl_syntax_inits	.\vim73\syntax\vhdl.vim	/^    let did_vhdl_syntax_inits = 1$/;"	v
did_virata_syntax_inits	.\vim73\syntax\virata.vim	/^    let did_virata_syntax_inits = 1$/;"	v
did_vsejcl_syntax	.\vim73\syntax\vsejcl.vim	/^    let did_vsejcl_syntax = 1$/;"	v
did_wdiff_syn_inits	.\vim73\syntax\wdiff.vim	/^    let did_wdiff_syn_inits = 1$/;"	v
did_wdiff_syn_inits	.\vim73\syntax\wdiff.vim	/^  let did_wdiff_syn_inits = 1$/;"	v
did_webmacro_syn_inits	.\vim73\syntax\webmacro.vim	/^    let did_webmacro_syn_inits = 1$/;"	v
did_wget_syn_inits	.\vim73\syntax\wget.vim	/^    let did_wget_syn_inits = 1$/;"	v
did_wiki_syn_inits	.\vimfiles\syntax\creole.vim	/^    let did_wiki_syn_inits = 1$/;"	v
did_winbatch_syntax_inits	.\vim73\syntax\winbatch.vim	/^    let did_winbatch_syntax_inits = 1$/;"	v
did_wml_syn_inits	.\vim73\syntax\wml.vim	/^    let did_wml_syn_inits = 1$/;"	v
did_wml_syn_inits	.\vim73\syntax\wml.vim	/^  let did_wml_syn_inits = 1$/;"	v
did_wsml_syn_inits	.\vim73\syntax\wsml.vim	/^       let did_wsml_syn_inits = 1$/;"	v
did_xdefaults_syntax_inits	.\vim73\syntax\xdefaults.vim	/^    let did_xdefaults_syntax_inits = 1$/;"	v
did_xkb_syntax_inits	.\vim73\syntax\xkb.vim	/^		let did_xkb_syntax_inits = 1$/;"	v
did_xmath_syntax_inits	.\vim73\syntax\xmath.vim	/^    let did_xmath_syntax_inits = 1$/;"	v
did_xpm2_syntax_inits	.\vim73\syntax\xpm2.vim	/^    let did_xpm2_syntax_inits = 1$/;"	v
did_xpm_syntax_inits	.\vim73\syntax\xpm.vim	/^    let did_xpm_syntax_inits = 1$/;"	v
did_xxd_syntax_inits	.\vim73\syntax\xxd.vim	/^    let did_xxd_syntax_inits = 1$/;"	v
did_z8a_syntax_inits	.\vim73\syntax\z8a.vim	/^    let did_z8a_syntax_inits = 1$/;"	v
diffcomplete	.\vim73\ftplugin\gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffcomplete	.\vimfiles\ftplugin\gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
dispatcher	.\vimfiles\plugin\abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
displayHelp	.\vimfiles\plugin\NERD_tree.vim	/^function! s:displayHelp()$/;"	f
djump	.\vimfiles\autoload\rails.vim	/^function! s:djump(def)$/;"	f
do_syntax_sel_menu	.\vimfiles\colors\Celibate.vim	/^	let do_syntax_sel_menu=1$/;"	v
dodigits	.\vim73\ftplugin\pdf.vim	/^function! s:dodigits(digits)$/;"	f
dolu	.\vim73\tutor\tutor.cs	/^  2. Dr¾ klávesu pro pohyb dolu (j), dokud se její funkce nezopakuje.$/;"	m	signature:(j)
doobject	.\vim73\ftplugin\pdf.vim	/^function! s:doobject(string)$/;"	f
dosbatch_cmdextversion	.\vim73\syntax\dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
doxygengroup	.\vim73\syntax\doxygen.vim	/^    aug doxygengroup$/;"	a
dprint	.\vim73\autoload\rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dprint	.\vimfiles\autoload\rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
drawrecent	.\vimfiles\plugin\functionlist.vim	/^function! s:drawrecent()	$/;"	f
dtd_cpo_save__	.\vim73\syntax\dtd.vim	/^    let __dtd_cpo_save__ = &cpo$/;"	v
dumpHelp	.\vimfiles\plugin\NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
e	.\vim73\macros\less.vim	/^map e <CR>$/;"	m
echo	.\vimfiles\plugin\NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	.\vimfiles\plugin\NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	.\vimfiles\plugin\NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
echogets	.\vim73\tools\ccfilter.c	/^char *echogets(char *s, int echo) {$/;"	f	signature:(char *s, int echo)
edit	.\vimfiles\autoload\rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
edit_file	.\vimfiles\autoload\vimwiki.vim	/^function! s:edit_file(command, filename) "{{{$/;"	f
editcmdfor	.\vimfiles\autoload\rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
egrep_pattern	.\vimfiles\plugin\abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
encoding	.\vim73\keymap\hebrew.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	.\vim73\keymap\hebrew.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	.\vim73\keymap\hebrew.vim	/^let encoding = &enc$/;"	v
encoding	.\vim73\keymap\hebrewp.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	.\vim73\keymap\hebrewp.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	.\vim73\keymap\hebrewp.vim	/^let encoding = &enc$/;"	v
encoding	.\vim73\keymap\persian.vim	/^	let encoding = 'utf-8'$/;"	v
encoding	.\vim73\keymap\persian.vim	/^let encoding = &enc$/;"	v
encoding	.\vim73\keymap\polish-slash.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\vim73\keymap\polish-slash.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\vim73\keymap\polish-slash.vim	/^let encoding = &enc$/;"	v
encoding	.\vim73\keymap\serbian.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\vim73\keymap\serbian.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\vim73\keymap\serbian.vim	/^let encoding = &enc$/;"	v
encoding	.\vim73\keymap\slovak.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\vim73\keymap\slovak.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\vim73\keymap\slovak.vim	/^let encoding = &enc$/;"	v
end	.\vim73\vimtutor.bat	/^:end$/;"	l
endof	.\vimfiles\autoload\rails.vim	/^function! s:endof(lnum)$/;"	f
enumHelpTags	.\vimfiles\autoload\fuf\help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	.\vimfiles\autoload\fuf\dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	.\vimfiles\autoload\fuf\file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	.\vimfiles\autoload\fuf\file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	.\vimfiles\autoload\fuf\tag.vim	/^function s:enumTags(tagFiles)$/;"	f
environment	.\vimfiles\autoload\rails.vim	/^function! s:environment()$/;"	f
environmentEdit	.\vimfiles\autoload\rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentList	.\vimfiles\autoload\rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
error	.\vimfiles\autoload\rails.vim	/^function! s:error(str)$/;"	f
error	.\vimfiles\plugin\rails.vim	/^function! s:error(str)$/;"	f
escape	.\vim73\autoload\gzip.vim	/^fun s:escape(name)$/;"	f
escape	.\vimfiles\plugin\fencview.vim	/^fun! s:escape(name)$/;"	f
escarg	.\vimfiles\autoload\rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	.\vimfiles\autoload\rails.vim	/^function! s:esccmd(p)$/;"	f
esctext	.\vimfiles\doc\vim2html.pl	/^sub esctext$/;"	s
escurl	.\vimfiles\doc\vim2html.pl	/^sub escurl$/;"	s
escvar	.\vimfiles\plugin\rails.vim	/^function! s:escvar(r)$/;"	f
evaluateLearningRank	.\vimfiles\autoload\fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
exec	.\vimfiles\plugin\NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
execScript	.\vimfiles\plugin\voom\voom.py	/^def execScript(): #{{{2$/;"	f	access:public
execute	.\vimfiles\autoload\l9\async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer	access:public
execute	.\vimfiles\autoload\l9\async.py	/^    def execute(self, worker):$/;"	m	class:Executor	access:public
executeNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:executeNode()$/;"	f
expandAbbrevMap	.\vimfiles\autoload\fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
expand_braces	.\vimfiles\plugin\abolish.vim	/^function! s:expand_braces(dict)$/;"	f
extensions	.\vimfiles\plugin\vimwiki.vim	/^    let extensions['.wiki'] = 1$/;"	v
extensions	.\vimfiles\plugin\vimwiki.vim	/^    let extensions[wiki.ext] = 1$/;"	v
extensions	.\vimfiles\plugin\vimwiki.vim	/^let extensions = {}$/;"	v
extract_file_to	.\vimfiles\lib\extras\cocoa_methods.py	/^def extract_file_to(fname=None):$/;"	f	access:public
extract_files_to	.\vimfiles\lib\extras\cocoa_definitions.py	/^def extract_files_to(dirname=None):$/;"	f	access:public
extractdbvar	.\vimfiles\autoload\rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
extractopts	.\vimfiles\plugin\abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
f	.\vim73\macros\less.vim	/^map f <Space>$/;"	m
feedPopup	.\vimfiles\autoload\acp.vim	/^function s:feedPopup()$/;"	f
fileExplorer	.\vimfiles\plugin\winmanager.vim	/^	augroup fileExplorer$/;"	a
file_getline	.\vimfiles\autoload\rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	.\vimfiles\autoload\rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	.\vimfiles\autoload\rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	.\vimfiles\autoload\rails.vim	/^function! s:file_path() dict abort$/;"	f
filename	.\vim73\indent\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	.\vim73\indent\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	.\vim73\indent\sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	.\vim73\syntax\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	.\vim73\syntax\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	.\vim73\syntax\sql.vim	/^let filename = 'sqloracle'$/;"	v
filename	.\vimfiles\autoload\vimwiki.vim	/^function! s:filename(link) "{{{$/;"	f
filetypedetect	.\vim73\filetype.vim	/^augroup filetypedetect$/;"	a
filetypedetect	.\vimfiles\plugin\vimwiki.vim	/^augroup filetypedetect$/;"	a
filetypeindent	.\vim73\indent.vim	/^augroup filetypeindent$/;"	a
filetypeplugin	.\vim73\ftplugin.vim	/^augroup filetypeplugin$/;"	a
find	.\vimfiles\lib\extras\cocoa_classes.py	/^from cocoa_definitions import write_file, find$/;"	i
find	.\vimfiles\lib\extras\cocoa_definitions.py	/^def find(searchpath, ext):$/;"	f	access:public
findItem	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	.\vimfiles\autoload\fuf\buffer.vim	/^function s:findItem(items, word)$/;"	f
find_backward	.\vimfiles\ftplugin\vimwiki.vim	/^function! s:find_backward(rx_item, lnum) "{{{$/;"	f
find_command	.\vimfiles\plugin\abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
find_continued_lnum	.\vim73\indent\sh.vim	/^function! s:find_continued_lnum(lnum)$/;"	f
find_forward	.\vimfiles\ftplugin\vimwiki.vim	/^function! s:find_forward(rx_item, lnum) "{{{$/;"	f
find_headers	.\vimfiles\lib\extras\cocoa_classes.py	/^def find_headers(root_folder, frameworks):$/;"	f	access:public
find_headers	.\vimfiles\lib\extras\cocoa_definitions.py	/^def find_headers(root_folder, frameworks):$/;"	f	access:public
find_next_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:find_next_list_item(lnum) "{{{$/;"	f
find_wiki	.\vimfiles\plugin\vimwiki.vim	/^function! s:find_wiki(path) "{{{$/;"	f
findamethod	.\vimfiles\autoload\rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	.\vimfiles\autoload\rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	.\vimfiles\autoload\rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	.\vimfiles\autoload\rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
findfromview	.\vimfiles\autoload\rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	.\vimfiles\autoload\rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	.\vimfiles\autoload\rails.vim	/^function! s:findlayout(name)$/;"	f
findview	.\vimfiles\autoload\rails.vim	/^function! s:findview(name)$/;"	f
finishPopup	.\vimfiles\autoload\acp.vim	/^function s:finishPopup(fGroup1)$/;"	f
firstUsableWindow	.\vimfiles\plugin\NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
first_line	.\vim73\ftplugin\changelog.vim	/^  function! s:first_line(string)$/;"	f
fix_beginfigs	.\vim73\ftplugin\mp.vim	/^  function! s:fix_beginfigs()$/;"	f
fixturesEdit	.\vimfiles\autoload\rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	.\vimfiles\autoload\rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
fmt_cell	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:fmt_cell(cell, max_len) "{{{$/;"	f
fmt_cell_sep	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:fmt_cell_sep(max_len) "{{{$/;"	f
fmt_row	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:fmt_row(line, max_lens, col1, col2) "{{{$/;"	f
fmt_sep	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:fmt_sep(max_lens, col1, col2) "{{{$/;"	f
fnameescape	.\vimfiles\plugin\bundler.vim	/^function! s:fnameescape(file) abort$/;"	f
foldingCleanup	.\vimfiles\plugin\voom\voom.py	/^def foldingCleanup(VO): #{{{3$/;"	f	access:public
foldingCreate	.\vimfiles\plugin\voom\voom.py	/^def foldingCreate(ln1, ln2, cFolds): #{{{3$/;"	f	access:public
foldingFlip	.\vimfiles\plugin\voom\voom.py	/^def foldingFlip(VO, ln1, ln2, folds): #{{{3$/;"	f	access:public
foldingGet	.\vimfiles\plugin\voom\voom.py	/^def foldingGet(ln1, ln2): #{{{3$/;"	f	access:public
foldingRead	.\vimfiles\plugin\voom\voom.py	/^def foldingRead(VO, ln1, ln2): #{{{3$/;"	f	access:public
foldingWrite	.\vimfiles\plugin\voom\voom.py	/^def foldingWrite(VO, ln1, ln2, cFolds): #{{{3$/;"	f	access:public
fontsize#begin	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#begin()$/;"	f
fontsize#dec	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#dec()$/;"	f
fontsize#decodeFont	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#decodeFont(font)$/;"	f
fontsize#default	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#default()$/;"	f
fontsize#display	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#display()$/;"	f
fontsize#encodeFont	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#encodeFont(font)$/;"	f
fontsize#ensureDefault	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#ensureDefault()$/;"	f
fontsize#fontString	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#fontString(font)$/;"	f
fontsize#getSize	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#getSize(font)$/;"	f
fontsize#inc	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#inc()$/;"	f
fontsize#quit	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#quit()$/;"	f
fontsize#regex_gtk2	.\vimfiles\autoload\fontsize.vim	/^let fontsize#regex_gtk2 = '\\(.\\{-} \\)\\(\\d\\+\\)\\(.*\\)'$/;"	v
fontsize#regex_kde	.\vimfiles\autoload\fontsize.vim	/^let fontsize#regex_kde = '\\(.\\{-}\\\/\\)\\(\\d\\+\\)\\(.*\\)'$/;"	v
fontsize#regex_other	.\vimfiles\autoload\fontsize.vim	/^let fontsize#regex_other = '\\(.\\{-}:h\\)\\(\\d\\+\\)\\(.*\\)'$/;"	v
fontsize#regex_photon	.\vimfiles\autoload\fontsize.vim	/^let fontsize#regex_photon = '\\(.\\{-}:s\\)\\(\\d\\+\\)\\(.*\\)'$/;"	v
fontsize#regex_x11	.\vimfiles\autoload\fontsize.vim	/^let fontsize#regex_x11 = '\\(.\\{-}-\\)\\(\\d\\+\\)\\(.*\\)'$/;"	v
fontsize#setDefault	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#setDefault()$/;"	f
fontsize#setSize	.\vimfiles\autoload\fontsize.vim	/^function! fontsize#setSize(font, size)$/;"	f
foo	.\vimfiles\etc\examples\indent\continuation_blocks.rb	/^def foo$/;"	f
format	.\vimfiles\autoload\rails.vim	/^function! s:format(...)$/;"	f
formatItemUsingCache	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
format_function_line	.\vimfiles\lib\extras\cocoa_definitions.py	/^def format_function_line(line):$/;"	f	access:public
format_function_line	.\vimfiles\lib\extras\cocoa_methods.py	/^from cocoa_definitions import default_headers, format_function_line$/;"	i
format_line	.\vimfiles\lib\extras\cocoa_methods.py	/^def format_line(line):$/;"	f	access:public
format_links	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:format_links(links) "{{{$/;"	f
fortran_free_source	.\vim73\syntax\sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	.\vim73\syntax\tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	.\vim73\syntax\trasys.vim	/^let fortran_free_source=1$/;"	v
fuf#addMode	.\vimfiles\autoload\fuf.vim	/^function fuf#addMode(modeName)$/;"	f
fuf#bookmarkdir#createHandler	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f
fuf#bookmarkdir#getEditableDataNames	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f
fuf#bookmarkdir#getSwitchOrder	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f
fuf#bookmarkdir#onInit	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f
fuf#bookmarkdir#renewCache	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f
fuf#bookmarkdir#requiresOnCommandPre	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f
fuf#bookmarkfile#createHandler	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f
fuf#bookmarkfile#getEditableDataNames	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f
fuf#bookmarkfile#getSwitchOrder	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f
fuf#bookmarkfile#onInit	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f
fuf#bookmarkfile#renewCache	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f
fuf#bookmarkfile#requiresOnCommandPre	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f
fuf#buffer#createHandler	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f
fuf#buffer#getEditableDataNames	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f
fuf#buffer#getSwitchOrder	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f
fuf#buffer#onInit	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#onInit()$/;"	f
fuf#buffer#renewCache	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#renewCache()$/;"	f
fuf#buffer#requiresOnCommandPre	.\vimfiles\autoload\fuf\buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f
fuf#buffertag#createHandler	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f
fuf#buffertag#getEditableDataNames	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f
fuf#buffertag#getSwitchOrder	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f
fuf#buffertag#onInit	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f
fuf#buffertag#renewCache	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f
fuf#buffertag#requiresOnCommandPre	.\vimfiles\autoload\fuf\buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f
fuf#callbackfile#createHandler	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f
fuf#callbackfile#getEditableDataNames	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f
fuf#callbackfile#getSwitchOrder	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f
fuf#callbackfile#launch	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f
fuf#callbackfile#onInit	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f
fuf#callbackfile#renewCache	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f
fuf#callbackfile#requiresOnCommandPre	.\vimfiles\autoload\fuf\callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f
fuf#callbackitem#createHandler	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f
fuf#callbackitem#getEditableDataNames	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f
fuf#callbackitem#getSwitchOrder	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f
fuf#callbackitem#launch	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPath)$/;"	f
fuf#callbackitem#onInit	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f
fuf#callbackitem#renewCache	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f
fuf#callbackitem#requiresOnCommandPre	.\vimfiles\autoload\fuf\callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f
fuf#changelist#createHandler	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f
fuf#changelist#getEditableDataNames	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f
fuf#changelist#getSwitchOrder	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f
fuf#changelist#onInit	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#onInit()$/;"	f
fuf#changelist#renewCache	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#renewCache()$/;"	f
fuf#changelist#requiresOnCommandPre	.\vimfiles\autoload\fuf\changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f
fuf#compareRanks	.\vimfiles\autoload\fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f
fuf#countModifiedFiles	.\vimfiles\autoload\fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f
fuf#coveragefile#createHandler	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f
fuf#coveragefile#getEditableDataNames	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f
fuf#coveragefile#getSwitchOrder	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f
fuf#coveragefile#onInit	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f
fuf#coveragefile#renewCache	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f
fuf#coveragefile#requiresOnCommandPre	.\vimfiles\autoload\fuf\coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f
fuf#defineKeyMappingInHandler	.\vimfiles\autoload\fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f
fuf#defineLaunchCommand	.\vimfiles\autoload\fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f
fuf#dir#createHandler	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#createHandler(base)$/;"	f
fuf#dir#getEditableDataNames	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f
fuf#dir#getSwitchOrder	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f
fuf#dir#onInit	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#onInit()$/;"	f
fuf#dir#renewCache	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#renewCache()$/;"	f
fuf#dir#requiresOnCommandPre	.\vimfiles\autoload\fuf\dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f
fuf#echoError	.\vimfiles\autoload\fuf.vim	/^function fuf#echoError(msg)$/;"	f
fuf#echoWarning	.\vimfiles\autoload\fuf.vim	/^function fuf#echoWarning(msg)$/;"	f
fuf#editDataFile	.\vimfiles\autoload\fuf.vim	/^function fuf#editDataFile()$/;"	f
fuf#enumExpandedDirsEntries	.\vimfiles\autoload\fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f
fuf#expandTailDotSequenceToParentDir	.\vimfiles\autoload\fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f
fuf#file#createHandler	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#createHandler(base)$/;"	f
fuf#file#getEditableDataNames	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#getEditableDataNames()$/;"	f
fuf#file#getSwitchOrder	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#getSwitchOrder()$/;"	f
fuf#file#onInit	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#onInit()$/;"	f
fuf#file#renewCache	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#renewCache()$/;"	f
fuf#file#requiresOnCommandPre	.\vimfiles\autoload\fuf\file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f
fuf#formatPrompt	.\vimfiles\autoload\fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f
fuf#getCurrentTagFiles	.\vimfiles\autoload\fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f
fuf#getDataFileTime	.\vimfiles\autoload\fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f
fuf#getFileLines	.\vimfiles\autoload\fuf.vim	/^function fuf#getFileLines(file)$/;"	f
fuf#getModeNames	.\vimfiles\autoload\fuf.vim	/^function fuf#getModeNames()$/;"	f
fuf#getRunningHandler	.\vimfiles\autoload\fuf.vim	/^function fuf#getRunningHandler()$/;"	f
fuf#givencmd#createHandler	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f
fuf#givencmd#getEditableDataNames	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f
fuf#givencmd#getSwitchOrder	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f
fuf#givencmd#launch	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givencmd#onInit	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f
fuf#givencmd#renewCache	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f
fuf#givencmd#requiresOnCommandPre	.\vimfiles\autoload\fuf\givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f
fuf#givendir#createHandler	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f
fuf#givendir#getEditableDataNames	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f
fuf#givendir#getSwitchOrder	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f
fuf#givendir#launch	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givendir#onInit	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#onInit()$/;"	f
fuf#givendir#renewCache	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#renewCache()$/;"	f
fuf#givendir#requiresOnCommandPre	.\vimfiles\autoload\fuf\givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f
fuf#givenfile#createHandler	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f
fuf#givenfile#getEditableDataNames	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f
fuf#givenfile#getSwitchOrder	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f
fuf#givenfile#launch	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givenfile#onInit	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f
fuf#givenfile#renewCache	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f
fuf#givenfile#requiresOnCommandPre	.\vimfiles\autoload\fuf\givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f
fuf#glob	.\vimfiles\autoload\fuf.vim	/^function fuf#glob(expr)$/;"	f
fuf#help#createHandler	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#createHandler(base)$/;"	f
fuf#help#getEditableDataNames	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#getEditableDataNames()$/;"	f
fuf#help#getSwitchOrder	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#getSwitchOrder()$/;"	f
fuf#help#onInit	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#onInit()$/;"	f
fuf#help#renewCache	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#renewCache()$/;"	f
fuf#help#requiresOnCommandPre	.\vimfiles\autoload\fuf\help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f
fuf#jumplist#createHandler	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f
fuf#jumplist#getEditableDataNames	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f
fuf#jumplist#getSwitchOrder	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f
fuf#jumplist#onInit	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f
fuf#jumplist#renewCache	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f
fuf#jumplist#requiresOnCommandPre	.\vimfiles\autoload\fuf\jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f
fuf#launch	.\vimfiles\autoload\fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f
fuf#line#createHandler	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#createHandler(base)$/;"	f
fuf#line#getEditableDataNames	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#getEditableDataNames()$/;"	f
fuf#line#getSwitchOrder	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#getSwitchOrder()$/;"	f
fuf#line#onInit	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#onInit()$/;"	f
fuf#line#renewCache	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#renewCache()$/;"	f
fuf#line#requiresOnCommandPre	.\vimfiles\autoload\fuf\line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f
fuf#loadDataFile	.\vimfiles\autoload\fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f
fuf#makeNonPathItem	.\vimfiles\autoload\fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f
fuf#makePathItem	.\vimfiles\autoload\fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f
fuf#makePatternSet	.\vimfiles\autoload\fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f
fuf#makePreviewLinesAround	.\vimfiles\autoload\fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f
fuf#makePreviewLinesForFile	.\vimfiles\autoload\fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f
fuf#mapToSetAbbrWithSnippedWordAsPath	.\vimfiles\autoload\fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f
fuf#mapToSetSerialIndex	.\vimfiles\autoload\fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f
fuf#mrucmd#createHandler	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f
fuf#mrucmd#getEditableDataNames	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f
fuf#mrucmd#getSwitchOrder	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f
fuf#mrucmd#onCommandPre	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f
fuf#mrucmd#onInit	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f
fuf#mrucmd#renewCache	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f
fuf#mrucmd#requiresOnCommandPre	.\vimfiles\autoload\fuf\mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f
fuf#mrufile#createHandler	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f
fuf#mrufile#getEditableDataNames	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f
fuf#mrufile#getSwitchOrder	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f
fuf#mrufile#onInit	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f
fuf#mrufile#renewCache	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f
fuf#mrufile#requiresOnCommandPre	.\vimfiles\autoload\fuf\mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f
fuf#onComplete	.\vimfiles\autoload\fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f
fuf#openBuffer	.\vimfiles\autoload\fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f
fuf#openFile	.\vimfiles\autoload\fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f
fuf#openHelp	.\vimfiles\autoload\fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f
fuf#openTag	.\vimfiles\autoload\fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f
fuf#prejump	.\vimfiles\autoload\fuf.vim	/^function fuf#prejump(mode)$/;"	f
fuf#quickfix#createHandler	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f
fuf#quickfix#getEditableDataNames	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f
fuf#quickfix#getSwitchOrder	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f
fuf#quickfix#onInit	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f
fuf#quickfix#renewCache	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f
fuf#quickfix#requiresOnCommandPre	.\vimfiles\autoload\fuf\quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f
fuf#saveDataFile	.\vimfiles\autoload\fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f
fuf#setAbbrWithFormattedWord	.\vimfiles\autoload\fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f
fuf#setOneTimeVariables	.\vimfiles\autoload\fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f
fuf#splitPath	.\vimfiles\autoload\fuf.vim	/^function fuf#splitPath(path)$/;"	f
fuf#suffixNumber	.\vimfiles\autoload\fuf.vim	/^function fuf#suffixNumber(str)$/;"	f
fuf#tag#createHandler	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#createHandler(base)$/;"	f
fuf#tag#getEditableDataNames	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f
fuf#tag#getSwitchOrder	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f
fuf#tag#onInit	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#onInit()$/;"	f
fuf#tag#renewCache	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#renewCache()$/;"	f
fuf#tag#requiresOnCommandPre	.\vimfiles\autoload\fuf\tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f
fuf#taggedfile#createHandler	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f
fuf#taggedfile#getEditableDataNames	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f
fuf#taggedfile#getSwitchOrder	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f
fuf#taggedfile#onInit	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f
fuf#taggedfile#renewCache	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f
fuf#taggedfile#requiresOnCommandPre	.\vimfiles\autoload\fuf\taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f
fuf#updateMruList	.\vimfiles\autoload\fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f
func1	.\vimfiles\voom_samples\test_outline.py	/^        def func1(a,$/;"	f	access:public
func2	.\vimfiles\voom_samples\test_outline.py	/^    def func2():$/;"	m	class:Class1	access:public
func3	.\vimfiles\voom_samples\test_outline.py	/^        def func3():$/;"	f	function:Class1.func2	access:public
func4	.\vimfiles\voom_samples\test_outline.py	/^    def func4(): pass$/;"	m	class:Class1	access:public
func4	.\vimfiles\voom_samples\test_outline.py	/^def func4(f):$/;"	f	access:public
func5	.\vimfiles\voom_samples\test_outline.py	/^    def func5():$/;"	m	class:Class2	access:public
func6	.\vimfiles\voom_samples\test_outline.py	/^        def func6():$/;"	f	function:Class2.func5	access:public
func7	.\vimfiles\voom_samples\test_outline.py	/^def func7(func):$/;"	f	access:public
func8	.\vimfiles\voom_samples\test_outline.py	/^def func8(): # <-- headline$/;"	f	access:public
func_with_string	.\vimfiles\voom_samples\test_outline.py	/^def func_with_string(a, b, c=False, d="NoName",$/;"	f	access:public
function	.\vimfiles\autoload\rails.vim	/^function! s:function(name)$/;"	f
function	.\vimfiles\plugin\abolish.vim	/^function! s:function(name)$/;"	f
function	.\vimfiles\plugin\bundler.vim	/^function! s:function(name) abort$/;"	f
function	.\vimfiles\plugin\rails.vim	/^function! s:function(name)$/;"	f
functionaltestEdit	.\vimfiles\autoload\rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestList	.\vimfiles\autoload\rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
fuzzyglob	.\vimfiles\autoload\rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g	.\vim73\macros\less.vim	/^noremap <script> g gg<SID>L$/;"	m
g%	.\vim73\macros\matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	.\vim73\macros\matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	.\vim73\macros\matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g%	.\vimfiles\plugin\matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	.\vimfiles\plugin\matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	.\vimfiles\plugin\matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:BufExplorer_title	.\vimfiles\plugin\bufexplorer.vim	/^let g:BufExplorer_title = "\\[Buf\\ List\\]"$/;"	v
g:FencCustom	.\vimfiles\plugin\fencview.vim	/^let g:FencCustom=$/;"	v
g:FileExplorer_title	.\vimfiles\plugin\winfileexplorer.vim	/^let g:FileExplorer_title = "[File List]"$/;"	v
g:GetLatestVimScripts_allowautoinstall	.\vim73\autoload\getscript.vim	/^ let g:GetLatestVimScripts_allowautoinstall= 1$/;"	v
g:GetLatestVimScripts_mv	.\vim73\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "mv"$/;"	v
g:GetLatestVimScripts_mv	.\vim73\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "ren"$/;"	v
g:GetLatestVimScripts_options	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options = ""$/;"	v
g:GetLatestVimScripts_options	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= ""$/;"	v
g:GetLatestVimScripts_options	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-q -O"$/;"	v
g:GetLatestVimScripts_options	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-s -O"$/;"	v
g:GetLatestVimScripts_wget	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget    = 'echo "GetLatestVimScripts needs wget or curl"'$/;"	v
g:GetLatestVimScripts_wget	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "curl"$/;"	v
g:GetLatestVimScripts_wget	.\vim73\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "wget"$/;"	v
g:LargeFile	.\vimfiles\plugin\LargeFile.vim	/^ let g:LargeFile= 20	" in megabytes$/;"	v
g:NERDTreeIgnore	.\vimfiles\plugin\NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeSortOrder	.\vimfiles\plugin\NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:QuickTemplateCursorFlag	.\vimfiles\plugin\QuickTemplate.vim	/^let g:QuickTemplateCursorFlag = '#cursor#'$/;"	v
g:QuickTemplatePath	.\vimfiles\plugin\QuickTemplate.vim	/^    let g:QuickTemplatePath = $VIM.'\/vimfiles\/templates\/'$/;"	v
g:ST_WIN_CMD	.\vimfiles\autoload\genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:SuperTabCompletionContexts	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrClosePreview	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabCrClosePreview = 0$/;"	v
g:SuperTabCrMapping	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	.\vimfiles\plugin\supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['\\s']$/;"	v
g:SuperTabNoCompleteAfter	.\vimfiles\plugin\supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	.\vimfiles\plugin\supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	.\vimfiles\plugin\supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	.\vimfiles\plugin\supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:TagsExplorerSkipError	.\vimfiles\plugin\wintagexplorer.vim	/^	let g:TagsExplorerSkipError = 0$/;"	v
g:TagsExplorer_title	.\vimfiles\plugin\wintagexplorer.vim	/^let g:TagsExplorer_title = "[Tag List]"$/;"	v
g:TransferChinese_Simplified	.\vimfiles\plugin\TransferChinese.vim	/^    let g:TransferChinese_Simplified = 0$/;"	v
g:VCSCOMMAND_IDENTIFY_EXACT	.\vimfiles\plugin\vcscommand.vim	/^let g:VCSCOMMAND_IDENTIFY_EXACT = 1$/;"	v
g:VCSCOMMAND_IDENTIFY_INEXACT	.\vimfiles\plugin\vcscommand.vim	/^let g:VCSCOMMAND_IDENTIFY_INEXACT = -1$/;"	v
g:abolish_save_file	.\vimfiles\plugin\abolish.vim	/^    let g:abolish_save_file = expand("<sfile>:h:h")."\/after\/plugin\/abolish.vim"$/;"	v
g:abolish_save_file	.\vimfiles\plugin\abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	.\vimfiles\plugin\abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:ada#Comment	.\vim73\autoload\ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	.\vim73\autoload\ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	.\vim73\autoload\ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	.\vim73\autoload\ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\vim73\autoload\ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\vim73\autoload\ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\vim73\autoload\ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	.\vim73\autoload\ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_default_compiler	.\vim73\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	.\vim73\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:alternateNoDefaultAlternate	.\vimfiles\plugin\a.vim	/^   let g:alternateNoDefaultAlternate = 0$/;"	v
g:alternateRelativeFiles	.\vimfiles\plugin\a.vim	/^   let g:alternateRelativeFiles = 0$/;"	v
g:alternateSearchPath	.\vimfiles\plugin\a.vim	/^  let g:alternateSearchPath = 'sfr:..\/source,sfr:..\/src,sfr:..\/include,sfr:..\/inc'$/;"	v
g:autoloaded_rails	.\vimfiles\autoload\rails.vim	/^let g:autoloaded_rails = '4.4'$/;"	v
g:bmenu_max_pathlen	.\vim73\menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:bufexplorer_version	.\vimfiles\plugin\bufexplorer.vim	/^let g:bufexplorer_version = "7.2.3"$/;"	v
g:calendar_action	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_action = "<SID>CalendarDiary"$/;"	v
g:calendar_action	.\vimfiles\plugin\vimwiki.vim	/^  let g:calendar_action = 'vimwiki_diary#calendar_action'$/;"	v
g:calendar_datetime	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_datetime = 'title'$/;"	v
g:calendar_diary	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_diary = "~\/diary"$/;"	v
g:calendar_focus_today	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_focus_today = 0$/;"	v
g:calendar_mark	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_mark = 'left'$/;"	v
g:calendar_navi	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_navi = 'top'$/;"	v
g:calendar_navi_label	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_navi_label = "Prev,Today,Next"$/;"	v
g:calendar_options	.\vimfiles\plugin\calendar.vim	/^    let g:calendar_options .= " nornu"$/;"	v
g:calendar_options	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_options="fdc=0 nonu"$/;"	v
g:calendar_sign	.\vimfiles\plugin\calendar.vim	/^  let g:calendar_sign = "<SID>CalendarSign"$/;"	v
g:calendar_sign	.\vimfiles\plugin\vimwiki.vim	/^  let g:calendar_sign = 'vimwiki_diary#calendar_sign'$/;"	v
g:calendar_version	.\vimfiles\plugin\calendar.vim	/^let g:calendar_version = "2.5"$/;"	v
g:change_color_scheme	.\vimfiles\plugin\changeColorScheme.vim	/^let g:change_color_scheme="0.3"$/;"	v
g:changelog_date_end_entry_search	.\vim73\ftplugin\changelog.vim	/^    let g:changelog_date_end_entry_search = '^\\s*$'$/;"	v
g:changelog_date_entry_search	.\vim73\ftplugin\changelog.vim	/^    let g:changelog_date_entry_search = '^\\s*%d\\_s*%u'$/;"	v
g:changelog_dateformat	.\vim73\ftplugin\changelog.vim	/^      let g:changelog_dateformat = "%Y-%m-%d"$/;"	v
g:changelog_dateformat	.\vim73\ftplugin\changelog.vim	/^      let g:changelog_dateformat = g:changelog_timeformat$/;"	v
g:changelog_new_date_format	.\vim73\ftplugin\changelog.vim	/^    let g:changelog_new_date_format = "%d  %u\\n\\n\\t* %c\\n\\n"$/;"	v
g:changelog_new_entry_format	.\vim73\ftplugin\changelog.vim	/^    let g:changelog_new_entry_format = "\\t* %c"$/;"	v
g:checksyntax	.\vimfiles\plugin\checksyntax.vim	/^let g:checksyntax = 5$/;"	v
g:checksyntax_alt_java	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_alt_java = 'javaCheckstyle'$/;"	v
g:checksyntax_alt_php	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_alt_php = 'phpp'$/;"	v
g:checksyntax_auto	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto = 1$/;"	v
g:checksyntax_auto_lua	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_lua = 1$/;"	v
g:checksyntax_auto_php	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_php = 1$/;"	v
g:checksyntax_auto_phpp	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_phpp = g:checksyntax_auto_php$/;"	v
g:checksyntax_auto_ruby	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_ruby = 0$/;"	v
g:checksyntax_auto_tex	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_tex = 0$/;"	v
g:checksyntax_auto_viki	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_auto_viki = 0$/;"	v
g:checksyntax_cmd_java	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_java = '*CheckStyleJlint'$/;"	v
g:checksyntax_cmd_javascript	.\vimfiles\plugin\checksyntax.vim	/^        let g:checksyntax_cmd_javascript = 'jsl ' . g:jslint_command_options$/;"	v
g:checksyntax_cmd_javascript	.\vimfiles\plugin\checksyntax.vim	/^        let g:checksyntax_cmd_javascript = 'jsl -nofilelisting -nocontext -nosummary -nologo -process'$/;"	v
g:checksyntax_cmd_lua	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_lua = 'luac -p'$/;"	v
g:checksyntax_cmd_php	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_php  = 'php -l'$/;"	v
g:checksyntax_cmd_phpp	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_phpp = 'php -f'$/;"	v
g:checksyntax_cmd_ruby	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_ruby = 'ruby -c'$/;"	v
g:checksyntax_cmd_tex	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_tex = 'chktex -q -v0'$/;"	v
g:checksyntax_cmd_viki	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_cmd_viki = 'deplate -f null'$/;"	v
g:checksyntax_compiler_c	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_c = 'splint'$/;"	v
g:checksyntax_compiler_cpp	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_cpp = 'splint'$/;"	v
g:checksyntax_compiler_docbk	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_docbk = g:checksyntax_compiler_xml$/;"	v
g:checksyntax_compiler_html	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_html = 'tidy'$/;"	v
g:checksyntax_compiler_javaCheckstyle	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_javaCheckstyle = 'checkstyle'$/;"	v
g:checksyntax_compiler_xml	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_compiler_xml = 'xmllint'$/;"	v
g:checksyntax_efm_lua	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_efm_lua  = 'luac\\:\\ %f:%l:\\ %m'$/;"	v
g:checksyntax_efm_php	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_efm_php  = '%*[^:]: %m in %f on line %l'$/;"	v
g:checksyntax_efm_phpp	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_efm_phpp = g:checksyntax_efm_php$/;"	v
g:checksyntax_efm_tex	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_efm_tex  = '%f:%l:%m'$/;"	v
g:checksyntax_failrx	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_failrx = '\\ *\\(\\d \\f\\{-}:\\)\\?\\d\\{-}:'$/;"	v
g:checksyntax_okrx_javascript	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_okrx_javascript = '0 error(s), 0 warning(s)'$/;"	v
g:checksyntax_okrx_php	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_okrx_php = 'No syntax errors detected in '$/;"	v
g:checksyntax_okrx_phpp	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_okrx_phpp = g:checksyntax_okrx_php$/;"	v
g:checksyntax_okrx_ruby	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_okrx_ruby = 'Syntax OK\\|No Errors'$/;"	v
g:checksyntax_use_make_cmd	.\vimfiles\plugin\checksyntax.vim	/^    let g:checksyntax_use_make_cmd = 0$/;"	v
g:colors_name	.\vim73\colors\blue.vim	/^let g:colors_name = "blue"$/;"	v
g:colors_name	.\vim73\colors\desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	.\vim73\colors\elflord.vim	/^let g:colors_name = "elflord"$/;"	v
g:colors_name	.\vim73\colors\koehler.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	.\vim73\colors\murphy.vim	/^let g:colors_name = "murphy"$/;"	v
g:colors_name	.\vim73\colors\pablo.vim	/^let g:colors_name = "pablo"$/;"	v
g:colors_name	.\vim73\colors\ron.vim	/^let g:colors_name = "ron"$/;"	v
g:colors_name	.\vim73\colors\torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	.\vim73\colors\zellner.vim	/^let g:colors_name = "zellner"$/;"	v
g:colors_name	.\vimfiles\colors\Celibate.vim	/^let g:colors_name = "Celibate"$/;"	v
g:colors_name	.\vimfiles\colors\ManShow.vim	/^let g:colors_name = "ManShow"$/;"	v
g:colors_name	.\vimfiles\colors\atom.vim	/^let g:colors_name="atom"$/;"	v
g:colors_name	.\vimfiles\colors\bandit.vim	/^let g:colors_name = "bandit"$/;"	v
g:colors_name	.\vimfiles\colors\blackboard.vim	/^let g:colors_name = "blackboard"$/;"	v
g:colors_name	.\vimfiles\colors\chela_light.vim	/^let g:colors_name="chela_light"$/;"	v
g:colors_name	.\vimfiles\colors\darkslategray.vim	/^let g:colors_name = "darkslategray"$/;"	v
g:colors_name	.\vimfiles\colors\desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	.\vimfiles\colors\dw_green.vim	/^let g:colors_name="dw_green"$/;"	v
g:colors_name	.\vimfiles\colors\lrthw.vim	/^let g:colors_name = "lrthw"$/;"	v
g:colors_name	.\vimfiles\colors\molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	.\vimfiles\colors\selenitic.vim	/^let g:colors_name='selenitic'$/;"	v
g:colors_name	.\vimfiles\colors\softblue.vim	/^let g:colors_name="softblue"$/;"	v
g:colors_name	.\vimfiles\colors\sonofobsidian.vim	/^let g:colors_name="sonofobsidian"$/;"	v
g:colors_name	.\vimfiles\colors\synic.vim	/^let g:colors_name = "synic"$/;"	v
g:colors_name	.\vimfiles\colors\vibrantink.vim	/^let g:colors_name = "vibrantink"$/;"	v
g:colors_name	.\vimfiles\colors\void.vim	/^let g:colors_name="void"$/;"	v
g:colors_name	.\vimfiles\colors\white.vim	/^let g:colors_name="white"$/;"	v
g:colors_name	.\vimfiles\colors\zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:context_include	.\vim73\syntax\context.vim	/^  let g:context_include = ['mp', 'javascript', 'xml']$/;"	v
g:ctags_command	.\vim73\menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	.\vim73\menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:cucumber_languages	.\vim73\syntax\cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:dbext_dbi_debug	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_debug = 0$/;"	v
g:dbext_dbi_max_rows	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_max_rows = 300$/;"	v
g:dbext_dbi_msg	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_msg = ""$/;"	v
g:dbext_dbi_result	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_result = -1$/;"	v
g:dbext_dbi_sql	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_sql = ""$/;"	v
g:dbext_dbi_trace_level	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_dbi_trace_level = 0$/;"	v
g:dbext_default_dbi_column_delimiter	.\vimfiles\autoload\dbext_dbi.vim	/^   let g:dbext_default_dbi_column_delimiter = "  "$/;"	v
g:dbext_default_menu_mode	.\vimfiles\plugin\dbext.vim	/^    let g:dbext_default_menu_mode = 3$/;"	v
g:dbext_rows_affected	.\vimfiles\plugin\dbext.vim	/^    let g:dbext_rows_affected = 0$/;"	v
g:debchangelog_listbugs_severities	.\vim73\ftplugin\debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishlist'$/;"	v
g:debugWinManager	.\vimfiles\plugin\winmanager.vim	/^let g:debugWinManager = 1$/;"	v
g:decada	.\vim73\compiler\decada.vim	/^   let g:decada = decada#New ()$/;"	v
g:defaultExplorer	.\vimfiles\plugin\winfileexplorer.vim	/^	let g:defaultExplorer = 1$/;"	v
g:defaultExplorer	.\vimfiles\plugin\winmanager.vim	/^	let g:defaultExplorer = 1$/;"	v
g:did_changelog_ftplugin	.\vim73\ftplugin\debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	.\vim73\ftplugin\cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ft	.\vimfiles\plugin\snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_ocaml_switch	.\vim73\ftplugin\ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	.\vim73\ftplugin\ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:did_ruby_ftplugin_functions	.\vimfiles\ftplugin\ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:doxygen_end_punctuation	.\vim73\syntax\doxygen.vim	/^      let g:doxygen_end_punctuation='[.]'$/;"	v
g:eruby_default_subtype	.\vim73\ftplugin\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	.\vim73\syntax\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	.\vimfiles\ftplugin\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	.\vimfiles\syntax\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:explDateFormat	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explDateFormat="%d %b %Y %H:%M"$/;"	v
g:explDetailedHelp	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explDetailedHelp=0$/;"	v
g:explDetailedList	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explDetailedList=0$/;"	v
g:explDirsFirst	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explDirsFirst=1$/;"	v
g:explHideFiles	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explHideFiles=''$/;"	v
g:explSortBy	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explSortBy='name'$/;"	v
g:explSplitBelow	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explSplitBelow = &splitbelow$/;"	v
g:explSplitRight	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explSplitRight = &splitright$/;"	v
g:explStartBelow	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explStartBelow = g:explSplitBelow$/;"	v
g:explStartRight	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explStartRight = g:explSplitRight$/;"	v
g:explSuffixesLast	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explSuffixesLast=1$/;"	v
g:explUseSeparators	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explUseSeparators=0$/;"	v
g:explVertical	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explVertical=0$/;"	v
g:explWinSize	.\vimfiles\plugin\winfileexplorer.vim	/^  let g:explWinSize=15$/;"	v
g:fencview_auto_patterns	.\vimfiles\plugin\fencview.vim	/^    let g:fencview_auto_patterns='*.txt,*.htm{l\\=}'$/;"	v
g:fencview_autodetect	.\vimfiles\plugin\fencview.vim	/^    let g:fencview_autodetect = 1$/;"	v
g:fencview_checklines	.\vimfiles\plugin\fencview.vim	/^    let g:fencview_checklines = 10$/;"	v
g:fencview_html_filetypes	.\vimfiles\plugin\fencview.vim	/^    let g:fencview_html_filetypes='html'$/;"	v
g:ft_ignore_pat	.\vim73\filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	.\vim73\ftplugin\sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	.\vim73\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	.\vim73\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	.\vim73\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	.\vim73\ftplugin\sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:getscript_cygwin	.\vim73\autoload\getscript.vim	/^   let g:getscript_cygwin= 0$/;"	v
g:getscript_cygwin	.\vim73\autoload\getscript.vim	/^   let g:getscript_cygwin= 1$/;"	v
g:getscript_cygwin	.\vim73\autoload\getscript.vim	/^  let g:getscript_cygwin= 0$/;"	v
g:gnat	.\vim73\compiler\gnat.vim	/^   let g:gnat = gnat#New ()$/;"	v
g:googlecodewiki_break_inside_brackets	.\vimfiles\syntax\googlecodewiki.vim	/^    let g:googlecodewiki_break_inside_brackets = 0$/;"	v
g:googlecodewiki_break_inside_graves	.\vimfiles\syntax\googlecodewiki.vim	/^    let g:googlecodewiki_break_inside_graves = 0$/;"	v
g:haml_self_closing_tags	.\vim73\indent\haml.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:is_bash	.\vim73\syntax\sh.vim	/^   let g:is_bash= 1$/;"	v
g:is_kornshell	.\vim73\syntax\sh.vim	/^   let g:is_kornshell= g:is_posix$/;"	v
g:is_ksh	.\vim73\syntax\sh.vim	/^   let g:is_ksh = 1$/;"	v
g:js_indent_log	.\vimfiles\indent\javascript.vim	/^	let g:js_indent_log = 1$/;"	v
g:legacy_encoding	.\vimfiles\plugin\fencview.vim	/^        let g:legacy_encoding=&encoding$/;"	v
g:legacy_encoding	.\vimfiles\plugin\fencview.vim	/^        let g:legacy_encoding=''$/;"	v
g:legacy_encoding	.\vimfiles\plugin\fencview.vim	/^        let g:legacy_encoding=matchstr(&fileencodings, '^ucs-bom,utf-8,\\zs[^,]\\+')$/;"	v
g:liquid_default_subtype	.\vim73\ftplugin\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	.\vim73\syntax\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	.\vim73\syntax\liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_2html_plugin	.\vim73\plugin\tohtml.vim	/^let g:loaded_2html_plugin = 'vim7.3_v10'$/;"	v
g:loaded_LargeFile	.\vimfiles\plugin\LargeFile.vim	/^let g:loaded_LargeFile = "v4"$/;"	v
g:loaded_abolish	.\vimfiles\plugin\abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_acp	.\vimfiles\plugin\acp.vim	/^let g:loaded_acp = 1$/;"	v
g:loaded_autoload_acp	.\vimfiles\autoload\acp.vim	/^let g:loaded_autoload_acp = 1$/;"	v
g:loaded_autoload_l9	.\vimfiles\autoload\l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_bundler	.\vimfiles\plugin\bundler.vim	/^let g:loaded_bundler = 1$/;"	v
g:loaded_dbext	.\vimfiles\plugin\dbext.vim	/^let g:loaded_dbext = 1300$/;"	v
g:loaded_dbext_auto	.\vimfiles\autoload\dbext.vim	/^let g:loaded_dbext_auto = 1300$/;"	v
g:loaded_dbext_dbi	.\vimfiles\autoload\dbext_dbi.vim	/^    let g:loaded_dbext_dbi = -1$/;"	v
g:loaded_dbext_dbi	.\vimfiles\autoload\dbext_dbi.vim	/^let g:loaded_dbext_dbi = 1300$/;"	v
g:loaded_dbext_dbi_msg	.\vimfiles\autoload\dbext_dbi.vim	/^    let g:loaded_dbext_dbi_msg = 'Vim does not have perl support enabled'$/;"	v
g:loaded_getscript	.\vim73\autoload\getscript.vim	/^let g:loaded_getscript= "v33"$/;"	v
g:loaded_getscriptPlugin	.\vim73\plugin\getscriptPlugin.vim	/^let g:loaded_getscriptPlugin = "v33"$/;"	v
g:loaded_matchparen	.\vim73\plugin\matchparen.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_netrw	.\vim73\autoload\netrw.vim	/^let g:loaded_netrw = "v143"$/;"	v
g:loaded_netrwFileHandlers	.\vim73\autoload\netrwFileHandlers.vim	/^let g:loaded_netrwFileHandlers= "v10"$/;"	v
g:loaded_netrwPlugin	.\vim73\plugin\netrwPlugin.vim	/^let g:loaded_netrwPlugin = "v143"$/;"	v
g:loaded_netrwSettings	.\vim73\autoload\netrwSettings.vim	/^let g:loaded_netrwSettings = "v13"$/;"	v
g:loaded_rails	.\vimfiles\plugin\rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_sql_completion	.\vim73\autoload\sqlcomplete.vim	/^let g:loaded_sql_completion = 100$/;"	v
g:loaded_syntax_completion	.\vim73\autoload\syntaxcomplete.vim	/^let g:loaded_syntax_completion = 80$/;"	v
g:loaded_tar	.\vim73\autoload\tar.vim	/^let g:loaded_tar= "v27"$/;"	v
g:loaded_tarPlugin	.\vim73\plugin\tarPlugin.vim	/^let g:loaded_tarPlugin = "v27"$/;"	v
g:loaded_vimball	.\vim73\autoload\vimball.vim	/^let g:loaded_vimball = "v34"$/;"	v
g:loaded_vimballPlugin	.\vim73\plugin\vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v34"$/;"	v
g:loaded_vimcdoc	.\vimfiles\plugin\vimcdoc.vim	/^let g:loaded_vimcdoc = 1$/;"	v
g:loaded_vimwiki_auto	.\vimfiles\autoload\vimwiki.vim	/^let g:loaded_vimwiki_auto = 1$/;"	v
g:loaded_vimwiki_diary_auto	.\vimfiles\autoload\vimwiki_diary.vim	/^let g:loaded_vimwiki_diary_auto = 1$/;"	v
g:loaded_vimwiki_html_auto	.\vimfiles\autoload\vimwiki_html.vim	/^let g:loaded_vimwiki_html_auto = 1$/;"	v
g:loaded_vimwiki_lst_auto	.\vimfiles\autoload\vimwiki_lst.vim	/^let g:loaded_vimwiki_lst_auto = 1$/;"	v
g:loaded_vimwiki_tbl_auto	.\vimfiles\autoload\vimwiki_tbl.vim	/^let g:loaded_vimwiki_tbl_auto = 1$/;"	v
g:loaded_zencoding_vim	.\vimfiles\plugin\zencoding.vim	/^let g:loaded_zencoding_vim = 1$/;"	v
g:loaded_zencoding_vim	.\vimfiles\snippets\plugin\zencoding.vim	/^let g:loaded_zencoding_vim = 1$/;"	v
g:loaded_zip	.\vim73\autoload\zip.vim	/^let g:loaded_zip= "v24"$/;"	v
g:loaded_zipPlugin	.\vim73\plugin\zipPlugin.vim	/^let g:loaded_zipPlugin = "v24"$/;"	v
g:makeArgumentList	.\vimfiles\autoload\genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	.\vimfiles\autoload\genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_choices = " &Unikso \\n &Dos \\n &Mak \\n &Rezigni "$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Peru "$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annuler "$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n¥­¥ã¥ó¥»¥ë(&C)"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nã­ã£ã³ã»ã«(&C)"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nLZ(&C)"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nï&ÔÍÅÎÁ"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nÐ&ÑÐ¼ÐµÐ½Ð°"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&PrekliÄi"$/;"	v
g:menutrans_fileformat_choices	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Há»§y bá»"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccioneu el format per escriure el fitxer."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_fileformat_dialog = "Wählen Sie ein Datei-Format aus"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Elektu la formaton de la skribonta dosiero."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccione el formato para escribir el archivo"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_dialog = "Anaa tiedoston kirjoitusmuoto."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_dialog = "Choisissez le format dans lequel écrire le fichier."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Válaszd ki a fájl formátumát"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_fileformat_dialog = "VÃ¡laszd ki a fÃ¡jl formÃ¡tumÃ¡t"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_fileformat_dialog = "Scegli formato con cui scrivere il file"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_dialog = "¥Õ¥¡¥¤¥ë½ÐÎÏ¤ÎºÝ¤Î²þ¹Ôµ­¹æ¤Î·Á¼°¤òÁª¤ó¤Ç¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ãã¡ã¤ã«åºåã®éã®æ¹è¡è¨å·ã®å½¢å¼ãé¸ãã§ãã ãã."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_dialog = "t@CoÍÌÛÌüsLÌ`®ðIñÅ­¾³¢."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_fileformat_dialog = "Selecteer formaat voor het schrijven van het bestand"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_fileformat_dialog = "Velg filformat som filen skal lagres med"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w ktÃ³rym ten plik ma byÄ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_dialog = "÷ÙÂÅÒÉÔÅ ÆÏÒÍÁÔ ÆÁÊÌÁ."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_dialog = "ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ°Ð¹Ð»Ð°."$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_dialog = "¸×ÐÑÕàØâÕ Òàáâã ÔÐâÞâÕÚÕ"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ÐÐ·Ð°Ð±ÐµÑÐ¸ÑÐµ Ð²ÑÑÑÑ Ð´Ð°ÑÐ¾ÑÐµÐºÐµ"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_sv_se.latin1.vim	/^let g:menutrans_fileformat_dialog = "Välj filformat som filen ska sparas med"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_fileformat_dialog = "Âèáåð³òü ôîðìàò ôàéëó"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_fileformat_dialog = "÷ÉÂÅÒ¦ÔØ ÆÏÒÍÁÔ ÆÁÊÌÕ"$/;"	v
g:menutrans_fileformat_dialog	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_dialog = "HÃ£y chá»n Äá»nh dáº¡ng táº­p tin."$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduïu el terme sobre el qual necessiteu ajuda.\\n\\nUseu el prefix i_ per ordres d'entrada (p.ex.: i_CTRL-X)\\nUseu el prefix c_ per ordres de la línia d'ordres (p.ex.: c_<Del>)\\nUseu el prefix ' per noms d'opcions (p.ex.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_help_dialog = "Geben Sie einen Befehl oder ein Wort ein, für das Sie Hilfe benötigen:\\n\\nVerwenden Sie i_ für Eingabe ('input') Befehle (z.B.: i_CTRL-X)\\nVerwenden Sie c_ für Befehls-Zeilen ('command-line') Befehle (z.B.: c_<Del>)\\nVerwenden Sie ' für Options-Namen (z.B.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_help_dialog = "Tajpu komandon aÅ­ serÄendan vorton en la helparo.\\n\\nAldonu i_ por la komandoj de la enmeta reÄimo (ekz: i_CTRL-X)\\nAldonu c_ por redakto de la komanda linio (ekz: c_<Del>)\\nÄirkaÅ­i la opciojn per apostrofoj (ekz: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduzca un nombre de comando o palabra para obtener ayuda;\\n\\nAnteponga i_ para comandos de entrada (e.g.: i_CTRL-X)\\nAnteponga c_ para comandos de la línea de comandos (e.g.: c_<Del>)\\nAnteponga ` para un nombre de opción (e.g.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_help_dialog = "Anna komento tai sana, jota haetaan ohjeesta.\\n\\nAloita i_:llä syöttötilan komentoja varten (esim. i_CTRL-X)\\nAloita c_:llä komentoriviä varten (esim. c_<Del>)\\nKirjoita asetukset puolilainausmerkkeijin (esim. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_help_dialog = "Entrez une commande ou un mot à rechercher dans l'aide.\\n\\nAjoutez i_ pour les commandes du mode Insertion (ex: i_CTRL-X)\\nAjoutez c_ pour l'édition de la ligne de commande (ex: c_<Del>)\\nEntourez les options avec des apostrophes (ex: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_help_dialog = "Batti un comando o una parola per cercare aiuto:\\n\\nPremetti i_ per comandi in modo Input (ad.es.: i_CTRL-X)\\nPremetti c_ per comandi che editano la linea-comandi (ad.es.: c_<Del>)\\nPremetti ' per un nome di opzione (ad.es.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_help_dialog = "¥Ø¥ë¥×¤ò¸¡º÷¤·¤¿¤¤¥³¥Þ¥ó¥É¤â¤·¤¯¤ÏÃ±¸ì¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n\\nÁÞÆþ¥â¡¼¥É¤Î¥³¥Þ¥ó¥É¤Ë¤Ï i_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: i_CTRL-X)\\n¥³¥Þ¥ó¥É¥é¥¤¥óÊÔ½¸¥³¥Þ¥ó¥É¤Ë¤Ï c_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: c_<Del>)\\n¥ª¥×¥·¥ç¥ó¤ÎÌ¾Á°¤Ë¤Ï ' ¤òÉÕ²Ã¤·¤Þ¤¹. (Îã: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_help_dialog = "ãã«ããæ¤ç´¢ãããã³ãã³ããããã¯åèªãå¥åãã¦ãã ãã:\\n\\næ¿å¥ã¢ã¼ãã®ã³ãã³ãã«ã¯ i_ ãåé ­ã«ä»å ãã¾ã. (ä¾: i_CTRL-X)\\nã³ãã³ãã©ã¤ã³ç·¨éã³ãã³ãã«ã¯ c_ ãåé ­ã«ä»å ãã¾ã. (ä¾: c_<Del>)\\nãªãã·ã§ã³ã®ååã«ã¯ ' ãä»å ãã¾ã. (ä¾: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_help_dialog = "wvðõµ½¢R}hàµ­ÍPêðüÍµÄ­¾³¢:\\n\\n}ü[hÌR}hÉÍ i_ ðæªÉtÁµÜ·. (á: i_CTRL-X)\\nR}hCÒWR}hÉÍ c_ ðæªÉtÁµÜ·. (á: c_<Del>)\\nIvVÌ¼OÉÍ ' ðtÁµÜ·. (á: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_help_dialog = "Skriv en kommando eller ord du vil ha hjelp om:\\n\\nLegg til i_ i begynnelsen for inndatametoder (f.eks.: i_CTRL-X)\\nLegg til c_ i begynnelsen for kommandoer som redigerer kommandolinjen (f.eks.: c_<Del>)\\nLegg til ' i begynnelsen for et valgnavn (f.eks.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_help_dialog = "÷×ÅÄÉÔÅ ËÏÍÁÎÄÕ ÉÌÉ ÓÌÏ×Ï ÄÌÑ ÐÏÉÓËÁ:\\n\\näÏÂÁ×ØÔÅ i_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ÒÅÖÉÍÁ ÷ÓÔÁ×ËÉ (ÎÁÐÒÉÍÅÒ, i_CTRL-X)\\näÏÂÁ×ØÔÅ c_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ïÂÙÞÎÏÇÏ ÒÅÖÉÍÁ (ÎÁÐÒÉÍÅÒ, Ó_<Del>)\\näÏÂÁ×ØÔÅ ' ÄÌÑ ÐÏÉÓËÁ ÓÐÒÁ×ËÉ ÐÏ ÏÐÃÉÉ (ÎÁÐÒÉÍÅÒ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_help_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð¸Ð»Ð¸ ÑÐ»Ð¾Ð²Ð¾ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ°:\\n\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ i_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÑÐµÐ¶Ð¸Ð¼Ð° ÐÑÑÐ°Ð²ÐºÐ¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, i_CTRL-X)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ c_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÐÐ±ÑÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, Ñ_<Del>)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ ' Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ¿ÑÐ°Ð²ÐºÐ¸ Ð¿Ð¾ Ð¾Ð¿ÑÐ¸Ð¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero ¾elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero Å¾elite pomoÄ:\\n\\nUporabite predpono i_ za ukaze v naÄinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_help_dialog = "HÃ£y nháº­p cÃ¢u lá»nh hoáº·c tá»« khÃ³a tÃ¬m kiáº¿m:\\n\\nThÃªm i_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» Nháº­p Input (VÃ­ dá»¥, i_CTRL-X)\\nThÃªm c_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» soáº¡n tháº£o dÃ²ng lá»nh (VÃ­ dá»¥, Ñ_<Del>)\\nThÃªm ' Äá» tÃ¬m kiáº¿m trá»£ giÃºp cho má»t tÃ¹y chá»n (vÃ­ dá»¥, 'shiftwidth')"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_no_file = "[Cap fitxer]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_no_file = "[Keine Datei]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_no_file = "[Neniu dosiero]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_no_file = "[Sin archivo]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_no_file = "[Ei tiedostoja]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_no_file = "[Aucun fichier]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_no_file = "[Senza nome]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_no_file = "[ÌµÂê]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_no_file = "[ç¡é¡]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_no_file = "[³è]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_no_file = "[Uten navn]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduïu les ubicacions on cercar fitxers.\\nSepareu els noms dels directoris amb una coma."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_path_dialog = "Geben Sie Such-Pfade für Dateien ein.\\nTrennen Sie die Verzeichnis-Namen durch Kommata."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_path_dialog = "Tajpu la vojon de serÄo de dosieroj.\\nDisigu la dosierujojn per komoj."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduzca la ruta de búsqueda para los archivos.\\nSepare los nombres de los directorios con una coma."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_path_dialog = "Anna tiedostojen hakupolku.\\nErota hakemistot pilkuin."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_path_dialog = "Entrez le chemin de recherche des fichiers.\\nSéparez les répertoires par des virgules."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Írd be a keresett fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_path_dialog = "Ãrd be a keresett fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_path_dialog = "Batti percorso di ricerca per i file.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_path_dialog = "¥Õ¥¡¥¤¥ë¤Î¸¡º÷¥Ñ¥¹¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_path_dialog = "ãã¡ã¤ã«ã®æ¤ç´¢ãã¹ãå¥åãã¦ãã ãã:\\nãã£ã¬ã¯ããªåã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_path_dialog = "t@CÌõpXðüÍµÄ­¾³¢:\\nfBNg¼ÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_path_dialog = "Typ het zoekpad voor bestanden.\\nGebruik commas tussen de padnamen."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_path_dialog = "Skriv søkesti for filer.\\nSkill katalognavn med komma."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Wprowad¼ ¶cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_path_dialog = "WprowadÅº ÅcieÅ¼kÄ poszukiwania plikÃ³w.\\nProszÄ rozdzielaÄ nazwy katalogÃ³w przecinkiem."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_polish_poland.1250.vim	/^let g:menutrans_path_dialog = "Wprowad cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_path_dialog = "õËÁÖÉÔÅ ÐÕÔØ ÄÌÑ ÐÏÉÓËÁ ÆÁÊÌÏ×.\\néÍÅÎÁ ËÁÔÁÌÏÇÏ× ÒÁÚÄÅÌÑÀÔÓÑ ÚÁÐÑÔÙÍÉ."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_path_dialog = "Ð£ÐºÐ°Ð¶Ð¸ÑÐµ Ð¿ÑÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ°Ð¹Ð»Ð¾Ð².\\nÐÐ¼ÐµÐ½Ð° ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ð¾Ð² ÑÐ°Ð·Ð´ÐµÐ»ÑÑÑÑÑ Ð·Ð°Ð¿ÑÑÑÐ¼Ð¸."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loÄite z vejico."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_path_dialog = "ÃÝÕáØâÕ ßãâ ßàÕâàÐÓÕ ×Ð ÔÐâÞâÕÚÕ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ ÔØàÕÚâÞàØøãÜÐ."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_path_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¿ÑÑ Ð¿ÑÐµÑÑÐ°Ð³Ðµ Ð·Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð° Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸ÑÑÐ¼Ð°."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_sv_se.latin1.vim	/^let g:menutrans_path_dialog = "Skriv in sökväg för filer.\\nSeparera katalognamn med komma"$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_path_dialog = "Âêàæ³òü øëÿõ ïîøóêó ôàéë³â\\nÐîçä³ëÿéòå íàçâè äèðåêòîð³é êîìàìè."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_path_dialog = "÷ËÁÖ¦ÔØ ÛÌÑÈ ÐÏÛÕËÕ ÆÁÊÌ¦×\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ÄÉÒÅËÔÏÒ¦Ê ËÏÍÁÍÉ."$/;"	v
g:menutrans_path_dialog	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_path_dialog = "HÃ£y chá» ra ÄÆ°á»ng dáº«n Äá» tÃ¬m kiáº¿m táº­p tin.\\nTÃªn cá»§a thÆ° má»¥c phÃ¢n cÃ¡ch nhau bá»i dáº¥u pháº©y."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduïu els noms dels fitxers d'etiquetes.\\nSepareu els noms amb una coma."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_tags_dialog = "Geben Sie die Namen der 'tag'-Dateien ein.\\nTrennen Sie die Namen durch Kommata."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_tags_dialog = "Tajpu la nomojn de dosieroj de etikedoj.\\nDisigu la nomojn per komoj."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduzca los nombres de los archivos de tags.\\nSepare los nombres con una coma."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_tags_dialog = "Anna tägitiedostojen nimet.\\nErota tidostot pilkuin."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_tags_dialog = "Entrez les noms des fichiers d'étiquettes.\\nSéparez les noms par des virgules."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Írd be a tag fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_tags_dialog = "Ãrd be a tag fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_tags_dialog = "Batti nome dei file di tag.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_tags_dialog = "¥¿¥°¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\nÌ¾Á°¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_tags_dialog = "ã¿ã°ãã¡ã¤ã«ã®ååãå¥åãã¦ãã ãã:\\nååã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_tags_dialog = "^Ot@CÌ¼OðüÍµÄ­¾³¢:\\n¼OÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_tags_dialog = "Typ namen van tag bestanden.\\nGebruik commas tussen de namen."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_tags_dialog = "Skriv navn på tagfiler.\\nSkill navnene med komma."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plikÃ³w tagÃ³w.\\nProszÄ rozdzielaÄ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_polish_poland.1250.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_tags_dialog = "÷×ÅÄÉÔÅ ÉÍÅÎÁ ÆÁÊÌÏ× ÍÅÔÏË (ÞÅÒÅÚ ÚÁÐÑÔÕÀ).\\n"$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_tags_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° ÑÐ°Ð¹Ð»Ð¾Ð² Ð¼ÐµÑÐ¾Ðº (ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ).\\n"$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaÄkami ('tag').\\nImana loÄite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_tags_dialog = "ÃÝÕáØâÕ ØÜÕÝÐ ÔÐâÞâÕÚÐ áÐ Þ×ÝÐÚÐÜÐ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_tags_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐ° ÑÐ° Ð¾Ð·Ð½Ð°ÐºÐ°Ð¼Ð°\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð°."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_sv_se.latin1.vim	/^let g:menutrans_tags_dialog = "Skriv in namn på taggfiler.\\nSeparera namn med komma."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_tags_dialog = "Âêàæ³òü íàçâè ôàéë³â ïîì³òîê\\nÐîçä³ëÿéòå íàçâè êîìàìè."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_tags_dialog = "÷ËÁÖ¦ÔØ ÎÁÚ×É ÆÁÊÌ¦× ÐÏÍ¦ÔÏË\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ËÏÍÁÍÉ."$/;"	v
g:menutrans_tags_dialog	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_tags_dialog = "Nháº­p tÃªn táº­p tin tháº» ghi (phÃ¢n cÃ¡ch bá»i dáº¥u pháº©y).\\n"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_ca_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduïu la nova amplada del text (0 per infinit): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_de_de.latin1.vim	/^let g:menutrans_textwidth_dialog = "Geben Sie eine neue Text-Breite ein (oder 0, um die Formatierung abzuschalten)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_eo.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Tajpu la novan larÄon de teksto\\n(0 por malÅalti formatigon)."$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_es_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduzca el nuevo ancho del texto (0 para desactivar el quiebre de línea): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_textwidth_dialog = "Anna uusi tekstin leveys\\n(0 poistaa käytöstä)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_textwidth_dialog = "Entrez la nouvelle largeur du texte\\n(0 pour désactiver le formattage)."$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Írd be a szöveg szélességét (0 = formázás kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ãrd be a szÃ¶veg szÃ©lessÃ©gÃ©t (0 = formÃ¡zÃ¡s kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_it_it.latin1.vim	/^let g:menutrans_textwidth_dialog = "Batti nuova lunghezza linea (0 per inibire la formattazione): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_textwidth_dialog = "¥Æ¥­¥¹¥È¤ÎÉý('textwidth')¤òÀßÄê¤·¤Æ¤¯¤À¤µ¤¤ (0¤ÇÀ°·Á¤òÌµ¸ú²½):"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_textwidth_dialog = "ãã­ã¹ãã®å¹('textwidth')ãè¨­å®ãã¦ãã ãã (0ã§æ´å½¢ãç¡å¹å):"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_japanese_japan.932.vim	/^let g:menutrans_textwidth_dialog = "eLXgÌ('textwidth')ðÝèµÄ­¾³¢ (0Å®`ð³ø»):"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_textwidth_dialog = "Typ de nieuwe tekst breedte (0 om formatteren uit the schakelen): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_no_no.latin1.vim	/^	let g:menutrans_textwidth_dialog = "Velg ny tekstbredde (0 for å forhindre formatering): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Wprowad¼ now± szeroko¶æ tekstu (0 wy³±cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_textwidth_dialog = "WprowadÅº nowÄ szerokoÅÄ tekstu (0 wyÅÄcza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_polish_poland.1250.vim	/^let g:menutrans_textwidth_dialog = "Wprowad now¹ szerokoæ tekstu (0 wy³¹cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_pt_br.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_pt_pt.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_textwidth_dialog = "÷×ÅÄÉÔÅ ÛÉÒÉÎÕ ÔÅËÓÔÁ ÄÌÑ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ.\\näÌÑ ÏÔÍÅÎÙ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ ××ÅÄÉÔÅ 0."$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_ru_ru.vim	/^let g:menutrans_textwidth_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° Ð´Ð»Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ.\\nÐÐ»Ñ Ð¾ÑÐ¼ÐµÐ½Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð²Ð²ÐµÐ´Ð¸ÑÐµ 0."$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sl_si.latin2.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo ¹irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo Å¡irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu sirinu teksta (0 sprecava prelom)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu ¹irinu teksta (0 spreèava prelom)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_textwidth_dialog = "ÃÝÕáØâÕ ÝÞÒã èØàØÝã âÕÚáâÐ (0 áßàÕçÐÒÐ ßàÕÛÞÜ)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð¾Ð²Ñ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° (0 ÑÐ¿ÑÐµÑÐ°Ð²Ð° Ð¿ÑÐµÐ»Ð¾Ð¼)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_sv_se.latin1.vim	/^let g:menutrans_textwidth_dialog = "Välj ny textbredd (0 för att förhindra formatering): "$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_textwidth_dialog = "Âêàæ³òü íîâó øèðèíó òåêñòó (0 äëÿ â³äì³íè ôîìàòóâàííÿ)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_textwidth_dialog = "÷ËÁÖ¦ÔØ ÎÏ×Õ ÛÉÒÉÎÕ ÔÅËÓÔÕ (0 ÄÌÑ ×¦ÄÍ¦ÎÉ ÆÏÍÁÔÕ×ÁÎÎÑ)"$/;"	v
g:menutrans_textwidth_dialog	.\vim73\lang\menu_vi_vn.vim	/^let g:menutrans_textwidth_dialog = "HÃ£y nháº­p chiá»u rá»ng vÄn báº£n má»i.\\nNháº­p 0 Äá» há»§y bá»."$/;"	v
g:netrw_cursor	.\vim73\autoload\netrw.vim	/^ let g:netrw_cursor= g:netrw_cursorline$/;"	v
g:netrw_cygwin	.\vim73\autoload\netrw.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\vim73\autoload\netrw.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\vim73\autoload\netrw.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\vim73\autoload\tar.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\vim73\autoload\tar.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\vim73\autoload\tar.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\vim73\autoload\vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\vim73\autoload\vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\vim73\autoload\vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_dav_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "cadaver"$/;"	v
g:netrw_dav_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "curl"$/;"	v
g:netrw_dav_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_dav_cmd   = ""$/;"	v
g:netrw_fetch_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= ""$/;"	v
g:netrw_fetch_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= "fetch -o"$/;"	v
g:netrw_ftp_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_cmd	= "ftp"$/;"	v
g:netrw_ftp_list_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "dir"$/;"	v
g:netrw_ftp_list_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "ls -lF"$/;"	v
g:netrw_ftp_sizelist_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "dir"$/;"	v
g:netrw_ftp_sizelist_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "ls -slF"$/;"	v
g:netrw_ftp_timelist_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "dir"$/;"	v
g:netrw_ftp_timelist_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "ls -tlF"$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd	= ""$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "curl"$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "fetch"$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "wget"$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd = "elinks"$/;"	v
g:netrw_http_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_http_cmd = "links"$/;"	v
g:netrw_ignorenetrc	.\vim73\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_ignorenetrc	.\vim73\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 1$/;"	v
g:netrw_list_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_list_cmd= ""$/;"	v
g:netrw_list_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME:"$/;"	v
g:netrw_list_cmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa"$/;"	v
g:netrw_list_cmd	.\vim73\autoload\netrw.vim	/^ let g:netrw_list_cmd= g:netrw_list_cmd." -l"$/;"	v
g:netrw_liststyle	.\vim73\autoload\netrw.vim	/^ let g:netrw_liststyle= s:THINLIST$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\netrw.vim	/^   let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\netrw.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\tar.vim	/^    let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\tar.vim	/^    let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\tar.vim	/^   let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	.\vim73\autoload\tar.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localmovecmd	.\vim73\autoload\netrw.vim	/^   let g:netrw_localmovecmd= "move"$/;"	v
g:netrw_localmovecmd	.\vim73\autoload\netrw.vim	/^   let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_localmovecmd= ""$/;"	v
g:netrw_localmovecmd	.\vim73\autoload\netrw.vim	/^  let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_scp_cmd	.\vim73\autoload\netrw.vim	/^   let g:netrw_scp_cmd ="pscp -i C:\\\\private.ppk"$/;"	v
g:netrw_sort_sequence	.\vim73\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:netrw_sort_sequence	.\vim73\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\<core\\%(\\.\\d\\+\\)\\=\\>,\\.h$,\\.c$,\\.cpp$,\\~\\=\\*$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:numRefs	.\vimfiles\plugin\winmanager.vim	/^let g:numRefs = 0$/;"	v
g:omni_sql_ignorecase	.\vim73\autoload\sqlcomplete.vim	/^    let g:omni_sql_ignorecase = &ignorecase$/;"	v
g:omni_sql_include_owner	.\vim73\autoload\sqlcomplete.vim	/^            let g:omni_sql_include_owner = 1$/;"	v
g:omni_sql_include_owner	.\vim73\autoload\sqlcomplete.vim	/^    let g:omni_sql_include_owner = 0$/;"	v
g:omni_sql_precache_syntax_groups	.\vim73\autoload\sqlcomplete.vim	/^    let g:omni_sql_precache_syntax_groups = [$/;"	v
g:omni_sql_use_tbl_alias	.\vim73\autoload\sqlcomplete.vim	/^    let g:omni_sql_use_tbl_alias = 'a'$/;"	v
g:omni_syntax_group_exclude_lifelines	.\vim73\syntax\lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_ignorecase	.\vim73\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_minimum_length	.\vim73\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_use_iskeyword	.\vim73\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:persistentBehaviour	.\vimfiles\plugin\winmanager.vim	/^	let g:persistentBehaviour = 1$/;"	v
g:r_indent_align_args	.\vim73\indent\r.vim	/^    let g:r_indent_align_args = 1$/;"	v
g:r_indent_comment_column	.\vim73\indent\r.vim	/^    let g:r_indent_comment_column = 40$/;"	v
g:r_indent_ess_comments	.\vim73\indent\r.vim	/^    let g:r_indent_ess_comments = 0$/;"	v
g:r_indent_ess_compatible	.\vim73\indent\r.vim	/^    let g:r_indent_ess_compatible = 0$/;"	v
g:rainbow_delimiter_colours_defined	.\vimfiles\colors\bandit.vim	/^let g:rainbow_delimiter_colours_defined = 1$/;"	v
g:rubycomplete_buffer_loading	.\vim73\autoload\rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_buffer_loading	.\vimfiles\autoload\rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	.\vim73\autoload\rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_classes_in_global	.\vimfiles\autoload\rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	.\vim73\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_object	.\vimfiles\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	.\vim73\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_include_objectspace	.\vimfiles\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	.\vim73\autoload\rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rubycomplete_rails	.\vimfiles\autoload\rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:saveTagsDisplay	.\vimfiles\plugin\wintagexplorer.vim	/^	let g:saveTagsDisplay = 1$/;"	v
g:sh_fold_enabled	.\vim73\syntax\sh.vim	/^ let g:sh_fold_enabled= 0$/;"	v
g:spell_clean_limit	.\vim73\spell\cleanadd.vim	/^  let g:spell_clean_limit = 1$/;"	v
g:spellfile_URL	.\vim73\autoload\spellfile.vim	/^    let g:spellfile_URL = 'ftp:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:spellfile_URL	.\vim73\autoload\spellfile.vim	/^    let g:spellfile_URL = 'http:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:tar_browseoptions	.\vim73\autoload\tar.vim	/^ let g:tar_browseoptions= "Ptf"$/;"	v
g:tar_cmd	.\vim73\autoload\tar.vim	/^ let g:tar_cmd= "tar"$/;"	v
g:tar_copycmd	.\vim73\autoload\tar.vim	/^ let g:tar_copycmd= g:netrw_localcopycmd$/;"	v
g:tar_extractcmd	.\vim73\autoload\tar.vim	/^ let g:tar_extractcmd= "tar -xf"$/;"	v
g:tar_readoptions	.\vim73\autoload\tar.vim	/^ let g:tar_readoptions= "OPxf"$/;"	v
g:tar_shq	.\vim73\autoload\tar.vim	/^   let g:tar_shq= "'"$/;"	v
g:tar_shq	.\vim73\autoload\tar.vim	/^   let g:tar_shq= '"'$/;"	v
g:tar_shq	.\vim73\autoload\tar.vim	/^  let g:tar_shq= "'"$/;"	v
g:tar_shq	.\vim73\autoload\tar.vim	/^  let g:tar_shq= &shq$/;"	v
g:tar_writeoptions	.\vim73\autoload\tar.vim	/^ let g:tar_writeoptions= "uf"$/;"	v
g:tex_comment_nospell	.\vim73\syntax\tex.vim	/^ let g:tex_comment_nospell= 1$/;"	v
g:tex_fold_enabled	.\vim73\syntax\tex.vim	/^ let g:tex_fold_enabled= 0$/;"	v
g:tex_indent_and	.\vim73\indent\tex.vim	/^    let g:tex_indent_and = 1$/;"	v
g:tex_indent_brace	.\vim73\indent\tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	.\vim73\indent\tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_itemize_env	.\vim73\indent\tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	.\vim73\indent\tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item' $/;"	v
g:tex_items	.\vim73\indent\tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	.\vim73\indent\tex.vim	/^let g:tex_items = '^\\s*' . g:tex_items$/;"	v
g:tex_no_error	.\vim73\syntax\tex.vim	/^ let g:tex_no_error= 1$/;"	v
g:tex_noindent_env	.\vim73\indent\tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:tohtml#charset_to_encoding	.\vim73\autoload\tohtml.vim	/^let g:tohtml#charset_to_encoding = {$/;"	v
g:tohtml#encoding_to_charset	.\vim73\autoload\tohtml.vim	/^let g:tohtml#encoding_to_charset = {$/;"	v
g:user_zen_leader_key	.\vimfiles\plugin\zencoding.vim	/^  let g:user_zen_leader_key = '<c-y>'$/;"	v
g:user_zen_leader_key	.\vimfiles\snippets\plugin\zencoding.vim	/^  let g:user_zen_leader_key = '<c-y>'$/;"	v
g:vhdl_indent_genportmap	.\vim73\indent\vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	.\vim73\indent\vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vimball_mkdir	.\vim73\autoload\vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	.\vim73\autoload\vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	.\vim73\autoload\vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimsyn_embed	.\vim73\syntax\vim.vim	/^ let g:vimsyn_embed= "lmpPr"$/;"	v
g:vimsyn_maxlines	.\vim73\syntax\vim.vim	/^ let g:vimsyn_maxlines= g:vim_maxlines$/;"	v
g:vimsyn_minlines	.\vim73\syntax\vim.vim	/^ let g:vimsyn_minlines= g:vim_minlines$/;"	v
g:vimsyn_noerror	.\vim73\syntax\vim.vim	/^ let g:vimsyn_noerror= g:vimsyntax_noerror$/;"	v
g:vimwiki_rxBold	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
g:vimwiki_rxBold	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxBold = "'''[^']\\\\+'''"$/;"	v
g:vimwiki_rxBoldItalic	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxBoldItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
g:vimwiki_rxBoldItalic	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxBoldItalic = "'''''[^']\\\\+'''''"$/;"	v
g:vimwiki_rxCode	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxCode = '`[^`]\\+`'$/;"	v
g:vimwiki_rxCode	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxCode = '`[^`]\\+`'$/;"	v
g:vimwiki_rxDelText	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxDelText = '\\~\\~[^~`]\\+\\~\\~'$/;"	v
g:vimwiki_rxDelText	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxDelText = '\\~\\~[^~]\\+\\~\\~'$/;"	v
g:vimwiki_rxH1	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH1 = '^\\s*=\\{1}[^=]\\+.*[^=]\\+=\\{1}\\s*$'$/;"	v
g:vimwiki_rxH1	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH1 = '^\\s*=\\{1}[^=]\\+.*[^=]\\+=\\{1}\\s*$'$/;"	v
g:vimwiki_rxH2	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH2 = '^\\s*=\\{2}[^=]\\+.*[^=]\\+=\\{2}\\s*$'$/;"	v
g:vimwiki_rxH2	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH2 = '^\\s*=\\{2}[^=]\\+.*[^=]\\+=\\{2}\\s*$'$/;"	v
g:vimwiki_rxH3	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH3 = '^\\s*=\\{3}[^=]\\+.*[^=]\\+=\\{3}\\s*$'$/;"	v
g:vimwiki_rxH3	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH3 = '^\\s*=\\{3}[^=]\\+.*[^=]\\+=\\{3}\\s*$'$/;"	v
g:vimwiki_rxH4	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH4 = '^\\s*=\\{4}[^=]\\+.*[^=]\\+=\\{4}\\s*$'$/;"	v
g:vimwiki_rxH4	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH4 = '^\\s*=\\{4}[^=]\\+.*[^=]\\+=\\{4}\\s*$'$/;"	v
g:vimwiki_rxH5	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH5 = '^\\s*=\\{5}[^=]\\+.*[^=]\\+=\\{5}\\s*$'$/;"	v
g:vimwiki_rxH5	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH5 = '^\\s*=\\{5}[^=]\\+.*[^=]\\+=\\{5}\\s*$'$/;"	v
g:vimwiki_rxH6	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxH6 = '^\\s*=\\{6}[^=]\\+.*[^=]\\+=\\{6}\\s*$'$/;"	v
g:vimwiki_rxH6	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxH6 = '^\\s*=\\{6}[^=]\\+.*[^=]\\+=\\{6}\\s*$'$/;"	v
g:vimwiki_rxHR	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxHR = '^----.*$'$/;"	v
g:vimwiki_rxHR	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxHR = '^----.*$'$/;"	v
g:vimwiki_rxHeader	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxHeader = '\\%('.g:vimwiki_rxH1.'\\)\\|'.$/;"	v
g:vimwiki_rxHeader	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxHeader = '\\%('.g:vimwiki_rxH1.'\\)\\|'.$/;"	v
g:vimwiki_rxItalic	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
g:vimwiki_rxItalic	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxItalic = "''[^']\\\\+''"$/;"	v
g:vimwiki_rxItalicBold	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxItalicBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
g:vimwiki_rxItalicBold	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxItalicBold = g:vimwiki_rxBoldItalic$/;"	v
g:vimwiki_rxListBullet	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxListBullet = '^\\s*\\%(\\*\\|-\\)\\s'$/;"	v
g:vimwiki_rxListBullet	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxListBullet = '^\\s*\\*\\+\\([^*]*$\\)\\@='$/;"	v
g:vimwiki_rxListDefine	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxListDefine = '::\\(\\s\\|$\\)'$/;"	v
g:vimwiki_rxListDefine	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxListDefine = '^\\%(;\\|:\\)\\s'$/;"	v
g:vimwiki_rxListNumber	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxListNumber = '^\\s*#\\s'$/;"	v
g:vimwiki_rxListNumber	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxListNumber = '^\\s*#\\+'$/;"	v
g:vimwiki_rxNoWikiWord	.\vimfiles\plugin\vimwiki.vim	/^let g:vimwiki_rxNoWikiWord = '!'.wword$/;"	v
g:vimwiki_rxPreEnd	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxPreEnd = '}}}'$/;"	v
g:vimwiki_rxPreEnd	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxPreEnd = '<\\\/pre>'$/;"	v
g:vimwiki_rxPreStart	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxPreStart = '{{{'$/;"	v
g:vimwiki_rxPreStart	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxPreStart = '<pre>'$/;"	v
g:vimwiki_rxSubScript	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxSubScript = ',,[^,`]\\+,,'$/;"	v
g:vimwiki_rxSubScript	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxSubScript = ',,[^,]\\+,,'$/;"	v
g:vimwiki_rxSuperScript	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxSuperScript = '\\^[^^`]\\+\\^'$/;"	v
g:vimwiki_rxSuperScript	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxSuperScript = '\\^[^^]\\+\\^'$/;"	v
g:vimwiki_rxTable	.\vimfiles\syntax\vimwiki_default.vim	/^let g:vimwiki_rxTable = '||'$/;"	v
g:vimwiki_rxTable	.\vimfiles\syntax\vimwiki_media.vim	/^let g:vimwiki_rxTable = '||'$/;"	v
g:vimwiki_rxTodo	.\vimfiles\syntax\vimwiki.vim	/^let g:vimwiki_rxTodo = '\\C\\%(TODO:\\|DONE:\\|STARTED:\\|FIXME:\\|FIXED:\\|XXX:\\)'$/;"	v
g:vimwiki_rxWeblink	.\vimfiles\plugin\vimwiki.vim	/^let g:vimwiki_rxWeblink = '\\%("[^"(]\\+\\((\\([^)]\\+\\))\\)\\?":\\)\\?'.$/;"	v
g:vimwiki_rxWikiLink	.\vimfiles\plugin\vimwiki.vim	/^  let g:vimwiki_rxWikiLink = g:vimwiki_rxWikiLink1.'\\|'.g:vimwiki_rxWikiLink2$/;"	v
g:vimwiki_rxWikiLink	.\vimfiles\plugin\vimwiki.vim	/^  let g:vimwiki_rxWikiLink = g:vimwiki_rxWikiWord.'\\|'.$/;"	v
g:vimwiki_rxWikiLink1	.\vimfiles\plugin\vimwiki.vim	/^let g:vimwiki_rxWikiLink1 = '\\[\\[[^\\]]\\+\\]\\]'$/;"	v
g:vimwiki_rxWikiLink2	.\vimfiles\plugin\vimwiki.vim	/^let g:vimwiki_rxWikiLink2 = '\\[\\[[^\\]]\\+\\]\\[[^\\]]\\+\\]\\]'$/;"	v
g:vimwiki_rxWikiWord	.\vimfiles\plugin\vimwiki.vim	/^let g:vimwiki_rxWikiWord = '!\\@<!'.wword$/;"	v
g:voom_log_height	.\vimfiles\plugin\voom.vim	/^    let g:voom_log_height = 12$/;"	v
g:voom_log_placement	.\vimfiles\plugin\voom.vim	/^    let g:voom_log_placement = 'bottom'$/;"	v
g:voom_log_width	.\vimfiles\plugin\voom.vim	/^    let g:voom_log_width = 30$/;"	v
g:voom_return_key	.\vimfiles\plugin\voom.vim	/^    let g:voom_return_key = '<Return>'$/;"	v
g:voom_rstrip_chars_autohotkey	.\vimfiles\voom_addons\custom_headlines.vim	/^    let g:voom_rstrip_chars_autohotkey = "; \\t"$/;"	v
g:voom_rstrip_chars_help	.\vimfiles\plugin\voom.vim	/^    let g:voom_rstrip_chars_help = " \\t"$/;"	v
g:voom_rstrip_chars_text	.\vimfiles\plugin\voom.vim	/^    let g:voom_rstrip_chars_text = " \\t"$/;"	v
g:voom_rstrip_chars_vim	.\vimfiles\plugin\voom.vim	/^    let g:voom_rstrip_chars_vim = "\\"# \\t"$/;"	v
g:voom_tab_key	.\vimfiles\plugin\voom.vim	/^    let g:voom_tab_key = '<Tab>'$/;"	v
g:voom_tree_height	.\vimfiles\plugin\voom.vim	/^    let g:voom_tree_height = 12$/;"	v
g:voom_tree_placement	.\vimfiles\plugin\voom.vim	/^    let g:voom_tree_placement = 'left'$/;"	v
g:voom_tree_width	.\vimfiles\plugin\voom.vim	/^    let g:voom_tree_width = 30$/;"	v
g:voom_verify_oop	.\vimfiles\plugin\voom.vim	/^    let g:voom_verify_oop = 1$/;"	v
g:winManagerWidth	.\vimfiles\plugin\winmanager.vim	/^	let g:winManagerWidth = 25$/;"	v
g:winManagerWindowLayout	.\vimfiles\plugin\winmanager.vim	/^	let g:winManagerWindowLayout = "FileExplorer,TagsExplorer|BufExplorer"$/;"	v
g:x	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^let g:x = b:cocoa_proj$/;"	v
g:xmldata_html32	.\vim73\autoload\xml\html32.vim	/^let g:xmldata_html32 = {$/;"	v
g:xmldata_html401s	.\vim73\autoload\xml\html401s.vim	/^let g:xmldata_html401s = {$/;"	v
g:xmldata_html401t	.\vim73\autoload\xml\html401f.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html401t	.\vim73\autoload\xml\html401t.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html40s	.\vim73\autoload\xml\html40s.vim	/^let g:xmldata_html40s = {$/;"	v
g:xmldata_html40t	.\vim73\autoload\xml\html40f.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html40t	.\vim73\autoload\xml\html40t.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_xhtml10f	.\vim73\autoload\xml\xhtml10f.vim	/^let g:xmldata_xhtml10f = {$/;"	v
g:xmldata_xhtml10s	.\vim73\autoload\xml\xhtml10s.vim	/^let g:xmldata_xhtml10s = {$/;"	v
g:xmldata_xhtml10t	.\vim73\autoload\xml\xhtml10t.vim	/^let g:xmldata_xhtml10t = {$/;"	v
g:xmldata_xhtml11	.\vim73\autoload\xml\xhtml11.vim	/^let g:xmldata_xhtml11 = {$/;"	v
g:xmldata_xsd	.\vim73\autoload\xml\xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xmldata_xsl	.\vim73\autoload\xml\xsl.vim	/^let g:xmldata_xsl = {$/;"	v
g:zenburn_alternate_Error	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_alternate_Error = 0$/;"	v
g:zenburn_alternate_Include	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_alternate_Include = 0$/;"	v
g:zenburn_alternate_Visual	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_alternate_Visual = 0$/;"	v
g:zenburn_color_also_Ignore	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_color_also_Ignore = 0$/;"	v
g:zenburn_disable_ctags_highlighting_support	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_disable_ctags_highlighting_support = 0$/;"	v
g:zenburn_force_dark_Background	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_force_dark_Background = 0$/;"	v
g:zenburn_high_Contrast	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_high_Contrast = 0$/;"	v
g:zenburn_old_Visual	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_old_Visual = 0$/;"	v
g:zenburn_unified_CursorColumn	.\vimfiles\colors\zenburn.vim	/^    let g:zenburn_unified_CursorColumn = 0$/;"	v
g:zencoding_curl_command	.\vimfiles\snippets\plugin\zencoding.vim	/^  let g:zencoding_curl_command = 'curl -s -L'$/;"	v
g:zencoding_debug	.\vimfiles\plugin\zencoding.vim	/^  let g:zencoding_debug = 0$/;"	v
g:zencoding_debug	.\vimfiles\snippets\plugin\zencoding.vim	/^  let g:zencoding_debug = 0$/;"	v
g:zip_shq	.\vim73\autoload\zip.vim	/^  let g:zip_shq= "'"$/;"	v
g:zip_shq	.\vim73\autoload\zip.vim	/^  let g:zip_shq= &shq$/;"	v
g:zip_shq	.\vim73\autoload\zip.vim	/^  let g:zip_shq= '"'$/;"	v
g:zip_unzipcmd	.\vim73\autoload\zip.vim	/^ let g:zip_unzipcmd= "unzip"$/;"	v
g:zip_zipcmd	.\vim73\autoload\zip.vim	/^ let g:zip_zipcmd= "zip"$/;"	v
g<C-]>	.\vim73\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	.\vim73\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<C-]>	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g<C-]>	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g<LeftMouse>	<C-RightMouse>	.\vim73\macros\swapmous.vim	/^noremap	 g<LeftMouse>	<C-RightMouse>$/;"	m
g<RightMouse>	<C-LeftMouse>	.\vim73\macros\swapmous.vim	/^noremap	 g<RightMouse>	<C-LeftMouse>$/;"	m
gS	.\vimfiles\plugin\TransferChinese.vim	/^map gS  Hmt``mz:GoSimplifiedChinese<CR>`tzt`z$/;"	m
gT	.\vimfiles\plugin\TransferChinese.vim	/^map gT  Hmt``mz:GoTraditionalChinese<CR>`tzt`z$/;"	m
g]	.\vim73\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
gdb_minlines	.\vim73\syntax\gdb.vim	/^  let gdb_minlines = 10$/;"	v
gdzie	.\vim73\tutor\tutor.pl	/^  gdzie:$/;"	l
gecos_name	.\vim73\ftplugin\changelog.vim	/^  function! s:gecos_name(login)$/;"	f
generate_suffix_groups	.\vim73\syntax\hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
generate_syntax_file	.\vimfiles\lib\extras\build_syntaxfile.py	/^def generate_syntax_file():$/;"	f	access:public
genutils#AddNotifyWindowClose	.\vimfiles\autoload\genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	.\vimfiles\autoload\genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	.\vimfiles\autoload\genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	.\vimfiles\autoload\genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	.\vimfiles\autoload\genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	.\vimfiles\autoload\genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	.\vimfiles\autoload\genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	.\vimfiles\autoload\genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	.\vimfiles\autoload\genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	.\vimfiles\autoload\genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	.\vimfiles\autoload\genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	.\vimfiles\autoload\genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	.\vimfiles\autoload\genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	.\vimfiles\autoload\genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	.\vimfiles\autoload\genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWinNoEa	.\vimfiles\autoload\genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CloseWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CmpByLength	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	.\vimfiles\autoload\genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	.\vimfiles\autoload\genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	.\vimfiles\autoload\genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CrUnProtectedCharsPattern	.\vimfiles\autoload\genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CreateArgString	.\vimfiles\autoload\genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CurLineHasSign	.\vimfiles\autoload\genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DeEscape	.\vimfiles\autoload\genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DebugShowArgs	.\vimfiles\autoload\genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DefFCShellInstall	.\vimfiles\autoload\genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	.\vimfiles\autoload\genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	.\vimfiles\autoload\genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	.\vimfiles\autoload\genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	.\vimfiles\autoload\genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	.\vimfiles\autoload\genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	.\vimfiles\autoload\genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	.\vimfiles\autoload\genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	.\vimfiles\autoload\genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	.\vimfiles\autoload\genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	.\vimfiles\autoload\genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	.\vimfiles\autoload\genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	.\vimfiles\autoload\genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	.\vimfiles\autoload\genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	.\vimfiles\autoload\genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	.\vimfiles\autoload\genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	.\vimfiles\autoload\genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	.\vimfiles\autoload\genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	.\vimfiles\autoload\genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	.\vimfiles\autoload\genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	.\vimfiles\autoload\genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	.\vimfiles\autoload\genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	.\vimfiles\autoload\genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	.\vimfiles\autoload\genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	.\vimfiles\autoload\genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	.\vimfiles\autoload\genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	.\vimfiles\autoload\genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	.\vimfiles\autoload\genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	.\vimfiles\autoload\genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	.\vimfiles\autoload\genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	.\vimfiles\autoload\genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	.\vimfiles\autoload\genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	.\vimfiles\autoload\genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	.\vimfiles\autoload\genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	.\vimfiles\autoload\genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	.\vimfiles\autoload\genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	.\vimfiles\autoload\genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	.\vimfiles\autoload\genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	.\vimfiles\autoload\genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	.\vimfiles\autoload\genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	.\vimfiles\autoload\genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	.\vimfiles\autoload\genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	.\vimfiles\autoload\genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	.\vimfiles\autoload\genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	.\vimfiles\autoload\genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserFileComplete	.\vimfiles\autoload\genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileExpand	.\vimfiles\autoload\genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
getAuthor	.\vim73\ftplugin\debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
getBufIndicator	.\vimfiles\autoload\fuf\buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	.\vimfiles\autoload\fuf\changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	.\vimfiles\autoload\fuf\help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getCurrentText	.\vimfiles\autoload\acp.vim	/^function s:getCurrentText()$/;"	f
getCurrentWord	.\vimfiles\autoload\acp.vim	/^function s:getCurrentWord()$/;"	f
getEditableDataFiles	.\vimfiles\autoload\fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getField	.\vim73\ftplugin\debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
getFileType	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	.\vimfiles\autoload\fuf\help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	.\vimfiles\autoload\fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	.\vimfiles\autoload\fuf\help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	.\vimfiles\autoload\fuf\tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getMatchingSnipItems	.\vimfiles\autoload\acp.vim	/^function s:getMatchingSnipItems(base)$/;"	f
getPath	.\vimfiles\plugin\NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getPostText	.\vimfiles\autoload\acp.vim	/^function s:getPostText()$/;"	f
getSelectedBookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:getSelectedBookmark()$/;"	f
getSiblingsGroups	.\vimfiles\plugin\voom\voom.py	/^def getSiblingsGroups(VO, siblings): #{{{2$/;"	f	access:public
getSnippedHead	.\vimfiles\autoload\fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	.\vimfiles\autoload\fuf\tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getTreeWinNum	.\vimfiles\plugin\NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
getWordBoundaries	.\vimfiles\autoload\fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_aligned_rows	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:get_aligned_rows(lnum, col1, col2) "{{{$/;"	f
get_base_level	.\vimfiles\ftplugin\vimwiki.vim	/^function! s:get_base_level(lnum) "{{{$/;"	f
get_body_indent	.\vimfiles\plugin\voom\voom_mode_python.py	/^def get_body_indent(body):$/;"	f	access:public
get_cell_max_lens	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:get_cell_max_lens(lnum) "{{{$/;"	f
get_child_items	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_child_items(lnum) "{{{$/;"	f
get_classes	.\vimfiles\lib\extras\build_syntaxfile.py	/^def get_classes(header_files):$/;"	f	access:public
get_classes	.\vimfiles\lib\extras\cocoa_classes.py	/^def get_classes(header_files_and_frameworks):$/;"	f	access:public
get_constants	.\vimfiles\lib\extras\cocoa_definitions.py	/^def get_constants(header_files):$/;"	f	access:public
get_content	.\vimfiles\autoload\zencoding.vim	/^function! s:get_content(region)$/;"	f
get_content	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:get_content(region)$/;"	f
get_content_from_url	.\vimfiles\autoload\zencoding.vim	/^function! s:get_content_from_url(url)$/;"	f
get_content_from_url	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:get_content_from_url(url, utf8)$/;"	f
get_cwd_sessionnames	.\vimfiles\plugin\gsession.vim	/^fun! s:get_cwd_sessionnames()$/;"	f
get_date_link	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:get_date_link(fmt) "{{{$/;"	f
get_diary_range	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:get_diary_range(lines, header) "{{{$/;"	f
get_file_contents	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:get_file_contents(file_name) "{{{$/;"	f
get_functions	.\vimfiles\lib\extras\cocoa_definitions.py	/^def get_functions(header_files):$/;"	f	access:public
get_global_sessionnames	.\vimfiles\plugin\gsession.vim	/^fun! s:get_global_sessionnames()$/;"	f
get_html_footer	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:get_html_footer() "{{{$/;"	f
get_html_header	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:get_html_header(wikifile, subdir, charset) "{{{$/;"	f
get_html_toc	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:get_html_toc(toc_list) "{{{$/;"	f
get_indent	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:get_indent(lnum) "{{{$/;"	f
get_level	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_level(lnum) "{{{$/;"	f
get_li_level	.\vimfiles\ftplugin\vimwiki.vim	/^function! s:get_li_level(lnum) "{{{$/;"	f
get_li_pos	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_li_pos(lnum) "{{{$/;"	f
get_links	.\vimfiles\autoload\vimwiki.vim	/^function! s:get_links(pat) "{{{$/;"	f
get_links	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:get_links() "{{{$/;"	f
get_lnums_from_tokenize	.\vimfiles\plugin\voom\voom_mode_python.py	/^def get_lnums_from_tokenize(blines):$/;"	f	access:public
get_method_name	.\vimfiles\lib\extras\cocoa_methods.py	/^def get_method_name(line):$/;"	f	access:public
get_methods	.\vimfiles\lib\extras\cocoa_methods.py	/^def get_methods(headers):$/;"	f	access:public
get_new_ad	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def get_new_ad(levels_ads, ads_levels, level):$/;"	f	access:public
get_next_token	.\vimfiles\plugin\jsbeautify.vim	/^function! s:get_next_token()$/;"	f
get_notifications	.\vimfiles\lib\extras\cocoa_definitions.py	/^def get_notifications(header_files):$/;"	f	access:public
get_parent_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_parent_item(lnum) "{{{$/;"	f
get_protocol_classes	.\vimfiles\lib\extras\build_syntaxfile.py	/^def get_protocol_classes(header_files):$/;"	f	access:public
get_rows	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:get_rows(lnum) "{{{$/;"	f
get_sibling_items	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_sibling_items(lnum) "{{{$/;"	f
get_start_list	.\vimfiles\ftplugin\vimwiki.vim	/^function! s:get_start_list(rx_item, lnum) "{{{$/;"	f
get_state	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:get_state(lnum) "{{{$/;"	f
get_superclasses	.\vimfiles\lib\extras\cocoa_classes.py	/^def get_superclasses(classes_and_frameworks):$/;"	f	access:public
get_text_from_html	.\vimfiles\autoload\zencoding.vim	/^function! s:get_text_from_html(buf)$/;"	f
get_text_from_html	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:get_text_from_html(buf)$/;"	f
get_types	.\vimfiles\lib\extras\cocoa_definitions.py	/^def get_types(header_files):$/;"	f	access:public
get_values	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:get_values(line) "{{{$/;"	f
get_vim_encoding	.\vimfiles\plugin\voom\voom.py	/^def get_vim_encoding(): #{{{2$/;"	f	access:public
get_visualblock	.\vimfiles\autoload\zencoding.vim	/^function! s:get_visualblock()$/;"	f
get_visualblock	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:get_visualblock()$/;"	f
get_wiki_buffers	.\vimfiles\autoload\vimwiki.vim	/^function! s:get_wiki_buffers() "{{{$/;"	f
get_word_at_cursor	.\vimfiles\autoload\vimwiki.vim	/^function! s:get_word_at_cursor(wikiRX) "{{{$/;"	f
getcurrentfunction	.\vimfiles\plugin\functionlist.vim	/^function! s:getcurrentfunction()$/;"	f
getopt	.\vimfiles\autoload\rails.vim	/^function! s:getopt(opt,...)$/;"	f
getoutput	.\vimfiles\lib\extras\cocoa_classes.py	/^from commands import getoutput$/;"	i
getpidfor	.\vimfiles\autoload\rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
getscript#GetLatestVimScripts	.\vim73\autoload\getscript.vim	/^fun! getscript#GetLatestVimScripts()$/;"	f
gf	.\vimfiles\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	.\vimfiles\ftplugin\ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
gitFunctions.Add	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Add(argList)$/;"	f
gitFunctions.Annotate	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Annotate(argList)$/;"	f
gitFunctions.Commit	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Commit(argList)$/;"	f
gitFunctions.Delete	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Delete(argList)$/;"	f
gitFunctions.Diff	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Diff(argList)$/;"	f
gitFunctions.GetBufferInfo	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.GetBufferInfo()$/;"	f
gitFunctions.Identify	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Identify(buffer)$/;"	f
gitFunctions.Log	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Log(argList)$/;"	f
gitFunctions.Revert	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Revert(argList)$/;"	f
gitFunctions.Review	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Review(argList)$/;"	f
gitFunctions.Status	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Status(argList)$/;"	f
gitFunctions.Update	.\vimfiles\plugin\vcsgit.vim	/^function! s:gitFunctions.Update(argList)$/;"	f
gitdiffcached	.\vim73\ftplugin\gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
gitdiffcached	.\vimfiles\ftplugin\gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
gnat#Find	.\vim73\autoload\gnat.vim	/^function gnat#Find () dict					     " {{{1$/;"	f
gnat#Get_Command	.\vim73\autoload\gnat.vim	/^function gnat#Get_Command (Command) dict			     " {{{1$/;"	f
gnat#Insert_Tags_Header	.\vim73\autoload\gnat.vim	/^function gnat#Insert_Tags_Header ()				  " {{{1$/;"	f
gnat#Make	.\vim73\autoload\gnat.vim	/^function gnat#Make () dict					     " {{{1$/;"	f
gnat#New	.\vim73\autoload\gnat.vim	/^function gnat#New ()						     " {{{1$/;"	f
gnat#Pretty	.\vim73\autoload\gnat.vim	/^function gnat#Pretty () dict					     " {{{1$/;"	f
gnat#Set_Project_File	.\vim73\autoload\gnat.vim	/^function gnat#Set_Project_File (...) dict			     " {{{1$/;"	f
gnat#Set_Session	.\vim73\autoload\gnat.vim	/^function gnat#Set_Session (...) dict				     " {{{1$/;"	f
gnat#Tags	.\vim73\autoload\gnat.vim	/^function gnat#Tags () dict					     " {{{1$/;"	f
goback_to_previous_size	.\vimfiles\plugin\functionlist.vim	/^function! s:goback_to_previous_size()$/;"	f
googlecodewiki#FormatExpr	.\vimfiles\syntax\googlecodewiki.vim	/^function googlecodewiki#FormatExpr()$/;"	f
got_x_error	.\vim73\tools\xcmdsrv_client.c	/^static int	got_x_error = FALSE;$/;"	v	file:
gotocommandmode	.\vimfiles\plugin\functionlist.vim	/^function! s:gotocommandmode()$/;"	f
gqq	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> gqq :VimwikiTableAlignQ<CR>$/;"	m
grep_command	.\vimfiles\plugin\abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
groovy_minlines	.\vim73\syntax\groovy.vim	/^  let groovy_minlines = 10$/;"	v
gsession_eliminate_all	.\vimfiles\plugin\gsession.vim	/^fun! s:gsession_eliminate_all()$/;"	f
gsession_eliminate_current	.\vimfiles\plugin\gsession.vim	/^fun! s:gsession_eliminate_current()$/;"	f
gsession_make	.\vimfiles\plugin\gsession.vim	/^fun! s:gsession_make()$/;"	f
gsub	.\vimfiles\autoload\rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	.\vimfiles\plugin\bundler.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	.\vimfiles\plugin\rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gui	.\vimfiles\colors\bandit.vim	/^		let gui = s:colours['GUI']$/;"	v
gui	.\vimfiles\colors\bandit.vim	/^		let gui='NONE'$/;"	v
guibg	.\vimfiles\colors\bandit.vim	/^		let guibg = s:colours['GUIBG']$/;"	v
guibg	.\vimfiles\colors\bandit.vim	/^		let guibg='NONE'$/;"	v
guifg	.\vimfiles\colors\bandit.vim	/^		let guifg = s:colours['GUIFG']$/;"	v
guifg	.\vimfiles\colors\bandit.vim	/^		let guifg='NONE'$/;"	v
guisp	.\vimfiles\colors\bandit.vim	/^		let guisp = s:colours['GUISP']$/;"	v
guisp	.\vimfiles\colors\bandit.vim	/^		let guisp='NONE'$/;"	v
gww	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> gww :VimwikiTableAlignW<CR>$/;"	m
gx	.\vim73\plugin\netrwPlugin.vim	/^  nmap <unique> gx <Plug>NetrwBrowseX$/;"	m
gzip	.\vim73\plugin\gzip.vim	/^augroup gzip$/;"	a
gzip	.\vimfiles\lib\extras\cocoa_methods.py	/^import re, os, gzip$/;"	i
gzip#appre	.\vim73\autoload\gzip.vim	/^fun gzip#appre(cmd)$/;"	f
gzip#read	.\vim73\autoload\gzip.vim	/^fun gzip#read(cmd)$/;"	f
gzip#write	.\vim73\autoload\gzip.vim	/^fun gzip#write(cmd)$/;"	f
h	.\vim73\macros\less.vim	/^noremap h :call <SID>Help()<CR>$/;"	m
handleFailedAssersion	.\vimfiles\plugin\l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleMiddleMouse	.\vimfiles\plugin\NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handlerBase.addStat	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase.concretize	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase.existsPrompt	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase.getMatchingCompleteItems	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase.onBs	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase.onComplete	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase.onCr	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase.onCursorMovedI	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase.onDeleteWord	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase.onInsertLeave	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase.onPreviewBase	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase.onRecallPattern	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase.onSwitchMatching	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase.onSwitchMode	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase.removePrompt	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase.restorePrompt	.\vimfiles\autoload\fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
has_abs_path	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:has_abs_path(fname) "{{{$/;"	f
headline1_match	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^headline1_match = re.compile(r'^ *(=+)([^=].*[^=]|[^=])(\\1)(\\[[\\w-]*\\])?\\s*$').match$/;"	v
headline2_match	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^headline2_match = re.compile(r'^ *(\\++)([^+].*[^+]|[^+])(\\1)(\\[[\\w-]*\\])?\\s*$').match$/;"	v
headline_match	.\vimfiles\plugin\voom\voom_mode_viki.py	/^headline_match = re.compile(r'^(\\*+)\\s').match$/;"	v
headline_match	.\vimfiles\plugin\voom\voom_mode_vimwiki.py	/^headline_match = re.compile(r'^\\s*(=+).+(\\1)\\s*$').match$/;"	v
headline_match	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^headline_match = re.compile(r'^(=+).*(\\1)\\s*$').match$/;"	v
headline_search	.\vimfiles\plugin\voom\voom_mode_html.py	/^headline_search = re.compile(r'<\\s*h(\\d+).*?>(.*?)<\/h(\\1)\\s*>', re.IGNORECASE).search$/;"	v
helperEdit	.\vimfiles\autoload\rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperList	.\vimfiles\autoload\rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helpermethods	.\vimfiles\autoload\rails.vim	/^function! s:helpermethods()$/;"	f
hgFunctions.Add	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Add(argList)$/;"	f
hgFunctions.Annotate	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Annotate(argList)$/;"	f
hgFunctions.Commit	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Commit(argList)$/;"	f
hgFunctions.Delete	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Delete(argList)$/;"	f
hgFunctions.Diff	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Diff(argList)$/;"	f
hgFunctions.GetBufferInfo	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.GetBufferInfo()$/;"	f
hgFunctions.Identify	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Identify(buffer)$/;"	f
hgFunctions.Info	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Info(argList)$/;"	f
hgFunctions.Log	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Log(argList)$/;"	f
hgFunctions.Revert	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Revert(argList)$/;"	f
hgFunctions.Review	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Review(argList)$/;"	f
hgFunctions.Status	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Status(argList)$/;"	f
hgFunctions.Update	.\vimfiles\plugin\vcshg.vim	/^function! s:hgFunctions.Update(argList)$/;"	f
highlightError	.\vimfiles\autoload\fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	.\vimfiles\autoload\fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
highlight_types	.\vim73\syntax\spup.vim	/^    let highlight_types = 1$/;"	v
highlighttest	.\vim73\syntax\hitest.vim	/^aug highlighttest$/;"	a
hook_changeLevBodyHead	.\vimfiles\plugin\voom\voom_mode_html.py	/^def hook_changeLevBodyHead(VO, h, levDelta):$/;"	f	access:public
hook_changeLevBodyHead	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^def hook_changeLevBodyHead(VO, h, levDelta):$/;"	f	access:public
hook_changeLevBodyHead	.\vimfiles\plugin\voom\voom_mode_viki.py	/^def hook_changeLevBodyHead(VO, h, levDelta):$/;"	f	access:public
hook_changeLevBodyHead	.\vimfiles\plugin\voom\voom_mode_vimwiki.py	/^def hook_changeLevBodyHead(VO, h, levDelta):$/;"	f	access:public
hook_changeLevBodyHead	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^def hook_changeLevBodyHead(VO, h, levDelta):$/;"	f	access:public
hook_doBodyAfterOop	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^def hook_doBodyAfterOop(VO, oop, levDelta, blnum1, tlnum1, blnum2, tlnum2, blnumCut, tlnumCut):$/;"	f	access:public
hook_doBodyAfterOop	.\vimfiles\plugin\voom\voom_mode_python.py	/^def hook_doBodyAfterOop(VO, oop, levDelta, blnum1, tlnum1, blnum2, tlnum2, blnumCut, tlnumCut):$/;"	f	access:public
hook_doBodyAfterOop	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def hook_doBodyAfterOop(VO, oop, levDelta, blnum1, tlnum1, blnum2, tlnum2, blnumCut, tlnumCut):$/;"	f	access:public
hook_doBodyAfterOop	.\vimfiles\plugin\voom\voom_mode_thevimoutliner.py	/^def hook_doBodyAfterOop(VO, oop, levDelta, blnum1, tlnum1, blnum2, tlnum2, blnumCut, tlnumCut):$/;"	f	access:public
hook_doBodyAfterOop	.\vimfiles\plugin\voom\voom_mode_vimoutliner.py	/^def hook_doBodyAfterOop(VO, oop, levDelta, blnum1, tlnum1, blnum2, tlnum2, blnumCut, tlnumCut):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_html.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_python.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_thevimoutliner.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_viki.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_vimoutliner.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_vimwiki.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_makeOutline	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^def hook_makeOutline(VO, blines):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_html.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_python.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_thevimoutliner.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_viki.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_vimoutliner.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_vimwiki.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hook_newHeadline	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^def hook_newHeadline(VO, level, blnum, tlnum):$/;"	f	access:public
hostname	.\vim73\ftplugin\changelog.vim	/^  function! s:hostname()$/;"	f
hs_highlight_boolean	.\vimfiles\colors\solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	.\vimfiles\colors\solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
html_no_rendering	.\vim73\syntax\spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
html_tag_sub	.\vimfiles\plugin\voom\voom_mode_html.py	/^html_tag_sub = re.compile('<.*?>').sub$/;"	v
htmlcomplete#CheckDoctype	.\vim73\autoload\htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CheckDoctype	.\vimfiles\autoload\htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	.\vim73\autoload\htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#CompleteTags	.\vimfiles\autoload\htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadData	.\vim73\autoload\htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
htmlcomplete#LoadData	.\vimfiles\autoload\htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
http	.\vim73\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/viedyt.htm$/;"	l
http	.\vim73\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/vilek.htm$/;"	l
i	.\vim73\ftplugin\html.vim	/^        let i += 1$/;"	v
i	.\vim73\ftplugin\html.vim	/^    let i = 1$/;"	v
i	.\vim73\syntax\xpm.vim	/^   let i = i + 1$/;"	v
i	.\vim73\syntax\xpm.vim	/^let i      = 1$/;"	v
i	.\vim73\syntax\xpm2.vim	/^    let i = i + 1$/;"	v
i	.\vim73\syntax\xpm2.vim	/^  let i      = 1$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^      let i = i+1$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = 1$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#000000', 'black')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#000080', 'navy')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00008B','DarkBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#0000CD','MediumBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#0000ff', 'blue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#006400','DarkGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#008000', 'green')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#008080', 'teal')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#008B8B','DarkCyan')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00BFFF','DeepSkyBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00CED1','DarkTurquoise')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00FA9A','MediumSpringGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00FF7F','SpringGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00FFFF','Cyan')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00ff00', 'lime')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#00ffff', 'aqua')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#191970','MidnightBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#1E90FF','DodgerBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#20B2AA','LightSeaGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#228B22','ForestGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#2E8B57','SeaGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#2F4F4F','DarkSlateGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#2F4F4F','DarkSlateGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#32CD32','LimeGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#3CB371','MediumSeaGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#40E0D0','Turquoise')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#4169E1','RoyalBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#4682B4','SteelBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#483D8B','DarkSlateBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#48D1CC','MediumTurquoise')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#4B0082','Indigo')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#556B2F','DarkOliveGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#5F9EA0','CadetBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#6495ED','CornflowerBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#66CDAA','MediumAquaMarine')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#696969','DimGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#696969','DimGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#6A5ACD','SlateBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#6B8E23','OliveDrab')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#708090','SlateGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#708090','SlateGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#778899','LightSlateGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#778899','LightSlateGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#7B68EE','MediumSlateBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#7CFC00','LawnGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#7FFF00','Chartreuse')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#7FFFD4','Aquamarine')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#800000', 'maroon')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#800080', 'purple')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#808000', 'olive')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#808080', 'gray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#808080','Grey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#87CEEB','SkyBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#87CEFA','LightSkyBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#8A2BE2','BlueViolet')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#8B0000','DarkRed')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#8B008B','DarkMagenta')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#8B4513','SaddleBrown')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#8FBC8F','DarkSeaGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#90EE90','LightGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#9370D8','MediumPurple')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#9400D3','DarkViolet')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#98FB98','PaleGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#9932CC','DarkOrchid')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#9ACD32','YellowGreen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#A0522D','Sienna')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#A52A2A','Brown')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#A9A9A9','DarkGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#A9A9A9','DarkGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ADD8E6','LightBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ADFF2F','GreenYellow')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#AFEEEE','PaleTurquoise')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#B0C4DE','LightSteelBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#B0E0E6','PowderBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#B22222','FireBrick')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#B8860B','DarkGoldenRod')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#BA55D3','MediumOrchid')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#BC8F8F','RosyBrown')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#BDB76B','DarkKhaki')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#C71585','MediumVioletRed')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#CD5C5C','IndianRed')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#CD853F','Peru')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D2691E','Chocolate')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D2B48C','Tan')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D3D3D3','LightGray')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D3D3D3','LightGrey')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D87093','PaleVioletRed')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#D8BFD8','Thistle')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DA70D6','Orchid')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DAA520','GoldenRod')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DC143C','Crimson')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DCDCDC','Gainsboro')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DDA0DD','Plum')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#DEB887','BurlyWood')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#E0FFFF','LightCyan')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#E6E6FA','Lavender')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#E9967A','DarkSalmon')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#EE82EE','Violet')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#EEE8AA','PaleGoldenRod')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F08080','LightCoral')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F0E68C','Khaki')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F0F8FF','AliceBlue')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F0FFF0','HoneyDew')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F0FFFF','Azure')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F4A460','SandyBrown')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F5DEB3','Wheat')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F5F5DC','Beige')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F5F5F5','WhiteSmoke')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F5FFFA','MintCream')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#F8F8FF','GhostWhite')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FA8072','Salmon')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FAEBD7','AntiqueWhite')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FAF0E6','Linen')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FAFAD2','LightGoldenRodYellow')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FDF5E6','OldLace')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF00FF','Magenta')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF1493','DeepPink')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF4500','OrangeRed')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF6347','Tomato')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF69B4','HotPink')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF7F50','Coral')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FF8C00','Darkorange')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFA07A','LightSalmon')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFB6C1','LightPink')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFC0CB','Pink')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFD700','Gold')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFDAB9','PeachPuff')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFDEAD','NavajoWhite')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4B5','Moccasin')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4C4','Bisque')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4E1','MistyRose')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFEBCD','BlanchedAlmond')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFEFD5','PapayaWhip')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF0F5','LavenderBlush')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF5EE','SeaShell')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF8DC','Cornsilk')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFACD','LemonChiffon')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFAF0','FloralWhite')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFAFA','Snow')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFFE0','LightYellow')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFFF0','Ivory')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#c0c0c0', 'silver')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ff0000', 'red')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ff00ff', 'fuchsia')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ffA500', 'orange')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ffff00', 'yellow')$/;"	v
i	.\vimfiles\after\syntax\css.vim	/^   let i = s:SetNamedColor('#ffffff', 'white')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#000000', 'black')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#000080', 'navy')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00008B','DarkBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#0000CD','MediumBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#0000ff', 'blue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#006400','DarkGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#008000', 'green')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#008080', 'teal')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#008B8B','DarkCyan')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00BFFF','DeepSkyBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00CED1','DarkTurquoise')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00FA9A','MediumSpringGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00FF7F','SpringGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00FFFF','Cyan')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00ff00', 'lime')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#00ffff', 'aqua')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#191970','MidnightBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#1E90FF','DodgerBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#20B2AA','LightSeaGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#228B22','ForestGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#2E8B57','SeaGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#2F4F4F','DarkSlateGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#2F4F4F','DarkSlateGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#32CD32','LimeGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#3CB371','MediumSeaGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#40E0D0','Turquoise')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#4169E1','RoyalBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#4682B4','SteelBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#483D8B','DarkSlateBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#48D1CC','MediumTurquoise')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#4B0082','Indigo')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#556B2F','DarkOliveGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#5F9EA0','CadetBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#6495ED','CornflowerBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#66CDAA','MediumAquaMarine')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#696969','DimGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#696969','DimGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#6A5ACD','SlateBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#6B8E23','OliveDrab')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#708090','SlateGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#708090','SlateGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#778899','LightSlateGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#778899','LightSlateGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#7B68EE','MediumSlateBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#7CFC00','LawnGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#7FFF00','Chartreuse')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#7FFFD4','Aquamarine')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#800000', 'maroon')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#800080', 'purple')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#808000', 'olive')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#808080', 'gray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#808080','Grey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#87CEEB','SkyBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#87CEFA','LightSkyBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#8A2BE2','BlueViolet')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#8B0000','DarkRed')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#8B008B','DarkMagenta')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#8B4513','SaddleBrown')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#8FBC8F','DarkSeaGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#90EE90','LightGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#9370D8','MediumPurple')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#9400D3','DarkViolet')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#98FB98','PaleGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#9932CC','DarkOrchid')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#9ACD32','YellowGreen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#A0522D','Sienna')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#A52A2A','Brown')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#A9A9A9','DarkGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#A9A9A9','DarkGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ADD8E6','LightBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ADFF2F','GreenYellow')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#AFEEEE','PaleTurquoise')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#B0C4DE','LightSteelBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#B0E0E6','PowderBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#B22222','FireBrick')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#B8860B','DarkGoldenRod')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#BA55D3','MediumOrchid')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#BC8F8F','RosyBrown')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#BDB76B','DarkKhaki')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#C71585','MediumVioletRed')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#CD5C5C','IndianRed')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#CD853F','Peru')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D2691E','Chocolate')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D2B48C','Tan')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D3D3D3','LightGray')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D3D3D3','LightGrey')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D87093','PaleVioletRed')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#D8BFD8','Thistle')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DA70D6','Orchid')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DAA520','GoldenRod')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DC143C','Crimson')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DCDCDC','Gainsboro')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DDA0DD','Plum')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#DEB887','BurlyWood')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#E0FFFF','LightCyan')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#E6E6FA','Lavender')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#E9967A','DarkSalmon')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#EE82EE','Violet')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#EEE8AA','PaleGoldenRod')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F08080','LightCoral')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F0E68C','Khaki')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F0F8FF','AliceBlue')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F0FFF0','HoneyDew')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F0FFFF','Azure')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F4A460','SandyBrown')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F5DEB3','Wheat')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F5F5DC','Beige')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F5F5F5','WhiteSmoke')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F5FFFA','MintCream')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#F8F8FF','GhostWhite')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FA8072','Salmon')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FAEBD7','AntiqueWhite')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FAF0E6','Linen')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FAFAD2','LightGoldenRodYellow')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FDF5E6','OldLace')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF00FF','Magenta')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF1493','DeepPink')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF4500','OrangeRed')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF6347','Tomato')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF69B4','HotPink')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF7F50','Coral')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FF8C00','Darkorange')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFA07A','LightSalmon')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFB6C1','LightPink')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFC0CB','Pink')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFD700','Gold')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFDAB9','PeachPuff')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFDEAD','NavajoWhite')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4B5','Moccasin')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4C4','Bisque')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFE4E1','MistyRose')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFEBCD','BlanchedAlmond')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFEFD5','PapayaWhip')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF0F5','LavenderBlush')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF5EE','SeaShell')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFF8DC','Cornsilk')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFACD','LemonChiffon')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFAF0','FloralWhite')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFAFA','Snow')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFFE0','LightYellow')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#FFFFF0','Ivory')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#c0c0c0', 'silver')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ff0000', 'red')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ff00ff', 'fuchsia')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ffA500', 'orange')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ffff00', 'yellow')$/;"	v
i	.\vimfiles\syntax\css.vim	/^   let i = s:SetNamedColor('#ffffff', 'white')$/;"	v
iM	.\vimfiles\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
i\	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> i\\ :<C-U>call vimwiki#TO_table_cell(1, 0)<CR>$/;"	m
i\	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> i\\ :<C-U>call vimwiki#TO_table_cell(1, 1)<CR>$/;"	m
ic	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> ic :<C-U>call vimwiki#TO_table_col(1, 0)<CR>$/;"	m
ic	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> ic :<C-U>call vimwiki#TO_table_col(1, 1)<CR>$/;"	m
icon_minlines	.\vim73\syntax\icon.vim	/^  let icon_minlines = 15$/;"	v
ih	.\vimfiles\ftplugin\vimwiki.vim	/^onoremap <silent><buffer> ih :<C-U>call vimwiki#TO_header(1, 0)<CR>$/;"	m
ih	.\vimfiles\ftplugin\vimwiki.vim	/^vnoremap <silent><buffer> ih :<C-U>call vimwiki#TO_header(1, 1)<CR>$/;"	m
im	.\vimfiles\ftplugin\ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
in_array	.\vimfiles\plugin\jsbeautify.vim	/^function! s:in_array(what, arr)$/;"	f
in_list	.\vimfiles\autoload\vimwiki_html.vim	/^  let in_list = (len(a:lists) > 0)$/;"	v
include_syntax	.\vim73\syntax\context.vim	/^function! s:include_syntax(name, group)$/;"	f
increase	.\vim73\ftplugin\cobol.vim	/^function! s:increase(...)$/;"	f
indent	.\vimfiles\autoload\vimwiki_html.vim	/^    let indent = stridx(line, lstSym)$/;"	v
indent	.\vimfiles\plugin\jsbeautify.vim	/^function! s:indent()$/;"	f
indentLevelFor	.\vimfiles\plugin\NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
indent_to_innermost_parentheses	.\vim73\indent\dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
indent_value	.\vim73\indent\sh.vim	/^function! s:indent_value(option)$/;"	f
index	.\vimfiles\plugin\functionlist.vim	/^function! s:index()$/;"	f
iniflist	.\vimfiles\plugin\functionlist.vim	/^function! s:iniflist()$/;"	f
initNerdTree	.\vimfiles\plugin\NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	.\vimfiles\plugin\NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	.\vimfiles\plugin\NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initOpenURL	.\vimfiles\autoload\rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	.\vimfiles\plugin\NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initialize	.\vimfiles\plugin\fuf.vim	/^function s:initialize()$/;"	f
initializerEdit	.\vimfiles\autoload\rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerList	.\vimfiles\autoload\rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
input_session_name	.\vimfiles\plugin\gsession.vim	/^fun! s:input_session_name(completer)$/;"	f
insertNewNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:insertNewNode()$/;"	f
install_plugin	.\vimfiles\plugin\zencoding.vim	/^function! s:install_plugin()$/;"	f
install_plugin	.\vimfiles\snippets\plugin\zencoding.vim	/^function! s:install_plugin()$/;"	f
integrationtestEdit	.\vimfiles\autoload\rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestList	.\vimfiles\autoload\rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
interpretPrimaryPatternForNonPath	.\vimfiles\autoload\fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	.\vimfiles\autoload\fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	.\vimfiles\autoload\fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
intersectDicts	.\vimfiles\plugin\voom\voom.py	/^def intersectDicts(dictsAND, dictsNOT): #{{{2$/;"	f	access:public
invertrange	.\vimfiles\autoload\rails.vim	/^function! s:invertrange(beg,end)$/;"	f
isModifiedSinceLastCall	.\vimfiles\autoload\acp.vim	/^function s:isModifiedSinceLastCall()$/;"	f
isTreeOpen	.\vimfiles\plugin\NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	.\vimfiles\plugin\NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
is_bash	.\vim73\syntax\initng.vim	/^let is_bash = 1$/;"	v
is_bash	.\vim73\syntax\upstart.vim	/^let is_bash = 1$/;"	v
is_case	.\vim73\indent\sh.vim	/^function! s:is_case(line)$/;"	f
is_case_break	.\vim73\indent\sh.vim	/^function! s:is_case_break(line)$/;"	f
is_case_ended	.\vim73\indent\sh.vim	/^function! s:is_case_ended(line)$/;"	f
is_case_label	.\vim73\indent\sh.vim	/^function! s:is_case_label(line, pnum)$/;"	f
is_cb_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:is_cb_list_item(lnum) "{{{$/;"	f
is_continuation_line	.\vim73\indent\sh.vim	/^function! s:is_continuation_line(line)$/;"	f
is_first_column	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:is_first_column(lnum, cnum) "{{{$/;"	f
is_img_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:is_img_link(lnk) "{{{$/;"	f
is_js	.\vimfiles\plugin\jsbeautify.vim	/^function! s:is_js()$/;"	f
is_last_column	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:is_last_column(lnum, cnum) "{{{$/;"	f
is_link_to_non_wiki_file	.\vimfiles\autoload\vimwiki.vim	/^function! s:is_link_to_non_wiki_file(link) "{{{$/;"	f
is_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:is_list_item(lnum) "{{{$/;"	f
is_non_wiki_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:is_non_wiki_link(lnk) "{{{$/;"	f
is_separator	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:is_separator(line) "{{{$/;"	f
is_table	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:is_table(line) "{{{$/;"	f
is_web_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:is_web_link(lnk) "{{{$/;"	f
is_wiki_word	.\vimfiles\autoload\vimwiki.vim	/^function! s:is_wiki_word(str) "{{{$/;"	f
is_windows	.\vimfiles\autoload\vimwiki.vim	/^function! s:is_windows() "{{{$/;"	f
iskKeep	.\vim73\syntax\vim.vim	/^ let iskKeep= &isk$/;"	v
item	.\vimfiles\autoload\vimwiki_html.vim	/^        let item = remove(a:lists, -1)$/;"	v
item	.\vimfiles\autoload\vimwiki_html.vim	/^      let item = remove(a:lists, -1)$/;"	v
j	.\vim73\ftplugin\flexwiki.vim	/^  nmap <buffer> j      gj$/;"	m
j	.\vim73\ftplugin\flexwiki.vim	/^  vmap <buffer> j      gj$/;"	m
j	.\vim73\macros\less.vim	/^map j <CR>$/;"	m
java_highlight_all	.\vim73\syntax\java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	.\vim73\syntax\java.vim	/^  let java_minlines = 10$/;"	v
javascriptEdit	.\vimfiles\autoload\rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	.\vimfiles\autoload\rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
javascriptcomplete#CompleteJS	.\vim73\autoload\javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f
javascriptcomplete#CompleteJS	.\vimfiles\autoload\javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f
join_lines	.\vimfiles\lib\extras\build_syntaxfile.py	/^def join_lines(lines):$/;"	f	access:public
jproperties_lines	.\vim73\syntax\jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	.\vim73\syntax\jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	.\vim73\syntax\jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jump	.\vim73\ftplugin\cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpToBookmark	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	f
jumpToFirstChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	f
jumpToLastChild	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	f
jumpToParent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToParent()$/;"	f
jumpToRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	.\vimfiles\plugin\NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	f
jumpToTag	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
k	.\vim73\ftplugin\flexwiki.vim	/^  nmap <buffer> k      gk$/;"	m
k	.\vim73\ftplugin\flexwiki.vim	/^  vmap <buffer> k      gk$/;"	m
k	.\vim73\macros\less.vim	/^noremap <script> k <C-Y><SID>L$/;"	m
kbd_create_new_row	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:kbd_create_new_row(cols, goto_first) "{{{$/;"	f
kbd_goto_next_col	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:kbd_goto_next_col(last) "{{{$/;"	f
kbd_goto_next_row	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:kbd_goto_next_row() "{{{$/;"	f
kbd_goto_prev_col	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:kbd_goto_prev_col(first) "{{{$/;"	f
kbd_goto_prev_row	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:kbd_goto_prev_row() "{{{$/;"	f
keyword	.\vimfiles\colors\bandit.vim	/^	let keyword = split(line)[0]$/;"	v
keywords	.\vimfiles\colors\bandit.vim	/^	let keywords += [keyword,]$/;"	v
keywords	.\vimfiles\colors\bandit.vim	/^let keywords = []$/;"	v
l9#async#execute	.\vimfiles\autoload\l9\async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	.\vimfiles\autoload\l9\async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	.\vimfiles\autoload\l9\async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	.\vimfiles\autoload\l9\async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	.\vimfiles\autoload\l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	.\vimfiles\autoload\l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	.\vimfiles\autoload\l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	.\vimfiles\autoload\l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	.\vimfiles\autoload\l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	.\vimfiles\autoload\l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	.\vimfiles\autoload\l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	.\vimfiles\autoload\l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	.\vimfiles\autoload\l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	.\vimfiles\autoload\l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	.\vimfiles\autoload\l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	.\vimfiles\autoload\l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	.\vimfiles\autoload\l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	.\vimfiles\autoload\l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	.\vimfiles\autoload\l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	.\vimfiles\autoload\l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	.\vimfiles\autoload\l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	.\vimfiles\autoload\l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	.\vimfiles\autoload\l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	.\vimfiles\autoload\l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	.\vimfiles\autoload\l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	.\vimfiles\autoload\l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	.\vimfiles\autoload\l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	.\vimfiles\autoload\l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	.\vimfiles\autoload\l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	.\vimfiles\autoload\l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	.\vimfiles\autoload\l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	.\vimfiles\autoload\l9\quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	.\vimfiles\autoload\l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	.\vimfiles\autoload\l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	.\vimfiles\autoload\l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	.\vimfiles\autoload\l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	.\vimfiles\autoload\l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	.\vimfiles\autoload\l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	.\vimfiles\autoload\l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	.\vimfiles\autoload\l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	.\vimfiles\autoload\l9\tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	.\vimfiles\autoload\l9\tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	.\vimfiles\autoload\l9\tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	.\vimfiles\autoload\l9\tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	.\vimfiles\autoload\l9\tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	.\vimfiles\autoload\l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	.\vimfiles\autoload\l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	.\vimfiles\autoload\l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	.\vimfiles\autoload\l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	.\vimfiles\autoload\l9.vim	/^function l9#zip(items)$/;"	f
l_O	.\vimfiles\ftplugin\vimwiki.vim	/^  let l_O = matchstr(&langmap, '\\C,\\zs.\\zeO,')$/;"	v
l_o	.\vimfiles\ftplugin\vimwiki.vim	/^  let l_o = matchstr(&langmap, '\\C,\\zs.\\zeo,')$/;"	v
lang	.\vim73\spell\check_locales.vim	/^  let lang = substitute(item.text, '.*LANG=\\(\\S\\+\\).*', '\\1', '')$/;"	v
lastformat	.\vimfiles\autoload\rails.vim	/^function! s:lastformat(start)$/;"	f
lastmethod	.\vimfiles\autoload\rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	.\vimfiles\autoload\rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	.\vimfiles\autoload\rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	.\vimfiles\autoload\rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	.\vimfiles\autoload\rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
leader	.\vimfiles\plugin\dbext.vim	/^        let leader = g:mapleader$/;"	v
leader	.\vimfiles\plugin\dbext.vim	/^    let leader = '\\'$/;"	v
leader	.\vimfiles\plugin\dbext.vim	/^    let leader = escape(leader, '\\')$/;"	v
level	.\vimfiles\autoload\vimwiki_html.vim	/^  let level = 0$/;"	v
leveladjust	.\vim73\syntax\2html.vim	/^	    let leveladjust += 1$/;"	v
leveladjust	.\vim73\syntax\2html.vim	/^    let leveladjust -= 1$/;"	v
leveladjust	.\vim73\syntax\2html.vim	/^  let leveladjust = 0$/;"	v
lex	.\vim73\indent\dtd.vim	/^function s:lex(input, start, ...)$/;"	f
lex1	.\vim73\indent\dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
libEdit	.\vimfiles\autoload\rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libList	.\vimfiles\autoload\rails.vim	/^function! s:libList(A,L,P)$/;"	f
line	.\vim73\ftplugin\html.vim	/^        let line = getline(i)$/;"	v
line	.\vim73\ftplugin\html.vim	/^    let line = ""$/;"	v
line	.\vimfiles\autoload\vimwiki_html.vim	/^    let line = s:linkify(link_parts[0], link_parts[1], style)$/;"	v
line	.\vimfiles\autoload\vimwiki_html.vim	/^    let line = s:linkify(value, value, '')$/;"	v
line	.\vimfiles\autoload\vimwiki_html.vim	/^    let line = substitute(a:line, '\\t', repeat(' ', &tabstop), 'g')$/;"	v
line	.\vimfiles\autoload\vimwiki_html.vim	/^  let line = ''$/;"	v
linepeak	.\vimfiles\autoload\rails.vim	/^function! s:linepeak()$/;"	f
lines	.\vimfiles\autoload\vimwiki_html.vim	/^  let lines = []$/;"	v
lines	.\vimfiles\colors\bandit.vim	/^let lines = split(highlights, '\\n')$/;"	v
link_exists	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:link_exists(lines, link) "{{{$/;"	f
link_parts	.\vimfiles\autoload\vimwiki_html.vim	/^    let link_parts = split(value, "][", 1)$/;"	v
link_parts	.\vimfiles\autoload\vimwiki_html.vim	/^    let link_parts = split(value, "|", 1)$/;"	v
listAroundFiles	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
lnum	.\vim73\spell\fixdup.vim	/^  let lnum += 1$/;"	v
lnum	.\vim73\spell\fixdup.vim	/^let lnum = 2$/;"	v
load_namedsession_cwd	.\vimfiles\plugin\gsession.vim	/^fun! s:load_namedsession_cwd()$/;"	f
load_namedsession_global	.\vimfiles\plugin\gsession.vim	/^fun! s:load_namedsession_global()$/;"	f
load_session	.\vimfiles\plugin\gsession.vim	/^fun! s:load_session(file)$/;"	f
loaded_VCSCommand	.\vimfiles\plugin\vcscommand.vim	/^let loaded_VCSCommand = 1$/;"	v
loaded_VCSCommand	.\vimfiles\plugin\vcscommand.vim	/^let loaded_VCSCommand = 2$/;"	v
loaded_alternateFile	.\vimfiles\plugin\a.vim	/^let loaded_alternateFile = 1$/;"	v
loaded_colorizer	.\vimfiles\plugin\colorizer.vim	/^let loaded_colorizer = 1$/;"	v
loaded_explorer	.\vimfiles\plugin\winfileexplorer.vim	/^	let loaded_explorer = 1$/;"	v
loaded_explorer	.\vimfiles\plugin\winmanager.vim	/^	let loaded_explorer = 1$/;"	v
loaded_fontsize	.\vimfiles\plugin\fontsize.vim	/^let loaded_fontsize = 1$/;"	v
loaded_genutils	.\vimfiles\plugin\genutils.vim	/^let loaded_genutils = 204$/;"	v
loaded_grep	.\vimfiles\plugin\grep.vim	/^let loaded_grep = 1$/;"	v
loaded_gzip	.\vim73\plugin\gzip.vim	/^let loaded_gzip = 1$/;"	v
loaded_jsbeautify	.\vimfiles\plugin\jsbeautify.vim	/^let loaded_jsbeautify = '$Id$'$/;"	v
loaded_less	.\vim73\macros\less.vim	/^let loaded_less = 1$/;"	v
loaded_matchit	.\vim73\macros\matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_matchit	.\vimfiles\plugin\matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_mru	.\vimfiles\plugin\mru.vim	/^let loaded_mru=1$/;"	v
loaded_nerd_tree	.\vimfiles\plugin\NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_nextCS	.\vimfiles\plugin\nextCS.vim	/^let loaded_nextCS = 1$/;"	v
loaded_quick_template	.\vimfiles\plugin\QuickTemplate.vim	/^let loaded_quick_template = 1$/;"	v
loaded_rrhelper	.\vim73\plugin\rrhelper.vim	/^let loaded_rrhelper = 1$/;"	v
loaded_snips	.\vimfiles\plugin\snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_spellfile_plugin	.\vim73\plugin\spellfile.vim	/^let loaded_spellfile_plugin = 1$/;"	v
loaded_taglist	.\vimfiles\plugin\taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	.\vimfiles\plugin\taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	.\vimfiles\plugin\taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	.\vimfiles\plugin\taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tb_compressor	.\vimfiles\plugin\TBCompressor.vim	/^let loaded_tb_compressor = 1$/;"	v
loaded_transfer_chinese	.\vimfiles\plugin\TransferChinese.vim	/^let loaded_transfer_chinese = 1$/;"	v
loaded_vimwiki	.\vimfiles\plugin\vimwiki.vim	/^let loaded_vimwiki = 1$/;"	v
loaded_winfileexplorer	.\vimfiles\plugin\winfileexplorer.vim	/^let loaded_winfileexplorer=1$/;"	v
loaded_winmanager	.\vimfiles\plugin\winmanager.vim	/^let loaded_winmanager = 1$/;"	v
localeEdit	.\vimfiles\autoload\rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	.\vimfiles\autoload\rails.vim	/^function! s:localeList(A,L,P)$/;"	f
locations	.\vimfiles\autoload\man.vim	/^let locations = [$/;"	v
locations	.\vimfiles\autoload\objc\man.vim	/^let locations = [$/;"	v
login	.\vim73\ftplugin\changelog.vim	/^  function! s:login()$/;"	f
low	.\vimfiles\plugin\vimwiki.vim	/^let low = g:vimwiki_lower$/;"	v
lstRegExp	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstRegExp = ''$/;"	v
lstRegExp	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstRegExp = g:vimwiki_rxListBullet$/;"	v
lstRegExp	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstRegExp = g:vimwiki_rxListNumber$/;"	v
lstSym	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstSym = '#'$/;"	v
lstSym	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstSym = ''$/;"	v
lstSym	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstSym = matchstr(a:line, '[*-]')$/;"	v
lstTagClose	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagClose = ''$/;"	v
lstTagClose	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagClose = '<\/ol>'$/;"	v
lstTagClose	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagClose = '<\/ul>'$/;"	v
lstTagOpen	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagOpen = ''$/;"	v
lstTagOpen	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagOpen = '<ol>'$/;"	v
lstTagOpen	.\vimfiles\autoload\vimwiki_html.vim	/^    let lstTagOpen = '<ul>'$/;"	v
lua_subversion	.\vim73\syntax\lua.vim	/^  let lua_subversion = 0$/;"	v
lua_subversion	.\vim73\syntax\lua.vim	/^  let lua_subversion = 1$/;"	v
lua_version	.\vim73\syntax\lua.vim	/^  let lua_version = 5$/;"	v
mailerEdit	.\vimfiles\autoload\rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerList	.\vimfiles\autoload\rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
main	.\vim73\tools\blink.c	/^main()$/;"	f
main	.\vim73\tools\ccfilter.c	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	.\vim73\tools\xcmdsrv_client.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main_syntax	.\vim73\syntax\aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	.\vim73\syntax\aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	.\vim73\syntax\css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	.\vim73\syntax\eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	.\vim73\syntax\fvwm2m4.vim	/^  let main_syntax = 'fvwm2m4'$/;"	v
main_syntax	.\vim73\syntax\groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	.\vim73\syntax\gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	.\vim73\syntax\haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	.\vim73\syntax\html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\vim73\syntax\htmlcheetah.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\vim73\syntax\htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\vim73\syntax\htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	.\vim73\syntax\htmlos.vim	/^  let main_syntax = 'htmlos'$/;"	v
main_syntax	.\vim73\syntax\java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	.\vim73\syntax\javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	.\vim73\syntax\jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	.\vim73\syntax\liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	.\vim73\syntax\lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	.\vim73\syntax\m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	.\vim73\syntax\mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	.\vim73\syntax\msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	.\vim73\syntax\ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	.\vim73\syntax\pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	.\vim73\syntax\php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	.\vim73\syntax\plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	.\vim73\syntax\smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	.\vim73\syntax\smil.vim	/^  let main_syntax = 'smil'$/;"	v
main_syntax	.\vim73\syntax\spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	.\vim73\syntax\texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	.\vim73\syntax\tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	.\vim73\syntax\tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	.\vim73\syntax\uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	.\vim73\syntax\webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	.\vim73\syntax\wml.vim	/^  let main_syntax = 'wml'$/;"	v
main_syntax	.\vimfiles\syntax\css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	.\vimfiles\syntax\css3.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	.\vimfiles\syntax\eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	.\vimfiles\syntax\javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	.\vimfiles\syntax\jquery.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	.\vimfiles\syntax\json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	.\vimfiles\syntax\php.vim	/^  let main_syntax = 'php'$/;"	v
makeAdditionalMigemoPattern	.\vimfiles\autoload\fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeCurrentBehaviorSet	.\vimfiles\autoload\acp.vim	/^function s:makeCurrentBehaviorSet()$/;"	f
makeDefaultBehavior	.\vimfiles\plugin\acp.vim	/^function s:makeDefaultBehavior()$/;"	f
makeFileAbbrInfo	.\vimfiles\autoload\fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	.\vimfiles\autoload\fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	.\vimfiles\autoload\fuf\buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	.\vimfiles\autoload\fuf\changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makeOutline	.\vimfiles\plugin\voom\voom.py	/^def makeOutline(VO, blines): #{{{2$/;"	f	access:public
makePartialMatchingExpr	.\vimfiles\autoload\fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	.\vimfiles\autoload\fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
makeSnipmateItem	.\vimfiles\autoload\acp.vim	/^function s:makeSnipmateItem(key, snip)$/;"	f
make_date_link	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:make_date_link(...) "{{{$/;"	f
make_head_html	.\vimfiles\plugin\voom\voom.py	/^def make_head_html(bline,match):$/;"	f	access:public
make_local_session	.\vimfiles\plugin\gsession.vim	/^fun! s:make_local_session()$/;"	f
make_namedsession_cwd	.\vimfiles\plugin\gsession.vim	/^fun! s:make_namedsession_cwd()$/;"	f
make_namedsession_global	.\vimfiles\plugin\gsession.vim	/^fun! s:make_namedsession_global()$/;"	f
make_session	.\vimfiles\plugin\gsession.vim	/^fun! s:make_session(file)$/;"	f
make_tag	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:make_tag(line, regexp, func) "{{{$/;"	f
makewithruby	.\vimfiles\autoload\rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
map	.\vimfiles\plugin\supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	.\vimfiles\plugin\supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
mapForMappingDriven	.\vimfiles\autoload\acp.vim	/^function s:mapForMappingDriven()$/;"	f
maplink	.\vimfiles\doc\vim2html.pl	/^sub maplink$/;"	s
mappingInfo	.\vimfiles\plugin\vcscvs.vim	/^let mappingInfo = [$/;"	v
mark#CurrentMark	.\vimfiles\autoload\mark.vim	/^function! mark#CurrentMark()$/;"	f
mark#DoMark	.\vimfiles\autoload\mark.vim	/^function! mark#DoMark(...) " DoMark(regexp)$/;"	f
mark#GetVisualSelectionAsLiteralPattern	.\vimfiles\autoload\mark.vim	/^function! mark#GetVisualSelectionAsLiteralPattern()$/;"	f
mark#GetVisualSelectionAsRegexp	.\vimfiles\autoload\mark.vim	/^function! mark#GetVisualSelectionAsRegexp()$/;"	f
mark#MarkCurrentWord	.\vimfiles\autoload\mark.vim	/^function! mark#MarkCurrentWord()$/;"	f
mark#MarkRegex	.\vimfiles\autoload\mark.vim	/^function! mark#MarkRegex( regexpPreset )$/;"	f
mark#SearchAnyMark	.\vimfiles\autoload\mark.vim	/^function! mark#SearchAnyMark( isBackward )$/;"	f
mark#SearchCurrentMark	.\vimfiles\autoload\mark.vim	/^function! mark#SearchCurrentMark( isBackward )$/;"	f
mark#SearchNext	.\vimfiles\autoload\mark.vim	/^function! mark#SearchNext( isBackward )$/;"	f
mark#UpdateMark	.\vimfiles\autoload\mark.vim	/^function! mark#UpdateMark()$/;"	f
mark#UpdateScope	.\vimfiles\autoload\mark.vim	/^function! mark#UpdateScope()$/;"	f
match_output	.\vimfiles\lib\extras\cocoa_definitions.py	/^def match_output(command, regex, group_num):$/;"	f	access:public
match_type	.\vimfiles\autoload\rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	.\vimfiles\autoload\rails.vim	/^function! s:matchcursor(pat)$/;"	f
matchparen	.\vim73\plugin\matchparen.vim	/^augroup matchparen$/;"	a
mel_minlines	.\vim73\syntax\mel.vim	/^  let mel_minlines=15$/;"	v
menuBufEnter	.\vimfiles\plugin\rails.vim	/^function! s:menuBufEnter()$/;"	f
menuBufLeave	.\vimfiles\plugin\rails.vim	/^function! s:menuBufLeave()$/;"	f
menuRoot	.\vimfiles\plugin\dbext.vim	/^        let menuRoot = '&Plugin.&dbext'$/;"	v
menuRoot	.\vimfiles\plugin\dbext.vim	/^        let menuRoot = '&dbext'$/;"	v
menuRoot	.\vimfiles\plugin\dbext.vim	/^        let menuRoot = 'dbext'$/;"	v
menucmd	.\vimfiles\plugin\rails.vim	/^function! s:menucmd(priority)$/;"	f
menuprompt	.\vimfiles\plugin\rails.vim	/^function! s:menuprompt(vimcmd,prompt)$/;"	f
menutrans_help_dialog	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_help_dialog = "Írd be a kívánt szót vagy parancsot:\\n\\n A szövegbeviteli parancsok elé írj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszõ parancsok elé c_-t (pl.: c_<Del>)\\nA változókat a ' jellel vedd körül (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let menutrans_help_dialog = "Ãrd be a kÃ­vÃ¡nt szÃ³t vagy parancsot:\\n\\n A szÃ¶vegbeviteli parancsok elÃ© Ã­rj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszÅ parancsok elÃ© c_-t (pl.: c_<Del>)\\nA vÃ¡ltozÃ³kat a ' jellel vedd kÃ¶rÃ¼l (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_nl_nl.latin1.vim	/^let menutrans_help_dialog = "Typ een commando of woord om help voor te vinden:\\n\\nVoeg i_ in voor Input mode commandos (bijv. i_CTRL-X)\\nVoeg c_ in voor een commando-regel edit commando (bijv. c_<Del>)\\nVoeg ' in \\voor een optie naam (bijv. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_help_dialog = "Wprowad¼ komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let menutrans_help_dialog = "WprowadÅº komendÄ lub sÅowo, aby otrzymaÄ pomoc o:\\n\\nPrzedrostek i_ oznacza komendÄ trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendÄ edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwÄ opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_polish_poland.1250.vim	/^let menutrans_help_dialog = "Wprowad komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_sr_rs.ascii.vim	/^let menutrans_help_dialog = "Unesite naredbu ili rec cije pojasnjenje trazite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog rezima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_help_dialog = "Unesite naredbu ili reè èije poja¹njenje tra¾ite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog re¾ima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_help_dialog = "ÃÝÕáØâÕ ÝÐàÕÔÑã ØÛØ àÕç çØøÕ ßÞøÐèúÕúÕ âàÐÖØâÕ:\\n\\n´ÞÔÐøâÕ i_ ×Ð ÝÐàÕÔÑÕ ãÝÞáÐ (Ýßà. i_CTRL-X)\\n´ÞÔÐøâÕ c_ ×Ð ÝÐàÕÔÑÕ ÚÞÜÐÝÔÝÞÓ àÕÖØÜÐ (Ýßà. á_<Del>)\\n´ÞÔÐøâÕ ' ×Ð ØÜÕÝÐ ÞßæØøÐ (Ýßà. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let menutrans_help_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð°ÑÐµÐ´Ð±Ñ Ð¸Ð»Ð¸ ÑÐµÑ ÑÐ¸ÑÐµ Ð¿Ð¾ÑÐ°ÑÑÐµÑÐµ ÑÑÐ°Ð¶Ð¸ÑÐµ:\\n\\nÐÐ¾Ð´Ð°ÑÑÐµ i_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÑÐ½Ð¾ÑÐ° (Ð½Ð¿Ñ. i_CTRL-X)\\nÐÐ¾Ð´Ð°ÑÑÐµ c_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð½Ð¾Ð³ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð¿Ñ. Ñ_<Del>)\\nÐÐ¾Ð´Ð°ÑÑÐµ ' Ð·Ð° Ð¸Ð¼ÐµÐ½Ð° Ð¾Ð¿ÑÐ¸ÑÐ° (Ð½Ð¿Ñ. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_sv_se.latin1.vim	/^let menutrans_help_dialog = "Skriv in ett kommando eller ord som du vill söka hjälp på:\\n\\nBörja med i_ för infogninglägeskommandon (t.ex. i_CTRL-X)\\nBörja med c_ för kommandoradredigeringskommandon (t.ex. c_<Del>)\\nBörja med ' för ett inställningsnamn (t.ex. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let menutrans_help_dialog = "Âêàæ³òü êîìàíäó àáî ñëîâî äëÿ ïîøóêó:\\n\\nÄîäàéòå i_ äëÿ êîìàíä ðåæèìó âñòàâêè (íàïð. i_CTRL-X)\\nÄîäàéòå i_ äëÿ êîìàíäíîãî ðåæèìó (íàïð. ñ_<Del>)\\nÄîäàéòå ' äëÿ ïîçíà÷åííÿ íàçâè îïö³¿ (íàïð. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_help_dialog = "÷ËÁÖ¦ÔØ ËÏÍÁÎÄÕ ÁÂÏ ÓÌÏ×Ï ÄÌÑ ÐÏÛÕËÕ:\\n\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄ ÒÅÖÉÍÕ ×ÓÔÁ×ËÉ (ÎÁÐÒ. i_CTRL-X)\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄÎÏÇÏ ÒÅÖÉÍÕ (ÎÁÐÒ. Ó_<Del>)\\näÏÄÁÊÔÅ ' ÄÌÑ ÐÏÚÎÁÞÅÎÎÑ ÎÁÚ×É ÏÐÃ¦§ (ÎÁÐÒ. 'shiftwidth')"$/;"	v
menutrans_no_file	.\vim73\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_hu_hu.utf-8.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_nl_nl.latin1.vim	/^let menutrans_no_file = "[Geen Bestand]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_pl_pl.utf-8.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_polish_poland.1250.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_ru_ru.koi8-r.vim	/^let menutrans_no_file = "[îÅÔ ÆÁÊÌÁ]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_ru_ru.vim	/^let menutrans_no_file = "[ÐÐµÑ ÑÐ°Ð¹Ð»Ð°]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_sr_rs.ascii.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_no_file = "[½ÕÜÐ ÔÐâÞâÕÚÕ]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_sr_rs.utf-8.vim	/^let menutrans_no_file = "[ÐÐµÐ¼Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_sv_se.latin1.vim	/^let menutrans_no_file = "[Ingen fil]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_uk_ua.cp1251.vim	/^let menutrans_no_file = "[Íåìàº\\ Ôàéëà]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_no_file = "[îÅÍÁ¤\\ æÁÊÌÁ]"$/;"	v
menutrans_no_file	.\vim73\lang\menu_vi_vn.vim	/^let menutrans_no_file = "[khÃ´ng cÃ³ táº­p tin]"$/;"	v
metalEdit	.\vimfiles\autoload\rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalList	.\vimfiles\autoload\rails.vim	/^function! s:metalList(A,L,P)$/;"	f
mextargs	.\vimfiles\autoload\rails.vim	/^function! s:mextargs(str,num)$/;"	f
mfplain_mp_macros	.\vim73\syntax\mp.vim	/^  let mfplain_mp_macros = 0 " Set this to '1' to include these macro names$/;"	v
mid	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:mid(value, cnt) "{{{$/;"	f
migrationEdit	.\vimfiles\autoload\rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	.\vimfiles\autoload\rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	.\vimfiles\autoload\rails.vim	/^function! s:migspc(line)$/;"	f
mixedcase	.\vimfiles\plugin\abolish.vim	/^function! s:mixedcase(word)$/;"	f
mkeep	.\vimfiles\autoload\rails.vim	/^function! s:mkeep(str)$/;"	f
model	.\vimfiles\autoload\rails.vim	/^function! s:model(...)$/;"	f
modelEdit	.\vimfiles\autoload\rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelList	.\vimfiles\autoload\rails.vim	/^function! s:modelList(A,L,P)$/;"	f
module	.\vimfiles\plugin\voom\voom.py	/^            vim.command("call Voom_ErrorMsg('VOoM: cannot import Python module %s')" %module.replace("'","''"))$/;"	i
moveToOtherTabpageOpeningBuffer	.\vimfiles\autoload\l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
mupad_cmdextversion	.\vim73\syntax\mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mv_DEtools	.\vim73\syntax\maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	.\vim73\syntax\maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	.\vim73\syntax\maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	.\vim73\syntax\maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	.\vim73\syntax\maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	.\vim73\syntax\maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	.\vim73\syntax\maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	.\vim73\syntax\maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	.\vim73\syntax\maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	.\vim73\syntax\maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	.\vim73\syntax\maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	.\vim73\syntax\maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	.\vim73\syntax\maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	.\vim73\syntax\maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	.\vim73\syntax\maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	.\vim73\syntax\maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	.\vim73\syntax\maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	.\vim73\syntax\maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	.\vim73\syntax\maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	.\vim73\syntax\maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	.\vim73\syntax\maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	.\vim73\syntax\maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	.\vim73\syntax\maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	.\vim73\syntax\maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	.\vim73\syntax\maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	.\vim73\syntax\maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	.\vim73\syntax\maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	.\vim73\syntax\maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	.\vim73\syntax\maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	.\vim73\syntax\maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	.\vim73\syntax\maple.vim	/^  let mv_totorder   = 1$/;"	v
myexpand	.\vimfiles\doc\vim2html.pl	/^sub myexpand$/;"	s
mylength	.\vimfiles\doc\vim2html.pl	/^sub mylength$/;"	s
n	.\vim73\syntax\xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	.\vim73\syntax\xpm.vim	/^	 let n = n + 1$/;"	v
n	.\vim73\syntax\xpm.vim	/^let n      = 0$/;"	v
n	.\vim73\syntax\xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	.\vim73\syntax\xpm2.vim	/^	let n = n + 1$/;"	v
n	.\vim73\syntax\xpm2.vim	/^  let n      = 0$/;"	v
name	.\vim73\ftplugin\changelog.vim	/^  function! s:name(login)$/;"	f
namedsession_cwd_filepath	.\vimfiles\plugin\gsession.vim	/^fun! s:namedsession_cwd_filepath(name)$/;"	f
namedsession_global_filepath	.\vimfiles\plugin\gsession.vim	/^fun! s:namedsession_global_filepath(name)$/;"	f
nested	.\vimfiles\syntax\vimwiki.vim	/^let nested = VimwikiGet('nested_syntaxes')$/;"	v
netrw#ErrorMsg	.\vim73\autoload\netrw.vim	/^fun! netrw#ErrorMsg(level,msg,errnum)$/;"	f
netrw#Explore	.\vim73\autoload\netrw.vim	/^fun! netrw#Explore(indx,dosplit,style,...)$/;"	f
netrw#FileUrlRead	.\vim73\autoload\netrw.vim	/^fun! netrw#FileUrlRead(fname)$/;"	f
netrw#LocalBrowseCheck	.\vim73\autoload\netrw.vim	/^fun! netrw#LocalBrowseCheck(dirname)$/;"	f
netrw#NetRead	.\vim73\autoload\netrw.vim	/^fun! netrw#NetRead(mode,...)$/;"	f
netrw#NetSource	.\vim73\autoload\netrw.vim	/^fun! netrw#NetSource(...)$/;"	f
netrw#NetWrite	.\vim73\autoload\netrw.vim	/^fun! netrw#NetWrite(...) range$/;"	f
netrw#NetrwBalloonHelp	.\vim73\autoload\netrw.vim	/^  fun! netrw#NetrwBalloonHelp()$/;"	f
netrw#NetrwBrowseX	.\vim73\autoload\netrw.vim	/^fun! netrw#NetrwBrowseX(fname,remote)$/;"	f
netrw#NetrwClean	.\vim73\autoload\netrw.vim	/^fun! netrw#NetrwClean(sys)$/;"	f
netrw#NetrwObtain	.\vim73\autoload\netrw.vim	/^fun! netrw#NetrwObtain(islocal,fname,...)$/;"	f
netrw#NetrwRestorePosn	.\vim73\autoload\netrw.vim	/^fun! netrw#NetrwRestorePosn(...)$/;"	f
netrw#NetrwSavePosn	.\vim73\autoload\netrw.vim	/^fun! netrw#NetrwSavePosn()$/;"	f
netrw#Nread	.\vim73\autoload\netrw.vim	/^fun! netrw#Nread(mode,fname)$/;"	f
netrw#RFC2396	.\vim73\autoload\netrw.vim	/^fun! netrw#RFC2396(fname)$/;"	f
netrw#WinPath	.\vim73\autoload\netrw.vim	/^fun! netrw#WinPath(path)$/;"	f
netrwFileHandlers#Invoke	.\vim73\autoload\netrwFileHandlers.vim	/^fun! netrwFileHandlers#Invoke(exten,fname)$/;"	f
netrwSettings#NetrwSettings	.\vim73\autoload\netrwSettings.vim	/^fun! netrwSettings#NetrwSettings()$/;"	f
newHeadline	.\vimfiles\plugin\voom\voom.py	/^def newHeadline(VO, level): #{{{2$/;"	f	access:public
new_changelog_entry	.\vim73\ftplugin\changelog.vim	/^  function! s:new_changelog_entry()$/;"	f
nextBufferName	.\vimfiles\plugin\NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
next_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:next_list_item(lnum) "{{{$/;"	f
nlo	.\vimfiles\plugin\vimwiki.vim	/^let nlo = upp.oth$/;"	v
no_executable	.\vim73\vimtutor.bat	/^:no_executable$/;"	l
nodeAncestors	.\vimfiles\plugin\voom\voom.py	/^def nodeAncestors(VO, lnum): #{{{2$/;"	f	access:public
nodeHasChildren	.\vimfiles\plugin\voom\voom.py	/^def nodeHasChildren(VO, lnum): #{{{2$/;"	f	access:public
nodeParent	.\vimfiles\plugin\voom\voom.py	/^def nodeParent(VO, lnum): #{{{2$/;"	f	access:public
nodeSiblings	.\vimfiles\plugin\voom\voom.py	/^def nodeSiblings(VO, lnum): #{{{2$/;"	f	access:public
nodeSubnodes	.\vimfiles\plugin\voom\voom.py	/^def nodeSubnodes(VO, lnum): #{{{2$/;"	f	access:public
nodeUNL	.\vimfiles\plugin\voom\voom.py	/^def nodeUNL(VO, lnum): #{{{2$/;"	f	access:public
normalize_options	.\vimfiles\plugin\abolish.vim	/^function! s:normalize_options(flags)$/;"	f
not_supported	.\vim73\spell\check_locales.vim	/^let not_supported = []$/;"	v
notag	.\vim73\ftplugin\pdf.vim	/^function! s:notag()$/;"	f
nqc_minlines	.\vim73\syntax\nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	.\vim73\syntax\nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
ntaction	.\vim73\vimtutor.bat	/^:ntaction$/;"	l
nup	.\vimfiles\plugin\vimwiki.vim	/^let nup = low.oth$/;"	v
o	.\vimfiles\ftplugin\vimwiki.vim	/^nnoremap <buffer> o :call vimwiki_lst#insertOo('o')<CR>a$/;"	m
objc#cocoacomplete#Complete	.\vimfiles\autoload\cocoacomplete.vim	/^fun! objc#cocoacomplete#Complete(findstart, base)$/;"	f
objc#cocoacomplete#Complete	.\vimfiles\autoload\objc\cocoacomplete.vim	/^fun! objc#cocoacomplete#Complete(findstart, base)$/;"	f
objc#man#Completion	.\vimfiles\autoload\man.vim	/^fun objc#man#Completion(ArgLead, CmdLine, CursorPos)$/;"	f
objc#man#Completion	.\vimfiles\autoload\objc\man.vim	/^fun objc#man#Completion(ArgLead, CmdLine, CursorPos)$/;"	f
objc#man#ShowDoc	.\vimfiles\autoload\man.vim	/^fun objc#man#ShowDoc(...)$/;"	f
objc#man#ShowDoc	.\vimfiles\autoload\objc\man.vim	/^fun objc#man#ShowDoc(...)$/;"	f
objc#method_builder#Build	.\vimfiles\autoload\method_builder.vim	/^fun objc#method_builder#Build(header)$/;"	f
objc#method_builder#Build	.\vimfiles\autoload\objc\method_builder.vim	/^fun objc#method_builder#Build(header)$/;"	f
objc#method_builder#Completion	.\vimfiles\autoload\method_builder.vim	/^fun objc#method_builder#Completion(ArgLead, CmdLine, CursorPos)$/;"	f
objc#method_builder#Completion	.\vimfiles\autoload\objc\method_builder.vim	/^fun objc#method_builder#Completion(ArgLead, CmdLine, CursorPos)$/;"	f
objc#method_list#Activate	.\vimfiles\autoload\method_list.vim	/^fun objc#method_list#Activate(update)$/;"	f
objc#method_list#Activate	.\vimfiles\autoload\objc\method_list.vim	/^fun objc#method_list#Activate(update)$/;"	f
objc#pum_snippet#Map	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun! objc#pum_snippet#Map()$/;"	f
objc#pum_snippet#Map	.\vimfiles\autoload\pum_snippet.vim	/^fun! objc#pum_snippet#Map()$/;"	f
objc#pum_snippet#Trigger	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun! objc#pum_snippet#Trigger(key)$/;"	f
objc#pum_snippet#Trigger	.\vimfiles\autoload\pum_snippet.vim	/^fun! objc#pum_snippet#Trigger(key)$/;"	f
objc#pum_snippet#Unmap	.\vimfiles\autoload\objc\pum_snippet.vim	/^fun! objc#pum_snippet#Unmap()$/;"	f
objc#pum_snippet#Unmap	.\vimfiles\autoload\pum_snippet.vim	/^fun! objc#pum_snippet#Unmap()$/;"	f
objc_man_key	.\vimfiles\ftplugin\objc_cocoa_mappings.vim	/^let objc_man_key = exists('objc_man_key') ? objc_man_key : 'K'$/;"	v
object.clone	.\vimfiles\plugin\abolish.vim	/^function! s:object.clone(...)$/;"	f
observerEdit	.\vimfiles\autoload\rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerList	.\vimfiles\autoload\rails.vim	/^function! s:observerList(A,L,P)$/;"	f
onBufDelete	.\vimfiles\autoload\l9\tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	.\vimfiles\autoload\l9\tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	.\vimfiles\autoload\fuf.vim	/^function s:onCommandPre()$/;"	f
oneline_comments	.\vim73\syntax\spup.vim	/^    let oneline_comments = 2$/;"	v
oninsertchange	.\vimfiles\plugin\functionlist.vim	/^function! s:oninsertchange()$/;"	f
openBookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openEntrySplit	.\vimfiles\plugin\NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	f
openExplorer	.\vimfiles\plugin\NERD_tree.vim	/^function! s:openExplorer()$/;"	f
openInNewTab	.\vimfiles\plugin\NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	f
openNodeRecursively	.\vimfiles\plugin\NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	f
open_changelog	.\vim73\ftplugin\changelog.vim	/^  function! s:open_changelog()$/;"	f
open_wiki_buffer	.\vimfiles\autoload\vimwiki.vim	/^function! s:open_wiki_buffer(item) "{{{$/;"	f
optionalblock	.\vim73\indent\cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
opts	.\vimfiles\autoload\rails.vim	/^function! s:opts()$/;"	f
optwin	.\vim73\optwin.vim	/^augroup optwin$/;"	a
or	.\vimfiles\plugin\voom\voom_mode_python.py	/^    funcLevels = [] # levels of previous def or class$/;"	f	function:hook_makeOutline	access:public
os	.\vimfiles\autoload\l9\async.py	/^import os$/;"	i
os	.\vimfiles\lib\extras\cocoa_classes.py	/^import os, re$/;"	i
os	.\vimfiles\lib\extras\cocoa_definitions.py	/^import os, commands, re$/;"	i
os	.\vimfiles\lib\extras\cocoa_methods.py	/^import re, os, gzip$/;"	i
os	.\vimfiles\plugin\voom\voom.py	/^import sys, os, re$/;"	i
oth	.\vimfiles\plugin\vimwiki.vim	/^let oth = g:vimwiki_other$/;"	v
other_mf_macros	.\vim73\syntax\mf.vim	/^  let other_mf_macros = 1 " Set this to '0' if your code gets too colourful$/;"	v
other_mf_macros	.\vim73\syntax\mp.vim	/^let other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
other_mp_macros	.\vim73\syntax\mp.vim	/^  let other_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
output_file	.\vimfiles\lib\extras\build_syntaxfile.py	/^def output_file(fname=None):$/;"	f	access:public
output_file	.\vimfiles\lib\extras\cocoa_classes.py	/^def output_file(fname=None):$/;"	f	access:public
p	.\vim73\macros\less.vim	/^map p %$/;"	m
parseChangesLine	.\vimfiles\autoload\fuf\changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	.\vimfiles\autoload\fuf\help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	.\vimfiles\autoload\fuf\help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	.\vimfiles\autoload\fuf\jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	.\vimfiles\autoload\fuf\quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	.\vimfiles\autoload\fuf\tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	.\vimfiles\autoload\fuf\taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	.\vimfiles\autoload\fuf\buffertag.vim	/^function s:parseTagLine(line)$/;"	f
parse_line	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:parse_line(line, state) " {{{$/;"	f
parse_substitute	.\vimfiles\plugin\abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
parse_subvert	.\vimfiles\plugin\abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
passwd_field	.\vim73\ftplugin\changelog.vim	/^  function! s:passwd_field(line, field)$/;"	f
paste#Paste	.\vim73\autoload\paste.vim	/^  func! paste#Paste()$/;"	f
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd = {'n': ":call paste#Paste()<CR>"}$/;"	v
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd = {'n': "\\"=@+.'xy'<CR>gPFx\\"_2x"}$/;"	v
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<BS><Esc>' . paste#paste_cmd['n'] . 'gi'$/;"	v
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<Esc>' . paste#paste_cmd['n'] . '"_s'$/;"	v
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>' . paste#paste_cmd['n']$/;"	v
paste#paste_cmd	.\vim73\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>gix<Esc>' . paste#paste_cmd['n'] . '"_x'$/;"	v
pathjoin	.\vimfiles\autoload\rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathsplit	.\vimfiles\autoload\rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pattern	.\vim73\syntax\cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	.\vimfiles\plugin\abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
perlpath	.\vim73\ftplugin\perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	.\vim73\ftplugin\perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	.\vim73\ftplugin\perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	.\vim73\ftplugin\perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
permute_suffixes	.\vim73\syntax\hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
pfmain_syntax_init	.\vim73\syntax\pfmain.vim	/^		let pfmain_syntax_init = 1$/;"	v
php_alt_assignByReference	.\vim73\syntax\php.vim	/^    let php_alt_assignByReference = 1$/;"	v
php_alt_comparisons	.\vim73\syntax\php.vim	/^    let php_alt_comparisons = 1$/;"	v
php_parent_error_close	.\vim73\syntax\php.vim	/^  let php_parent_error_close=1$/;"	v
php_parent_error_open	.\vim73\syntax\php.vim	/^  let php_parent_error_open=1$/;"	v
php_special_functions	.\vim73\syntax\php.vim	/^    let php_special_functions = 1$/;"	v
php_sync_method	.\vim73\indent\php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	.\vim73\syntax\php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	.\vim73\syntax\php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_sync_method	.\vimfiles\indent\php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	.\vimfiles\syntax\php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	.\vimfiles\syntax\php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#CompletePHP	.\vim73\autoload\phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base)$/;"	f
phpcomplete#GetClassContents	.\vim73\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassContents(file, name) " {{{$/;"	f
phpcomplete#GetClassLocation	.\vim73\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname) " {{{$/;"	f
phpcomplete#GetClassName	.\vim73\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassName(scontext) " {{{$/;"	f
phpcomplete#LoadData	.\vim73\autoload\phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f
place_sign	.\vimfiles\plugin\functionlist.vim	/^function! s:place_sign()$/;"	f
plain_mf_macros	.\vim73\syntax\mf.vim	/^  let plain_mf_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plain_mf_macros	.\vim73\syntax\mp.vim	/^let plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
plain_mp_macros	.\vim73\syntax\mp.vim	/^  let plain_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plevel	.\vimfiles\autoload\vimwiki_html.vim	/^      let plevel = s:close_list(toc, plevel, level)$/;"	v
plevel	.\vimfiles\autoload\vimwiki_html.vim	/^    let plevel = level$/;"	v
plevel	.\vimfiles\autoload\vimwiki_html.vim	/^  let plevel = 0$/;"	v
pluginEdit	.\vimfiles\autoload\rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginList	.\vimfiles\autoload\rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
point_in_region	.\vimfiles\autoload\zencoding.vim	/^function! s:point_in_region(point, region)$/;"	f
point_in_region	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:point_in_region(point, region)$/;"	f
polecenia	.\vim73\tutor\tutor.pl	/^  polecenia:$/;"	l
pop_command	.\vimfiles\autoload\rails.vim	/^function! s:pop_command()$/;"	f
pop_command	.\vimfiles\plugin\bundler.vim	/^function! s:pop_command()$/;"	f
pos	.\vimfiles\autoload\vimwiki_html.vim	/^    let pos = match(a:line, g:vimwiki_rxBold)$/;"	v
position_cursor	.\vim73\ftplugin\changelog.vim	/^  function! s:position_cursor()$/;"	f
postscr_level	.\vim73\syntax\postscr.vim	/^  let postscr_level = 2$/;"	v
pow	.\vimfiles\plugin\colorizer.vim	/^function! s:pow(x, n) "{{{2$/;"	f
pow	.\vimfiles\syntax\css.vim	/^function! s:pow(x, n)$/;"	f
ppwiz_highlight_defs	.\vim73\syntax\ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	.\vim73\syntax\ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
prefix	.\vimfiles\ftplugin\ruby.vim	/^        let prefix = ''$/;"	v
prefix	.\vimfiles\ftplugin\ruby.vim	/^        let prefix = 'env PATH='.$PATH.' '$/;"	v
prefix_zero	.\vimfiles\autoload\vimwiki_diary.vim	/^function! s:prefix_zero(num) "{{{$/;"	f
pregPattern_D	.\vimfiles\syntax\php.vim	/^      function! s:pregPattern_D(open, close)$/;"	f
pregPattern_S	.\vimfiles\syntax\php.vim	/^      function! s:pregPattern_S(open, close)$/;"	f
prephelp	.\vimfiles\autoload\rails.vim	/^function! s:prephelp()$/;"	f
prev_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:prev_list_item(lnum) "{{{$/;"	f
prevgood	.\vim73\indent\bst.vim	/^function! s:prevgood(lnum)$/;"	f
prevgood	.\vim73\indent\cobol.vim	/^function! s:prevgood(lnum)$/;"	f
previewNode	.\vimfiles\plugin\NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	f
prevnonblanknoncomment	.\vim73\indent\css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	.\vim73\indent\ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	.\vim73\indent\tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
print_active_worker_keys	.\vimfiles\autoload\l9\async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer	access:public
print_newline	.\vimfiles\plugin\jsbeautify.vim	/^function! s:print_newline(ignore_repeated) $/;"	f
print_output	.\vimfiles\autoload\l9\async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer	access:public
print_space	.\vimfiles\plugin\jsbeautify.vim	/^function! s:print_space()$/;"	f
print_token	.\vimfiles\plugin\jsbeautify.vim	/^function! s:print_token()$/;"	f
print_wiki_list	.\vimfiles\autoload\vimwiki.vim	/^function! s:print_wiki_list() "{{{$/;"	f
print_worker_keys	.\vimfiles\autoload\l9\async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer	access:public
process_inline_tags	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_inline_tags(line) "{{{$/;"	f
process_placeholders	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_placeholders(dest, placeholders, type, ins_content) "{{{$/;"	f
process_tag_def_list	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_def_list(line, deflist) "{{{$/;"	f
process_tag_h	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_h(line, id) "{{{$/;"	f
process_tag_hr	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_hr(line) "{{{$/;"	f
process_tag_list	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_list(line, lists) "{{{$/;"	f
process_tag_para	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_para(line, para) "{{{$/;"	f
process_tag_pre	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_pre(line, pre) "{{{$/;"	f
process_tag_quote	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_quote(line, quote) "{{{$/;"	f
process_tag_table	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tag_table(line, table) "{{{$/;"	f
process_tags_links	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tags_links(line) " {{{$/;"	f
process_tags_remove_links	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tags_remove_links(line) " {{{$/;"	f
process_tags_typefaces	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:process_tags_typefaces(line) "{{{$/;"	f
processed	.\vimfiles\autoload\vimwiki_html.vim	/^    let processed = 1$/;"	v
processed	.\vimfiles\autoload\vimwiki_html.vim	/^  let processed = 0$/;"	v
progressbar.calculate_ticks	.\vim73\syntax\2html.vim	/^  func! s:progressbar.calculate_ticks(pb_len)$/;"	f
progressbar.incr	.\vim73\syntax\2html.vim	/^  func! s:progressbar.incr( ... )$/;"	f
progressbar.paint	.\vim73\syntax\2html.vim	/^  func! s:progressbar.paint()$/;"	f
project	.\vimfiles\plugin\bundler.vim	/^function! s:project(...) abort$/;"	f
project_alter_buffer_paths	.\vimfiles\plugin\bundler.vim	/^function! s:project_alter_buffer_paths() dict abort$/;"	f
project_gems	.\vimfiles\plugin\bundler.vim	/^function! s:project_gems() dict abort$/;"	f
project_path	.\vimfiles\plugin\bundler.vim	/^function! s:project_path(...) dict abort$/;"	f
promptToDelBuffer	.\vimfiles\plugin\NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
push_chdir	.\vimfiles\autoload\rails.vim	/^function! s:push_chdir(...)$/;"	f
push_chdir	.\vimfiles\plugin\bundler.vim	/^function! s:push_chdir()$/;"	f
put	.\vimfiles\autoload\l9\async.py	/^    def put(self, executor):$/;"	m	class:Worker	access:public
putCursorInTreeWin	.\vimfiles\plugin\NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	.\vimfiles\plugin\NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
python3complete#Complete	.\vim73\autoload\python3complete.vim	/^function! python3complete#Complete(findstart, base)$/;"	f
python_highlight_builtin_funcs	.\vimfiles\syntax\python.vim	/^      let python_highlight_builtin_funcs = 1$/;"	v
python_highlight_builtin_objs	.\vimfiles\syntax\python.vim	/^      let python_highlight_builtin_objs = 1$/;"	v
python_highlight_doctests	.\vimfiles\syntax\python.vim	/^    let python_highlight_doctests = 1$/;"	v
python_highlight_exceptions	.\vimfiles\syntax\python.vim	/^    let python_highlight_exceptions = 1$/;"	v
python_highlight_indent_errors	.\vimfiles\syntax\python.vim	/^    let python_highlight_indent_errors = 1$/;"	v
python_highlight_space_errors	.\vimfiles\syntax\python.vim	/^    let python_highlight_space_errors = 1$/;"	v
python_highlight_string_format	.\vimfiles\syntax\python.vim	/^    let python_highlight_string_format = 1$/;"	v
python_highlight_string_formatting	.\vimfiles\syntax\python.vim	/^    let python_highlight_string_formatting = 1$/;"	v
python_highlight_string_templates	.\vimfiles\syntax\python.vim	/^    let python_highlight_string_templates = 1$/;"	v
python_space_error_highlight	.\vim73\syntax\python.vim	/^  let python_space_error_highlight = 1$/;"	v
pythoncomplete#Complete	.\vim73\autoload\pythoncomplete.vim	/^function! pythoncomplete#Complete(findstart, base)$/;"	f
q	.\vim73\macros\less.vim	/^noremap q :q<CR>$/;"	m
r	.\vim73\macros\less.vim	/^noremap <script> r <C-L><SID>L$/;"	m
rails#app	.\vimfiles\autoload\rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	.\vimfiles\autoload\rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	.\vimfiles\autoload\rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	.\vimfiles\autoload\rails.vim	/^function! rails#camelize(str)$/;"	f
rails#log_syntax	.\vimfiles\autoload\rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	.\vimfiles\autoload\rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#pluralize	.\vimfiles\autoload\rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	.\vimfiles\autoload\rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	.\vimfiles\autoload\rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	.\vimfiles\plugin\rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	.\vimfiles\autoload\rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	.\vimfiles\plugin\rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMenu	.\vimfiles\plugin\rails.vim	/^augroup railsPluginMenu$/;"	a
rangeSiblings	.\vimfiles\plugin\voom\voom.py	/^def rangeSiblings(VO, lnum1, lnum2): #{{{2$/;"	f	access:public
re	.\vimfiles\lib\extras\cocoa_classes.py	/^import os, re$/;"	i
re	.\vimfiles\lib\extras\cocoa_definitions.py	/^import os, commands, re$/;"	i
re	.\vimfiles\lib\extras\cocoa_methods.py	/^import re, os, gzip$/;"	i
re	.\vimfiles\plugin\voom\voom.py	/^import sys, os, re$/;"	i
re	.\vimfiles\plugin\voom\voom_mode_html.py	/^import re$/;"	i
re	.\vimfiles\plugin\voom\voom_mode_txt2tags.py	/^import re$/;"	i
re	.\vimfiles\plugin\voom\voom_mode_viki.py	/^import re$/;"	i
re	.\vimfiles\plugin\voom\voom_mode_vimwiki.py	/^import re$/;"	i
re	.\vimfiles\plugin\voom\voom_mode_wiki.py	/^import re$/;"	i
re	.\vimfiles\voom_addons\custom_headlines.vim	/^import re$/;"	m
readTagFile	.\vimfiles\doc\vim2html.pl	/^sub readTagFile$/;"	s
read_file	.\vimfiles\lib\extras\build_syntaxfile.py	/^def read_file(fname):$/;"	f	access:public
readable_app	.\vimfiles\autoload\rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	.\vimfiles\autoload\rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	.\vimfiles\autoload\rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	.\vimfiles\autoload\rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_define_pattern	.\vimfiles\autoload\rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	.\vimfiles\autoload\rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_last_format	.\vimfiles\autoload\rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_method	.\vimfiles\autoload\rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	.\vimfiles\autoload\rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	.\vimfiles\autoload\rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	.\vimfiles\autoload\rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	.\vimfiles\autoload\rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_preview_urls	.\vimfiles\autoload\rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_related	.\vimfiles\autoload\rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_type_name	.\vimfiles\autoload\rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readfile	.\vimfiles\autoload\rails.vim	/^function! s:readfile(path,...)$/;"	f
readline	.\vimfiles\plugin\voom\voom_mode_python.py	/^    def readline(self):$/;"	m	class:BLines	access:public
record_output	.\vimfiles\autoload\l9\async.py	/^    def record_output(self, line):$/;"	m	class:Worker	access:public
refresh	.\vimfiles\plugin\functionlist.vim	/^function! s:refresh()$/;"	f
refreshCurrent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:refreshCurrent()$/;"	f
refreshRoot	.\vimfiles\plugin\NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
region_in_region	.\vimfiles\autoload\zencoding.vim	/^function! s:region_in_region(outer, inner)$/;"	f
region_in_region	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:region_in_region(outer, inner)$/;"	f
region_is_valid	.\vimfiles\autoload\zencoding.vim	/^function! s:region_is_valid(region)$/;"	f
region_is_valid	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:region_is_valid(region)$/;"	f
registerCoverage	.\vimfiles\autoload\fuf\coveragefile.vim	/^function s:registerCoverage()$/;"	f
registryProperty	.\vim73\tools\xcmdsrv_client.c	/^static Atom	registryProperty = None;$/;"	v	file:
reindex	.\vimfiles\plugin\functionlist.vim	/^function! s:reindex()$/;"	f
relglob	.\vimfiles\autoload\rails.vim	/^function! s:relglob(...)$/;"	f
removeItemFromCache	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
remove_blank_lines	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:remove_blank_lines(lines) " {{{$/;"	f
remove_comments	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:remove_comments(lines) "{{{$/;"	f
remove_continuation	.\vim73\indent\make.vim	/^function s:remove_continuation(line)$/;"	f
remove_indent	.\vimfiles\plugin\jsbeautify.vim	/^function! s:remove_indent()$/;"	f
removed	.\vim73\syntax\2html.vim	/^	  let removed = 1$/;"	v
removed	.\vim73\syntax\2html.vim	/^	let removed = 1$/;"	v
removed	.\vim73\syntax\2html.vim	/^    let removed = 0$/;"	v
renameCurrent	.\vimfiles\plugin\NERD_tree.vim	/^function! s:renameCurrent()$/;"	f
renderBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderView	.\vimfiles\plugin\NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	.\vimfiles\plugin\NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
renewCachesOfAllModes	.\vimfiles\plugin\fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
repeat	.\vim73\ftplugin\cobol.vim	/^function! s:repeat(str,count)$/;"	f
resetomnicomplete	.\vimfiles\autoload\rails.vim	/^function! s:resetomnicomplete()$/;"	f
resize	.\vimfiles\plugin\functionlist.vim	/^function! s:resize()$/;"	f
resizeRec	.\vimfiles\plugin\functionlist.vim	/^function! s:resizeRec()$/;"	f
restoreScreenState	.\vimfiles\plugin\NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restoreTempOptions	.\vimfiles\autoload\acp.vim	/^function s:restoreTempOptions(group)$/;"	f
restore_mode	.\vimfiles\plugin\jsbeautify.vim	/^function! s:restore_mode()$/;"	f
revealBookmark	.\vimfiles\plugin\NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
root_path	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:root_path(subdir) "{{{$/;"	f
rquote	.\vimfiles\autoload\rails.vim	/^function! s:rquote(str)$/;"	f
ruby_minlines	.\vim73\syntax\ruby.vim	/^    let ruby_minlines = 50$/;"	v
ruby_minlines	.\vimfiles\syntax\ruby.vim	/^    let ruby_minlines = 50$/;"	v
rubycomplete#Complete	.\vim73\autoload\rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Complete	.\vimfiles\autoload\rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	.\vim73\autoload\rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubycomplete#Init	.\vimfiles\autoload\rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	.\vimfiles\autoload\l9\async.py	/^    def run(self):$/;"	m	class:Worker	access:public
rx_cb_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:rx_cb_list_item() "{{{$/;"	f
rx_li_symbol	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:rx_li_symbol(rate) "{{{$/;"	f
rx_list_item	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:rx_list_item() "{{{$/;"	f
s	.\vim73\syntax\xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	.\vim73\syntax\xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	.\vim73\syntax\xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	.\vim73\syntax\xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	.\vim73\syntax\xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	.\vim73\syntax\xpm2.vim	/^    let s = getline(i)$/;"	v
s	.\vimfiles\plugin\voom\voom.py	/^            vim.command("call Voom_ErrorMsg('VOoM: cannot import Python module %s')" %module.replace("'","''"))$/;"	i
s	.\vimfiles\voom_samples\test_outline.py	/^       "$/;"	v
s:ABBR_SNIP_MASK	.\vimfiles\autoload\fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ASYNC_PY_PATH	.\vimfiles\autoload\l9\async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:AdaBlockStart	.\vim73\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|project\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:AdaBlockStart	.\vim73\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:Bookmark	.\vimfiles\plugin\NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:C	.\vimfiles\autoload\genutils.vim	/^let s:C = 100$/;"	v
s:ColonEnd	.\vim73\indent\occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	.\vim73\indent\occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	.\vim73\indent\occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:ColonStart	.\vim73\indent\occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommentLine	.\vim73\indent\occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:D	.\vimfiles\autoload\genutils.vim	/^let s:D = 500$/;"	v
s:DATA_FILE_VERSION	.\vimfiles\autoload\fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:ERROR	.\vim73\autoload\netrw.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	.\vim73\autoload\vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	.\vim73\autoload\zip.vim	/^let s:ERROR          = 2$/;"	v
s:ES	.\vim73\indent\vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:FUF_BUF_NAME	.\vimfiles\autoload\fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:Fenc16bit	.\vimfiles\plugin\fencview.vim	/^let s:Fenc16bit=[$/;"	v
s:Fenc8bit	.\vimfiles\plugin\fencview.vim	/^let s:Fenc8bit=[$/;"	v
s:FencUnicode	.\vimfiles\plugin\fencview.vim	/^let s:FencUnicode=[$/;"	v
s:FencWinName	.\vimfiles\plugin\fencview.vim	/^let s:FencWinName="FencView_8795684"$/;"	v
s:FirstLevelIndent	.\vim73\indent\occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\|VALOF\\|CLAIM\\|FORKING\\)\\>\\|\\(--.*\\)\\@<!\\(\\<PROC\\>\\|??\\|\\<CASE\\>\\s*\\(--.*\\)\\=\\_$\\)'$/;"	v
s:FirstLevelNonColonEndIndent	.\vim73\indent\occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	.\vim73\autoload\ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:GROUP0	.\vimfiles\autoload\acp.vim	/^let s:GROUP0 = 0$/;"	v
s:GROUP1	.\vimfiles\autoload\acp.vim	/^let s:GROUP1 = 1$/;"	v
s:HtmlEndline	.\vim73\syntax\2html.vim	/^  let s:HtmlEndline = '<br' . s:tag_close$/;"	v
s:HtmlEndline	.\vim73\syntax\2html.vim	/^let s:HtmlEndline = ''$/;"	v
s:HtmlSpace	.\vim73\syntax\2html.vim	/^  let s:HtmlSpace = '\\' . s:LeadingSpace$/;"	v
s:HtmlSpace	.\vim73\syntax\2html.vim	/^let s:HtmlSpace = ' '$/;"	v
s:I	.\vimfiles\autoload\genutils.vim	/^let s:I = 1$/;"	v
s:L	.\vimfiles\autoload\genutils.vim	/^let s:L = 50$/;"	v
s:L9_VERSION_CURRENT	.\vimfiles\autoload\l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	.\vimfiles\autoload\l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:LeadingSpace	.\vim73\syntax\2html.vim	/^  let s:LeadingSpace = '&nbsp;'$/;"	v
s:LeadingSpace	.\vim73\syntax\2html.vim	/^let s:LeadingSpace = ' '$/;"	v
s:M	.\vimfiles\autoload\genutils.vim	/^let s:M = 1000$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	.\vimfiles\autoload\fuf\taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MRU_Exclude_List	.\vimfiles\plugin\bufexplorer.vim	/^let s:MRU_Exclude_List = ["[BufExplorer]","__MRU_Files__"]$/;"	v
s:NC	.\vim73\indent\vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	.\vim73\indent\vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NERDTreeBufName	.\vimfiles\plugin\NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	.\vimfiles\plugin\NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	.\vimfiles\plugin\NERD_tree.vim	/^let s:NERD_tree_version = '3.1.1'$/;"	v
s:NOTE	.\vim73\autoload\netrw.vim	/^ let s:NOTE    = 0$/;"	v
s:NOTE	.\vim73\autoload\zip.vim	/^let s:NOTE           = 0$/;"	v
s:OPEN_TYPE_CURRENT	.\vimfiles\autoload\fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	.\vimfiles\autoload\fuf\buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	.\vimfiles\autoload\fuf\line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	.\vimfiles\autoload\fuf\mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	.\vimfiles\autoload\fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	.\vimfiles\autoload\fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	.\vimfiles\autoload\fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:PHP_startindenttag	.\vim73\indent\php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:PHP_startindenttag	.\vimfiles\indent\php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:Path	.\vimfiles\plugin\NERD_tree.vim	/^let s:Path = {}$/;"	v
s:ReferenceName	.\vim73\syntax\rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\+\\%([_.-][[:alnum:]]\\+\\)*'$/;"	v
s:SQLBlockEnd	.\vim73\indent\sqlanywhere.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	.\vim73\indent\sqlanywhere.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SecondLevelIndent	.\vim73\indent\occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CASE\\>\\s*\\(--.*\\)\\=\\_$'$/;"	v
s:SecondLevelNonColonEndIndent	.\vim73\indent\occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:TEMP_VARIABLES_GROUP	.\vimfiles\autoload\fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	.\vimfiles\autoload\fuf\buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TemplatVersion	.\vimfiles\plugin\QuickTemplate.vim	/^let s:TemplatVersion = '$Id: QuickTemplate.vim 221 2008-11-05 15:17:34Z i.feelinglucky $'$/;"	v
s:Tlist_Skip_Refresh	.\vimfiles\plugin\taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	.\vimfiles\plugin\NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	.\vimfiles\plugin\NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:UNPROTECTED_CHAR_PRFX	.\vimfiles\autoload\genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:USAGE	.\vim73\autoload\vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:V	.\vimfiles\autoload\genutils.vim	/^let s:V = 5$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcsbzr.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('BZR', expand('<sfile>'), s:bzrFunctions, [])$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcscommand.vim	/^let s:VCSCommandUtility = {}$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcscvs.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('CVS', expand('<sfile>'), s:cvsFunctions, s:cvsExtensionMappings)$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcsgit.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('git', expand('<sfile>'), s:gitFunctions, [])$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcshg.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('HG', expand('<sfile>'), s:hgFunctions, [])$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcssvk.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('SVK', expand('<sfile>'), s:svkFunctions, [])$/;"	v
s:VCSCommandUtility	.\vimfiles\plugin\vcssvn.vim	/^let s:VCSCommandUtility = VCSCommandRegisterModule('SVN', expand('<sfile>'), s:svnFunctions, [])$/;"	v
s:VERSION_FACTOR	.\vimfiles\autoload\l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:WARNING	.\vim73\autoload\netrw.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	.\vim73\autoload\vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	.\vim73\autoload\zip.vim	/^let s:WARNING        = 1$/;"	v
s:X	.\vimfiles\autoload\genutils.vim	/^let s:X = 10$/;"	v
s:abstract_prototype	.\vimfiles\plugin\bundler.vim	/^let s:abstract_prototype = {}$/;"	v
s:adverbs	.\vim73\syntax\perl6.vim	/^    let s:adverbs = [$/;"	v
s:after	.\vim73\syntax\perl6.vim	/^    let s:after  = "\\\\%(\\\\_s*:!\\\\?\\\\K\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)*\\\\%(([^)]*)\\\\|\\\\[[^\\\\]]*]\\\\|<[^>]*>\\\\|Â«[^Â»]*Â»\\\\|{[^}]*}\\\\)\\\\?\\\\)*\\\\_s*\\\\)\\\\@<="$/;"	v
s:after_keyword	.\vim73\syntax\perl6.vim	/^let s:after_keyword = "\\\\)\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)\\\\@!\\""$/;"	v
s:allfolds	.\vim73\syntax\2html.vim	/^let s:allfolds = []$/;"	v
s:alt_arrays	.\vimfiles\syntax\php.vim	/^  let s:alt_arrays = (s:strict_blocks ? s:ChooseValue('php_alt_arrays', 1) : 0)$/;"	v
s:alt_blocks	.\vimfiles\syntax\php.vim	/^  let s:alt_blocks = (s:strict_blocks && s:ChooseValue('php_alt_blocks', 1))$/;"	v
s:alt_comparisons	.\vimfiles\syntax\php.vim	/^  let s:alt_comparisons = s:ChooseValue('php_alt_comparisons', s:ChooseValue('php_oldStyle', 1))$/;"	v
s:alt_control_parents	.\vimfiles\syntax\php.vim	/^  let s:alt_control_parents = s:ChooseValue('php_alt_construct_parents', 0)$/;"	v
s:alt_properties	.\vimfiles\syntax\php.vim	/^  let s:alt_properties = (s:smart_members && s:ChooseValue('php_alt_properties', 0))$/;"	v
s:alt_refs	.\vimfiles\syntax\php.vim	/^  let s:alt_refs = s:ChooseValue('php_alt_assignByReference', 1)$/;"	v
s:ant_cpo_save	.\vim73\syntax\ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:app_prototype	.\vimfiles\autoload\rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	.\vimfiles\autoload\rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	.\vimfiles\autoload\rails.vim	/^  let s:apps = {}$/;"	v
s:asp_tags	.\vimfiles\syntax\php.vim	/^  let s:asp_tags = s:ChooseValue('php_asp_tags', 0)$/;"	v
s:assignment_rx	.\vim73\indent\make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:attr	.\vim73\syntax\2html.vim	/^  let s:attr = ""$/;"	v
s:attr	.\vim73\syntax\2html.vim	/^  let s:attr = s:CSS1(s:id)$/;"	v
s:attributes	.\vim73\indent\haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:autoinstall	.\vim73\autoload\getscript.vim	/^  let s:autoinstall= $HOME."\/".s:dotvim$/;"	v
s:autoinstall	.\vim73\autoload\getscript.vim	/^  let s:autoinstall= g:GetLatestVimScripts_autoinstalldir"$/;"	v
s:autoinstall	.\vim73\autoload\getscript.vim	/^let s:autoinstall= ""$/;"	v
s:autoresetoptions	.\vim73\indent\php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	.\vim73\indent\php.vim	/^let s:autoresetoptions = 0$/;"	v
s:autoresetoptions	.\vimfiles\indent\php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	.\vimfiles\indent\php.vim	/^let s:autoresetoptions = 0$/;"	v
s:b	.\vimfiles\after\syntax\css.vim	/^      let s:b = strridx(s:olddef,'matchgroup')$/;"	v
s:b	.\vimfiles\colors\solarized.vim	/^    let s:b           = ""$/;"	v
s:b	.\vimfiles\colors\solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:b	.\vimfiles\syntax\css.vim	/^      let s:b = strridx(s:olddef,'matchgroup')$/;"	v
s:back	.\vimfiles\colors\solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	.\vimfiles\colors\solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	.\vimfiles\colors\solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	.\vimfiles\colors\solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	.\vimfiles\colors\solarized.vim	/^    let s:back        = s:base03$/;"	v
s:badsymbols	.\vimfiles\autoload\vimwiki.vim	/^let s:badsymbols = '['.g:vimwiki_badsyms.g:vimwiki_stripsym.'<>|?*:"]'$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	.\vimfiles\colors\solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	.\vimfiles\colors\solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	.\vimfiles\colors\solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	.\vimfiles\colors\solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	.\vimfiles\colors\solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	.\vimfiles\colors\solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	.\vimfiles\colors\solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	.\vimfiles\colors\solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:basic16	.\vimfiles\plugin\colorizer.vim	/^let s:basic16 = [ [ 0x00, 0x00, 0x00 ], [ 0xCD, 0x00, 0x00 ], [ 0x00, 0xCD, 0x00 ], [ 0xCD, 0xCD, 0x00 ], [ 0x00, 0x00, 0xEE ], [ 0xCD, 0x00, 0xCD ], [ 0x00, 0xCD, 0xCD ], [ 0xE5, 0xE5, 0xE5 ], [ 0x7F, 0x7F, 0x7F ], [ 0xFF, 0x00, 0x00 ], [ 0x00, 0xFF, 0x00 ], [ 0xFF, 0xFF, 0x00 ], [ 0x5C, 0x5C, 0xFF ], [ 0xFF, 0x00, 0xFF ], [ 0x00, 0xFF, 0xFF ], [ 0xFF, 0xFF, 0xFF ] ]$/;"	v
s:basic16	.\vimfiles\syntax\css.vim	/^let s:basic16 = [ [ 0x00, 0x00, 0x00 ], [ 0xCD, 0x00, 0x00 ], [ 0x00, 0xCD, 0x00 ], [ 0xCD, 0xCD, 0x00 ], [ 0x00, 0x00, 0xEE ], [ 0xCD, 0x00, 0xCD ], [ 0x00, 0xCD, 0xCD ], [ 0xE5, 0xE5, 0xE5 ], [ 0x7F, 0x7F, 0x7F ], [ 0xFF, 0x00, 0x00 ], [ 0x00, 0xFF, 0x00 ], [ 0xFF, 0xFF, 0x00 ], [ 0x5C, 0x5C, 0xFF ], [ 0xFF, 0x00, 0xFF ], [ 0x00, 0xFF, 0xFF ], [ 0xFF, 0xFF, 0xFF ] ]$/;"	v
s:bb	.\vimfiles\colors\solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	.\vimfiles\colors\solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:beflet	.\vim73\indent\ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:beflet	.\vim73\indent\sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|;\\)\\s*$'$/;"	v
s:before	.\vim73\syntax\perl6.vim	/^    let s:before = "syn region p6StringQ matchgroup=p6Quote start=\\"\\\\%("$/;"	v
s:before_keyword	.\vim73\syntax\perl6.vim	/^let s:before_keyword = " display \\"\\\\%(\\\\k\\\\|\\\\K\\\\@<=[-']\\\\)\\\\@<!\\\\%("$/;"	v
s:behavsCurrent	.\vimfiles\autoload\acp.vim	/^let s:behavsCurrent = []$/;"	v
s:bgc	.\vim73\syntax\2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	.\vim73\syntax\2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(hlID("Normal"), "bg#", s:whatterm))$/;"	v
s:block_regex	.\vim73\indent\ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	.\vimfiles\indent\ruby.vim	/^let s:block_regex =$/;"	v
s:blockstart	.\vim73\indent\php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:blockstart	.\vimfiles\indent\php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:blue	.\vimfiles\colors\solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	.\vimfiles\colors\solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	.\vimfiles\colors\solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	.\vimfiles\colors\solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	.\vimfiles\colors\solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bmenu_wait	.\vim73\menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:both	.\vim73\syntax\perl6.vim	/^let s:both = [s:infix_a_pattern, s:infix_n_pattern]$/;"	v
s:bracket_continuation_regex	.\vimfiles\indent\ruby.vim	/^let s:bracket_continuation_regex = '\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bright	.\vimfiles\colors\solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	.\vim73\ftplugin\ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	.\vim73\ftplugin\haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	.\vim73\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\php.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\php.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\sgml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\sgml.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\svg.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\svg.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\tcsh.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\tcsh.vim	/^let s:browsefilter = "csh Files (*.csh)\\t*.csh\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	.\vim73\ftplugin\xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vim73\ftplugin\xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\vimfiles\ftplugin\eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\vimfiles\ftplugin\eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.\vimfiles\ftplugin\eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bufTimes	.\vimfiles\autoload\fuf\buffer.vim	/^let s:bufTimes = {}$/;"	v
s:bufferCursorPosMap	.\vimfiles\autoload\fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffer_prototype	.\vimfiles\autoload\rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	.\vimfiles\plugin\bundler.vim	/^let s:buffer_prototype = {}$/;"	v
s:byte_pattern	.\vim73\syntax\cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:bzrFunctions	.\vimfiles\plugin\vcsbzr.vim	/^let s:bzrFunctions = {}$/;"	v
s:bzrFunctions	.\vimfiles\plugin\vcsbzr.vim	/^let s:bzrFunctions.AnnotateSplitRegex = '^[^|]\\+ | '$/;"	v
s:c	.\vimfiles\colors\solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:c_flow_indicator	.\vim73\syntax\yaml.vim	/^let s:c_flow_indicator = '[,\\[\\]{}]'$/;"	v
s:c_indicator	.\vim73\syntax\yaml.vim	/^let s:c_indicator      = '[\\-?:,\\[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	.\vim73\syntax\yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	.\vim73\syntax\yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	.\vim73\syntax\yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	.\vim73\syntax\yaml.vim	/^let s:c_ns_anchor_char = '\\%(\\%([\\n\\r\\uFEFF \\t,\\[\\]{}]\\)\\@!\\p\\)'$/;"	v
s:c_ns_anchor_name	.\vim73\syntax\yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	.\vim73\syntax\yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	.\vim73\syntax\yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	.\vim73\syntax\yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	.\vim73\syntax\yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	.\vim73\syntax\yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	.\vim73\syntax\yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	.\vim73\syntax\yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache_list	.\vim73\autoload\syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_name	.\vim73\autoload\syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:cache_prototype	.\vimfiles\autoload\rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cascade_del	.\vimfiles\plugin\FavMenu.vim	/^let s:cascade_del=exists('fav_cascade_del')$/;"	v
s:class	.\vim73\ftplugin\php.vim	/^let s:class = '\\(abstract\\s\\+\\|final\\s\\+\\)*class'$/;"	v
s:cocoa_indexes	.\vimfiles\autoload\cocoacomplete.vim	/^let s:cocoa_indexes = s:lib_dir.'cocoa_indexes\/'$/;"	v
s:cocoa_indexes	.\vimfiles\autoload\objc\cocoacomplete.vim	/^let s:cocoa_indexes = s:lib_dir.'cocoa_indexes\/'$/;"	v
s:code	.\vim73\ftplugin\ruby.vim	/^    let s:code = "print ($: + begin; require %q{rubygems}; Gem.all_load_paths.sort.uniq; rescue LoadError; []; end).join(%q{,})"$/;"	v
s:code	.\vimfiles\ftplugin\ruby.vim	/^      let s:code = "print $:.join(%q{,})"$/;"	v
s:col	.\vim73\syntax\2html.vim	/^	let s:col = s:col + 1$/;"	v
s:col	.\vim73\syntax\2html.vim	/^    let s:col = 1$/;"	v
s:colorscheme_list	.\vimfiles\colors\solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:colortable	.\vimfiles\plugin\colorizer.vim	/^let s:colortable=[] "{{{2$/;"	v
s:colortable	.\vimfiles\syntax\css.vim	/^let s:colortable=[]$/;"	v
s:colours	.\vimfiles\colors\bandit.vim	/^	let s:colours = ColourAssignment[key]$/;"	v
s:colours	.\vimfiles\colors\bandit.vim	/^let s:colours = {}$/;"	v
s:command	.\vimfiles\syntax\php.vim	/^      let s:command = 'syntax match pregClassExcStart_<QUOTE> \/\\[\\^\\]\/ contained display'$/;"	v
s:command	.\vimfiles\syntax\php.vim	/^      let s:command = 'syntax match pregClassIncStart_<QUOTE> \/\\[\\]\/ contained display'$/;"	v
s:command	.\vimfiles\syntax\php.vim	/^      let s:command = 'syntax region pregClass<TYPE> start=\/\\ze.\/ matchgroup=pregClassParent end=\/\\]\/'$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands = {}$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	.\vimfiles\plugin\abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commands	.\vimfiles\plugin\bundler.vim	/^let s:commands = []$/;"	v
s:comment_rx	.\vim73\indent\make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:concealinfo	.\vim73\syntax\2html.vim	/^	let s:concealinfo = synconcealed(s:lnum, s:col)$/;"	v
s:concealinfo	.\vim73\syntax\2html.vim	/^    let s:concealinfo = [0, '']$/;"	v
s:conditionalEnd	.\vim73\ftplugin\matlab.vim	/^	let s:conditionalEnd = '\\(([^()]*\\)\\@!\\<end\\>\\([^()]*)\\)\\@!'$/;"	v
s:conditional_directive_rx	.\vim73\indent\make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:continuation_regex	.\vim73\indent\ruby.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.,:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:continuation_regex	.\vimfiles\indent\ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex2	.\vim73\indent\ruby.vim	/^let s:continuation_regex2 =$/;"	v
s:continuation_rx	.\vim73\indent\make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	.\vim73\indent\make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:cp932TopChars	.\vimfiles\plugin\fencview.vim	/^let s:cp932TopChars=[$/;"	v
s:cp936TopChars	.\vimfiles\plugin\fencview.vim	/^let s:cp936TopChars=[$/;"	v
s:cp949TopChars	.\vimfiles\plugin\fencview.vim	/^let s:cp949TopChars=[$/;"	v
s:cp950TopChars	.\vimfiles\plugin\fencview.vim	/^let s:cp950TopChars=[$/;"	v
s:cpo_sav	.\vim73\autoload\tohtml.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	.\vim73\syntax\2html.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\fortran_g77.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\gcc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\mcs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\onsgmls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\se.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\splint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\xmllint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\compiler\xmlwf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	.\vim73\ftplugin\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\changelog.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\dtrace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\haskell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\lua.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\msmessages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\ftplugin\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\perl6.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\sh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\indent\verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\optwin.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\plugin\matchparen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\scripts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\synmenu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\autohotkey.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\doxygen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\initex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\ldapconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\plaintex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\python.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\synload.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\xbl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vim73\syntax\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\autoload\rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\compiler\eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\compiler\rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\compiler\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\compiler\rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\ftplugin\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\indent\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\indent\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\plugin\grep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\plugin\mru.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\plugin\taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\plugin\winfileexplorer.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\vimfiles\plugin\winmanager.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	.\vim73\ftplugin\ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cposet	.\vim73\compiler\fortran_F.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\vim73\compiler\fortran_cv.vim	/^let s:cposet = &cpoptions$/;"	v
s:cposet	.\vim73\compiler\fortran_elf90.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\vim73\compiler\fortran_lf95.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\vim73\ftplugin\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\vim73\ftplugin\ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\vim73\indent\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cs_cpo_save	.\vim73\syntax\cs.vim	/^let s:cs_cpo_save = &cpo$/;"	v
s:cterm_color	.\vim73\syntax\2html.vim	/^    let s:cterm_color = {0: "#000000", 1: "#c00000", 2: "#008000", 3: "#804000", 4: "#0000c0", 5: "#c000c0", 6: "#008080", 7: "#c0c0c0", 8: "#808080", 9: "#ff6060", 10: "#00ff00", 11: "#ffff00", 12: "#8080ff", 13: "#ff40ff", 14: "#00ffff", 15: "#ffffff"}$/;"	v
s:cterm_color	.\vim73\syntax\2html.vim	/^    let s:cterm_color = {0: "#808080", 1: "#ff6060", 2: "#00ff00", 3: "#ffff00", 4: "#8080ff", 5: "#ff40ff", 6: "#00ffff", 7: "#ffffff"}$/;"	v
s:cur_menu_char	.\vim73\makemenu.vim	/^let s:cur_menu_char = ""$/;"	v
s:cur_menu_item	.\vim73\makemenu.vim	/^let s:cur_menu_item = 0$/;"	v
s:cur_menu_name	.\vim73\makemenu.vim	/^let s:cur_menu_name = ""$/;"	v
s:cur_menu_nr	.\vim73\makemenu.vim	/^let s:cur_menu_nr = 0$/;"	v
s:current_syntax	.\vim73\syntax\2html.vim	/^  let s:current_syntax = 'none'$/;"	v
s:current_syntax	.\vim73\syntax\2html.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	.\vim73\syntax\2html.vim	/^  let s:current_syntax = w:current_syntax$/;"	v
s:cvsExtensionMappings	.\vimfiles\plugin\vcscvs.vim	/^		let s:cvsExtensionMappings[shortCut] = commandText$/;"	v
s:cvsExtensionMappings	.\vimfiles\plugin\vcscvs.vim	/^let s:cvsExtensionMappings = {}$/;"	v
s:cvsFunctions	.\vimfiles\plugin\vcscvs.vim	/^let s:cvsFunctions = {}$/;"	v
s:cvsFunctions	.\vimfiles\plugin\vcscvs.vim	/^let s:cvsFunctions.AnnotateSplitRegex = '): '$/;"	v
s:cyan	.\vimfiles\colors\solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	.\vimfiles\colors\solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	.\vimfiles\colors\solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	.\vimfiles\colors\solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	.\vimfiles\colors\solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:dataMap	.\vimfiles\autoload\l9\tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:dbext_buffer_last	.\vimfiles\autoload\dbext.vim	/^let s:dbext_buffer_last       = -1$/;"	v
s:dbext_buffer_last_winnr	.\vimfiles\autoload\dbext.vim	/^let s:dbext_buffer_last_winnr = -1$/;"	v
s:dbext_buffers_with_dict_files	.\vimfiles\autoload\dbext.vim	/^let s:dbext_buffers_with_dict_files = []$/;"	v
s:dbext_prev_sql	.\vimfiles\autoload\dbext.vim	/^let s:dbext_prev_sql     = ''$/;"	v
s:dbext_result_count	.\vimfiles\autoload\dbext.vim	/^let s:dbext_result_count = 0$/;"	v
s:dbext_tempfile	.\vimfiles\autoload\dbext.vim	/^let s:dbext_tempfile = fnamemodify(tempname(), ":h").$/;"	v
s:defFCShellInstalled	.\vimfiles\autoload\genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:defaultMappings	.\vimfiles\plugin\vcscommand.vim	/^let s:defaultMappings = [$/;"	v
s:defaultORcase	.\vim73\indent\php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:defaults_list	.\vimfiles\colors\solarized.vim	/^let s:defaults_list=[$/;"	v
s:delims	.\vim73\syntax\perl6.vim	/^let s:delims = [$/;"	v
s:did_cocoa	.\vimfiles\plugin\cocoa.vim	/^let s:did_cocoa = 1$/;"	v
s:did_ft	.\vim73\syntax\syntax.vim	/^  let s:did_ft = 0$/;"	v
s:did_ft	.\vim73\syntax\syntax.vim	/^  let s:did_ft = 1$/;"	v
s:did_snip_helper	.\vimfiles\ftplugin\html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	.\vimfiles\after\plugin\snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:diff_id	.\vim73\syntax\2html.vim	/^	let s:diff_id = diff_hlID(s:lnum, s:col)$/;"	v
s:diff_id	.\vim73\syntax\2html.vim	/^    let s:diff_id = 0$/;"	v
s:diff_id_name	.\vim73\syntax\2html.vim	/^	  let s:diff_id_name = synIDattr(s:diff_id, "name", s:whatterm)$/;"	v
s:diff_id_name	.\vim73\syntax\2html.vim	/^    let s:diff_id_name = ""$/;"	v
s:diffattr	.\vim73\syntax\2html.vim	/^    let s:diffattr = diff_hlID(s:lnum, 1)$/;"	v
s:difffillchar	.\vim73\syntax\2html.vim	/^  let s:difffillchar = '-'$/;"	v
s:difffillchar	.\vim73\syntax\2html.vim	/^let s:difffillchar = &fillchars[matchend(&fillchars, 'diff:')]$/;"	v
s:direction	.\vimfiles\plugin\changeColorScheme.vim	/^let s:direction='NEXT'$/;"	v
s:disable_autodetection	.\vimfiles\plugin\fencview.vim	/^let s:disable_autodetection=0$/;"	v
s:docset_cmd	.\vimfiles\autoload\man.vim	/^let s:docset_cmd = '\/Developer\/usr\/bin\/docsetutil search -skip-text -query '$/;"	v
s:docset_cmd	.\vimfiles\autoload\objc\man.vim	/^let s:docset_cmd = '\/Developer\/usr\/bin\/docsetutil search -skip-text -query '$/;"	v
s:docsets	.\vimfiles\autoload\man.vim	/^let s:docsets =  []$/;"	v
s:docsets	.\vimfiles\autoload\objc\man.vim	/^let s:docsets =  []$/;"	v
s:dotvim	.\vim73\autoload\getscript.vim	/^  let s:dotvim= ".vim"$/;"	v
s:dotvim	.\vim73\autoload\getscript.vim	/^  let s:dotvim= "vimfiles"$/;"	v
s:dtd_cpo_save	.\vim73\syntax\dtd.vim	/^    let s:dtd_cpo_save = &cpo$/;"	v
s:efm_backtrace	.\vimfiles\autoload\rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:encoding	.\vim73\keymap\croatian.vim	/^	let s:encoding = 'cp1250'$/;"	v
s:encoding	.\vim73\keymap\croatian.vim	/^	let s:encoding = 'iso-8859-2'$/;"	v
s:encoding	.\vim73\keymap\croatian.vim	/^let s:encoding = &enc$/;"	v
s:end	.\vim73\syntax\2html.vim	/^    let s:end = line("$")$/;"	v
s:end	.\vim73\syntax\2html.vim	/^  let s:end = html_end_line$/;"	v
s:end	.\vim73\syntax\2html.vim	/^  let s:end = line("$")$/;"	v
s:end	.\vim73\syntax\2html.vim	/^  let s:end = line('$')$/;"	v
s:end	.\vim73\syntax\2html.vim	/^let s:end=line('$')$/;"	v
s:endEarly	.\vimfiles\syntax\php.vim	/^    let s:endEarly = s:nested_functions ? '' : 'matchgroup=Error end=\/\\%(^\\|\\s\\)function\\>\/'$/;"	v
s:end_conditional_directive_rx	.\vim73\indent\make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	.\vim73\indent\ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end\\>'$/;"	v
s:end_end_regex	.\vimfiles\indent\ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	.\vim73\indent\ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue\\>\\|when\\|elsif\\)\\>'$/;"	v
s:end_middle_regex	.\vimfiles\indent\ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	.\vim73\indent\ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_skip_expr	.\vimfiles\indent\ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	.\vim73\indent\ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:end_start_regex	.\vimfiles\indent\ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:endline	.\vim73\indent\php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:endline	.\vimfiles\indent\php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:enumeration_pattern	.\vim73\indent\rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:errorformat	.\vimfiles\plugin\bundler.vim	/^let s:errorformat = ''$/;"	v
s:esc_filename_chars	.\vimfiles\plugin\mru.vim	/^let s:esc_filename_chars = ' *?[{`$%#"|!<>();&' . "'\\t\\n"$/;"	v
s:escape_chars	.\vimfiles\plugin\NERD_tree.vim	/^let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>"$/;"	v
s:escfilename	.\vimfiles\plugin\winfileexplorer.vim	/^  let s:escfilename = ' %#'$/;"	v
s:escfilename	.\vimfiles\plugin\winfileexplorer.vim	/^  let s:escfilename = ' \\%#'$/;"	v
s:escfilename	.\vimfiles\plugin\winmanager.vim	/^	let s:escfilename = ' %#'$/;"	v
s:escfilename	.\vimfiles\plugin\winmanager.vim	/^	let s:escfilename = ' \\%#'$/;"	v
s:escregexp	.\vimfiles\plugin\winfileexplorer.vim	/^let s:escregexp = '\/*^$.~\\'$/;"	v
s:euc_jpTopChars	.\vimfiles\plugin\fencview.vim	/^let s:euc_jpTopChars=[$/;"	v
s:euc_twTopChars	.\vimfiles\plugin\fencview.vim	/^let s:euc_twTopChars=[$/;"	v
s:expandedtab	.\vim73\syntax\2html.vim	/^	    let s:expandedtab = substitute(s:expandedtab, '\\t', repeat(' ', s:i), '')$/;"	v
s:expandedtab	.\vim73\syntax\2html.vim	/^	let s:expandedtab = s:concealinfo[1]$/;"	v
s:expandedtab	.\vim73\syntax\2html.vim	/^	let s:expandedtab = strpart(s:line, s:startcol - 1, s:col - s:startcol)$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = "." . strpart(s:lang, 0, 2)$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = ".cs"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = ".de"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = ".nl"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = ".pl"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^      let s:ext = ".sk"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".cs.cp1250"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".el"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".el.cp737"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".el.utf-8"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".hr.cp1250"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".hu.cp1250"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".ja.euc"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".ja.sjis"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".ko.euc"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".pl.cp1250"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".sk.cp1250"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".tr.iso9"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".zh.big5"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = ".zh.euc"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = '.hr'$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = '.hu'$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = '.ru'$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^    let s:ext = '.ru.cp1251'$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext .= '.utf-8'$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext = ""$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext = "." . $xx$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext = ".de"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext = ".eo.utf-8"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^  let s:ext = ".vi.utf-8"$/;"	v
s:ext	.\vim73\tutor\tutor.vim	/^let s:ext = ""$/;"	v
s:extfname	.\vim73\syntax\tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:f	.\vim73\spell\cleanadd.vim	/^      let s:f = escape(s:fname, ' \\|<')$/;"	v
s:f	.\vim73\spell\cleanadd.vim	/^      let s:f = fnameescape(s:fname)$/;"	v
s:falcon_deindent_keywords	.\vim73\indent\falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	.\vim73\indent\falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:favDirs	.\vimfiles\plugin\winfileexplorer.vim	/^		let s:favDirs = expand('$HOME').'\/'$/;"	v
s:favDirs	.\vimfiles\plugin\winfileexplorer.vim	/^		let s:favDirs = g:favDirs."\\\/\\n".expand('$HOME')$/;"	v
s:favDirs	.\vimfiles\plugin\winfileexplorer.vim	/^let s:favDirs = substitute(s:favDirs, '\\', '\/', 'g')$/;"	v
s:favDirs	.\vimfiles\plugin\winfileexplorer.vim	/^let s:favDirs = substitute(s:favDirs, '\\\/\\\/', '\\\/', 'g')$/;"	v
s:fcShellPreFuncs	.\vimfiles\autoload\genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:fg_pdef	.\vimfiles\colors\solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	.\vimfiles\colors\solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	.\vimfiles\colors\solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:fgc	.\vim73\syntax\2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	.\vim73\syntax\2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(hlID("Normal"), "fg#", s:whatterm))$/;"	v
s:file	.\vimfiles\autoload\rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	.\vimfiles\autoload\rails.vim	/^let s:file_prototype = {}$/;"	v
s:filler	.\vim73\syntax\2html.vim	/^  let s:filler = diff_filler(s:lnum)$/;"	v
s:firstfold	.\vim73\syntax\2html.vim	/^	  let s:firstfold = 0$/;"	v
s:firstfold	.\vim73\syntax\2html.vim	/^      let s:firstfold = 1$/;"	v
s:fname	.\vim73\syntax\colortest.vim	/^    let s:fname = escape(s:fname, ' \\|')$/;"	v
s:fname	.\vim73\syntax\colortest.vim	/^    let s:fname = fnameescape(s:fname)$/;"	v
s:fname	.\vim73\syntax\colortest.vim	/^  let s:fname = expand('<sfile>')$/;"	v
s:foldHere	.\vimfiles\syntax\php.vim	/^    let s:foldHere = s:folding ? 'fold' : ''$/;"	v
s:foldId	.\vim73\syntax\2html.vim	/^	let s:foldId = s:foldId + 1$/;"	v
s:foldId	.\vim73\syntax\2html.vim	/^let s:foldId = 0$/;"	v
s:fold_arrays	.\vimfiles\syntax\php.vim	/^  let s:fold_arrays = (s:folding && s:ChooseValue('php_fold_arrays', 0))$/;"	v
s:fold_heredoc	.\vimfiles\syntax\php.vim	/^  let s:fold_heredoc = (s:folding && s:ChooseValue('php_fold_heredoc', 0))$/;"	v
s:fold_manual	.\vimfiles\syntax\php.vim	/^  let s:fold_manual = s:large_file ? 0 : s:ChooseValue('php_fold_manual', s:folding ? 1 : 0)$/;"	v
s:foldcolumn	.\vim73\syntax\2html.vim	/^	let s:foldcolumn = afold.level+1$/;"	v
s:foldcolumn	.\vim73\syntax\2html.vim	/^  let s:foldcolumn = &foldcolumn$/;"	v
s:folded_assignment_rx	.\vim73\indent\make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldfillchar	.\vim73\syntax\2html.vim	/^    let s:foldfillchar = '-'$/;"	v
s:foldfillchar	.\vim73\syntax\2html.vim	/^  let s:foldfillchar = &fillchars[matchend(&fillchars, 'fold:')]$/;"	v
s:folding	.\vimfiles\syntax\php.vim	/^  let s:folding = s:large_file ? 0 : s:ChooseValue('php_folding', 0)$/;"	v
s:foldstack	.\vim73\syntax\2html.vim	/^	let s:foldstack[0].id = s:foldId$/;"	v
s:foldstack	.\vim73\syntax\2html.vim	/^let s:foldstack = []$/;"	v
s:foldtext_save	.\vim73\syntax\2html.vim	/^  let s:foldtext_save = &foldtext$/;"	v
s:ft_rules_udev_rules_pattern	.\vim73\filetype.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	.\vim73\ftplugin\sql.vim	/^let s:ftplugin_sql_objects = $/;"	v
s:function	.\vim73\ftplugin\php.vim	/^let s:function = '\\(abstract\\s\\+\\|final\\s\\+\\|private\\s\\+\\|protected\\s\\+\\|public\\s\\+\\|static\\s\\+\\)*function'$/;"	v
s:gitFunctions	.\vimfiles\plugin\vcsgit.vim	/^let s:gitFunctions = {}$/;"	v
s:gitFunctions	.\vimfiles\plugin\vcsgit.vim	/^let s:gitFunctions.AnnotateSplitRegex = ') '$/;"	v
s:green	.\vimfiles\colors\solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	.\vimfiles\colors\solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	.\vimfiles\colors\solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	.\vimfiles\colors\solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	.\vimfiles\colors\solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:handler	.\vimfiles\autoload\fuf\bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\buffer.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\changelist.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\dir.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\file.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\givendir.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\help.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\line.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\tag.vim	/^let s:handler = {}$/;"	v
s:handler	.\vimfiles\autoload\fuf\taggedfile.vim	/^let s:handler = {}$/;"	v
s:handlerBase	.\vimfiles\autoload\fuf.vim	/^let s:handlerBase = {}$/;"	v
s:hgFunctions	.\vimfiles\plugin\vcshg.vim	/^let s:hgFunctions = {}$/;"	v
s:hgFunctions	.\vimfiles\plugin\vcshg.vim	/^let s:hgFunctions.AnnotateSplitRegex = '\\d\\+: '$/;"	v
s:hidden	.\vim73\syntax\hitest.vim	/^let s:hidden      = &hidden$/;"	v
s:htmlfont	.\vim73\syntax\2html.vim	/^  let s:htmlfont = "'". g:html_font . "', monospace"$/;"	v
s:htmlfont	.\vim73\syntax\2html.vim	/^  let s:htmlfont = "monospace"$/;"	v
s:i	.\vim73\ftplugin\ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	.\vim73\ftplugin\ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	.\vim73\ftplugin\ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	.\vim73\macros\less.vim	/^    let s:i = s:i + 1$/;"	v
s:i	.\vim73\macros\less.vim	/^  let s:i = 0$/;"	v
s:i	.\vim73\menu.vim	/^      let s:i = stridx(s:n, "\\n")$/;"	v
s:i	.\vim73\menu.vim	/^  let s:i = stridx(s:n, "\\n")$/;"	v
s:i	.\vim73\syntax\2html.vim	/^		let s:i = &ts - (s:vcol % &ts)$/;"	v
s:i	.\vim73\syntax\2html.vim	/^		let s:i = &ts$/;"	v
s:i	.\vim73\syntax\2html.vim	/^	      let s:i = &ts - ((s:idx + s:startcol - 1) % &ts)$/;"	v
s:i	.\vim73\syntax\help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:i	.\vimfiles\colors\solarized.vim	/^    let s:i           = ""$/;"	v
s:i	.\vimfiles\colors\solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:iBehavs	.\vimfiles\autoload\acp.vim	/^let s:iBehavs = 0$/;"	v
s:id	.\vim73\syntax\2html.vim	/^	let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	.\vim73\syntax\2html.vim	/^	let s:id = synIDtrans(s:id)$/;"	v
s:id	.\vim73\syntax\2html.vim	/^  let s:id = hlID('FoldColumn')$/;"	v
s:id	.\vim73\syntax\2html.vim	/^  let s:id = remove(s:idlist, 0)$/;"	v
s:id_name	.\vim73\syntax\2html.vim	/^	let s:id_name = 'Conceal'$/;"	v
s:id_name	.\vim73\syntax\2html.vim	/^	let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:id_name	.\vim73\syntax\2html.vim	/^  let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:idef	.\vim73\ftplugin\ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	.\vim73\ftplugin\ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	.\vim73\ftplugin\ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idlist	.\vim73\syntax\2html.vim	/^let s:idlist = []$/;"	v
s:idx	.\vim73\menu.vim	/^      let s:idx = s:idx + 10$/;"	v
s:idx	.\vim73\menu.vim	/^    let s:idx = 100$/;"	v
s:idx	.\vim73\menu.vim	/^  let s:idx = s:idx + 10$/;"	v
s:idx	.\vim73\menu.vim	/^let s:idx = 100$/;"	v
s:idx	.\vim73\optwin.vim	/^let s:idx = 1$/;"	v
s:idx	.\vim73\syntax\2html.vim	/^	    let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:idx	.\vim73\syntax\2html.vim	/^	  let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:infix	.\vim73\syntax\perl6.vim	/^let s:infix = "!\\\\?\\\\%(" . s:infix . "\\\\)"$/;"	v
s:infix	.\vim73\syntax\perl6.vim	/^let s:infix = join(s:both, "\\\\|")$/;"	v
s:infix_a	.\vim73\syntax\perl6.vim	/^let s:infix_a = [$/;"	v
s:infix_a_long	.\vim73\syntax\perl6.vim	/^let s:infix_a_long = join(s:infix_a, " ")$/;"	v
s:infix_a_pattern	.\vim73\syntax\perl6.vim	/^let s:infix_a_pattern = join(s:infix_a_words, "\\\\|")$/;"	v
s:infix_a_words	.\vim73\syntax\perl6.vim	/^let s:infix_a_words = split(s:infix_a_long)$/;"	v
s:infix_assoc	.\vim73\syntax\perl6.vim	/^let s:infix_assoc = "!\\\\?\\\\%(" . s:infix_a_pattern . "\\\\)"$/;"	v
s:infix_n	.\vim73\syntax\perl6.vim	/^let s:infix_n = "but does <=> leg cmp \\\\.\\\\. \\\\.\\\\.\\\\^\\\\^ \\\\^\\\\.\\\\. \\\\^\\\\.\\\\.\\\\^"$/;"	v
s:infix_n_pattern	.\vim73\syntax\perl6.vim	/^let s:infix_n_pattern = join(s:infix_n_words, "\\\\|")$/;"	v
s:infix_n_words	.\vim73\syntax\perl6.vim	/^let s:infix_n_words = split(s:infix_n)$/;"	v
s:inheritance_dent	.\vim73\indent\eiffel.vim	/^let s:inheritance_dent = '\\s*\\(redefine\\|rename\\|export\\)\\>'$/;"	v
s:initbeval	.\vim73\autoload\netrw.vim	/^ let s:initbeval = &beval$/;"	v
s:interface	.\vim73\ftplugin\php.vim	/^let s:interface = 'interface'$/;"	v
s:isEditFileRunning	.\vimfiles\plugin\vcscommand.vim	/^let s:isEditFileRunning = 0$/;"	v
s:is_elflord	.\vimfiles\syntax\php.vim	/^  let s:is_elflord = (exists('g:colors_name') && g:colors_name == 'elflord')$/;"	v
s:itemization_pattern	.\vim73\indent\rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:js_line_comment	.\vimfiles\indent\javascript.vim	/^let s:js_line_comment = '\\s*\\(\/\/.*\\)*'$/;"	v
s:js_m_anon_beg	.\vimfiles\indent\javascript.vim	/^let s:js_m_anon_beg = s:js_s_anon_beg . '\\s*{\\s*'$/;"	v
s:js_m_anon_end	.\vimfiles\indent\javascript.vim	/^let s:js_m_anon_end = '\\s*}\\s*' . s:js_s_anon_end$/;"	v
s:js_m_cntrl_beg	.\vimfiles\indent\javascript.vim	/^let s:js_m_cntrl_beg = s:js_s_cntrl_beg . '\\s*{\\s*'$/;"	v
s:js_m_cntrl_end	.\vimfiles\indent\javascript.vim	/^let s:js_m_cntrl_end = '^[^{]*}\\s*\\(while\\s*(.*)\\)\\=\\s*;\\=\\s*'$/;"	v
s:js_m_cntrl_mid	.\vimfiles\indent\javascript.vim	/^let s:js_m_cntrl_mid = '}\\=\\s*' . s:js_s_cntrl_mid . '\\s*{\\s*'$/;"	v
s:js_m_multi_end	.\vimfiles\indent\javascript.vim	/^let s:js_m_multi_end = s:js_s_multi_end . '\\s*{\\s*'$/;"	v
s:js_m_switch_beg	.\vimfiles\indent\javascript.vim	/^let s:js_m_switch_beg = s:js_s_switch_beg . '\\s*{\\s*'$/;"	v
s:js_multi_beg	.\vimfiles\indent\javascript.vim	/^let s:js_multi_beg = '([^()]*\\s*'$/;"	v
s:js_multi_invok_beg	.\vimfiles\indent\javascript.vim	/^let s:js_multi_invok_beg = s:js_multi_beg$/;"	v
s:js_multi_invok_end	.\vimfiles\indent\javascript.vim	/^let s:js_multi_invok_end = s:js_s_multi_end . '[;,]\\{1}\\s*'$/;"	v
s:js_object_beg	.\vimfiles\indent\javascript.vim	/^let s:js_object_beg = '[{\\[]\\s*'$/;"	v
s:js_object_end	.\vimfiles\indent\javascript.vim	/^let s:js_object_end = '^[^][{}]*[}\\]][;,]\\=\\s*'$/;"	v
s:js_s_anon_beg	.\vimfiles\indent\javascript.vim	/^let s:js_s_anon_beg = '(\\s*function\\s*(.*)\\s*'$/;"	v
s:js_s_anon_end	.\vimfiles\indent\javascript.vim	/^let s:js_s_anon_end = ')(.*)[;,]\\s*'$/;"	v
s:js_s_cntrl_beg	.\vimfiles\indent\javascript.vim	/^let s:js_s_cntrl_beg = '\\(\\(\\(if\\|for\\|with\\|while\\)\\s*(.*)\\)\\|\\(try\\|do\\)\\)\\s*' 		$/;"	v
s:js_s_cntrl_mid	.\vimfiles\indent\javascript.vim	/^let s:js_s_cntrl_mid = '\\(\\(\\(else\\s*if\\|catch\\)\\s*(.*)\\)\\|\\(finally\\|else\\)\\)\\s*'$/;"	v
s:js_s_multi_end	.\vimfiles\indent\javascript.vim	/^let s:js_s_multi_end = '^[^()]*)\\s*'$/;"	v
s:js_s_switch_beg	.\vimfiles\indent\javascript.vim	/^let s:js_s_switch_beg = 'switch\\s*(.*)\\s*' "Actually not allowed. $/;"	v
s:js_switch_mid	.\vimfiles\indent\javascript.vim	/^let s:js_switch_mid = '^.*\\(case.*\\|default\\)\\s*:\\s*'$/;"	v
s:just_inserted_rule_rx	.\vim73\indent\make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:keepcpo	.\vim73\autoload\getscript.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	.\vim73\autoload\netrw.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vim73\autoload\netrwFileHandlers.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vim73\autoload\tar.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vim73\autoload\vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vim73\autoload\zip.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vim73\plugin\getscriptPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	.\vim73\plugin\netrwPlugin.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	.\vim73\plugin\tarPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	.\vim73\plugin\vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keepcpo	.\vim73\plugin\zipPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	.\vim73\syntax\dnsmasq.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	.\vim73\syntax\tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\vimfiles\plugin\LargeFile.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keywords	.\vim73\syntax\perl6.vim	/^let s:keywords = {$/;"	v
s:lang	.\vim73\menu.vim	/^      let s:lang = ""$/;"	v
s:lang	.\vim73\menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	.\vim73\menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	.\vim73\menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	.\vim73\menu.vim	/^    let s:lang = v:lang$/;"	v
s:lang	.\vim73\tutor\tutor.vim	/^    let s:lang = $LANG$/;"	v
s:lang	.\vim73\tutor\tutor.vim	/^    let s:lang = $LC_ALL$/;"	v
s:lang	.\vim73\tutor\tutor.vim	/^    let s:lang = substitute(s:lang, '\\c@euro', '', '')$/;"	v
s:lang	.\vim73\tutor\tutor.vim	/^    let s:lang = v:lang$/;"	v
s:lang	.\vim73\tutor\tutor.vim	/^  let s:lang = ""$/;"	v
s:large_file	.\vimfiles\syntax\php.vim	/^  let s:large_file = (s:large_file_limit == 0) ? 0 : (line('$') >= s:large_file_limit)$/;"	v
s:large_file_limit	.\vimfiles\syntax\php.vim	/^  let s:large_file_limit = s:ChooseValue('php_large_file', 3000)$/;"	v
s:last_mps	.\vim73\macros\matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_mps	.\vimfiles\plugin\matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	.\vim73\macros\matchit.vim	/^let s:last_words = ":"$/;"	v
s:last_words	.\vimfiles\plugin\matchit.vim	/^let s:last_words = ":"$/;"	v
s:lazycat_list	.\vimfiles\colors\solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lazyredraw	.\vim73\syntax\hitest.vim	/^let s:lazyredraw  = &lazyredraw$/;"	v
s:len	.\vim73\syntax\2html.vim	/^	  let s:len = &columns$/;"	v
s:len	.\vim73\syntax\2html.vim	/^    let s:len = strlen(s:line)$/;"	v
s:length_pattern	.\vim73\syntax\cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\|\\d\\+\\)\\>'$/;"	v
s:letlim	.\vim73\indent\ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	.\vim73\indent\sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	.\vim73\indent\ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letpat	.\vim73\indent\sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:level	.\vim73\syntax\2html.vim	/^      let s:level = match(foldtextresult(s:lnum), '+-*\\zs[^-]') - 2$/;"	v
s:lib_dir	.\vimfiles\autoload\cocoacomplete.vim	/^let s:lib_dir = fnameescape($HOME.'\/.vim\/lib\/')$/;"	v
s:lib_dir	.\vimfiles\autoload\objc\cocoacomplete.vim	/^let s:lib_dir = fnameescape(expand('<sfile>:p:h:h:h').'\/lib\/')$/;"	v
s:lim	.\vim73\indent\ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	.\vim73\indent\sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line	.\vim73\syntax\2html.vim	/^	  let s:line = s:line . repeat(' ', &columns - virtcol([s:lnum, s:len]) - s:margin)$/;"	v
s:line	.\vim73\syntax\2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line1	.\vim73\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\<env\\s\\+', '', '')$/;"	v
s:line1	.\vim73\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\S\\+=\\S\\+', '', 'g')$/;"	v
s:line1	.\vim73\scripts.vim	/^let s:line1 = getline(1)$/;"	v
s:line2	.\vim73\scripts.vim	/^  let s:line2 = getline(2)$/;"	v
s:line3	.\vim73\scripts.vim	/^  let s:line3 = getline(3)$/;"	v
s:line4	.\vim73\scripts.vim	/^  let s:line4 = getline(4)$/;"	v
s:line5	.\vim73\scripts.vim	/^  let s:line5 = getline(5)$/;"	v
s:lines	.\vim73\ftplugin\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\vim73\ftplugin\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\vim73\syntax\2html.vim	/^    let s:lines[-1].="<\/span><\/span>"$/;"	v
s:lines	.\vim73\syntax\2html.vim	/^let s:lines = []$/;"	v
s:lines	.\vim73\syntax\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\vim73\syntax\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\vimfiles\ftplugin\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\vimfiles\syntax\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lmax	.\vim73\ftplugin\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\vim73\ftplugin\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	.\vim73\indent\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\vim73\indent\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	.\vim73\syntax\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\vim73\syntax\fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	.\vim73\ftplugin\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\vim73\ftplugin\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	.\vim73\indent\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\vim73\indent\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	.\vim73\syntax\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\vim73\syntax\fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	.\vim73\makemenu.vim	/^let s:lnum = line(".") - 1$/;"	v
s:lnum	.\vim73\makemenu.vim	/^let s:lnum = s:lnum + 1$/;"	v
s:lnum	.\vim73\optwin.vim	/^let s:lnum = line("$")$/;"	v
s:lnum	.\vim73\scripts.vim	/^	let s:lnum += 1$/;"	v
s:lnum	.\vim73\scripts.vim	/^      let s:lnum += 1$/;"	v
s:lnum	.\vim73\scripts.vim	/^      let s:lnum = 1$/;"	v
s:lnum	.\vim73\scripts.vim	/^    let s:lnum = 1$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^      let s:lnum = s:lnum + 1$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^    let s:lnum = 1$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^    let s:lnum = s:new_lnum$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^  let s:lnum = 1$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^  let s:lnum = html_start_line$/;"	v
s:lnum	.\vim73\syntax\2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:lockCount	.\vimfiles\autoload\acp.vim	/^let s:lockCount = 0$/;"	v
s:long_tags	.\vimfiles\syntax\php.vim	/^  let s:long_tags = !s:ChooseValue('php_short_tags', !s:ChooseValue('php_noShortTags', 0))$/;"	v
s:ls	.\vim73\syntax\2html.vim	/^let s:ls  = &ls$/;"	v
s:luapath	.\vim73\syntax\vim.vim	/^ let s:luapath= fnameescape(globpath(&rtp,"syntax\/lua.vim"))$/;"	v
s:luapath	.\vim73\syntax\vim.vim	/^let s:luapath= fnameescape(expand("<sfile>:p:h")."\/lua.vim")$/;"	v
s:lz	.\vim73\macros\less.vim	/^let s:lz = &lz$/;"	v
s:m	.\vim73\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	.\vim73\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:magenta	.\vimfiles\colors\solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	.\vimfiles\colors\solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	.\vimfiles\colors\solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	.\vimfiles\colors\solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	.\vimfiles\colors\solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:makeArgumentList	.\vimfiles\autoload\genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	.\vimfiles\autoload\genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:man_find_arg	.\vim73\ftplugin\man.vim	/^    let s:man_find_arg = "-l"$/;"	v
s:man_find_arg	.\vim73\ftplugin\man.vim	/^let s:man_find_arg = "-w"$/;"	v
s:man_sect_arg	.\vim73\ftplugin\man.vim	/^    let s:man_sect_arg = "-s"$/;"	v
s:man_sect_arg	.\vim73\ftplugin\man.vim	/^let s:man_sect_arg = ""$/;"	v
s:man_tag_depth	.\vim73\ftplugin\man.vim	/^let s:man_tag_depth = 0$/;"	v
s:margin	.\vim73\syntax\2html.vim	/^  let s:margin = 0$/;"	v
s:margin	.\vim73\syntax\2html.vim	/^  let s:margin = strlen(s:end) + 1$/;"	v
s:match_words	.\vim73\ftplugin\aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\config.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\vim73\ftplugin\eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\vim73\ftplugin\haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\vim73\ftplugin\jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\php.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\php.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vim73\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	.\vim73\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\vim73\ftplugin\xhtml.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\vimfiles\ftplugin\eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\vimfiles\ftplugin\eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.\vimfiles\ftplugin\eruby.vim	/^let s:match_words = ""$/;"	v
s:maxDotsInExtension	.\vimfiles\plugin\a.vim	/^let s:maxDotsInExtension = 1$/;"	v
s:maxoff	.\vim73\indent\python.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:menu_char_prefix	.\vimfiles\plugin\taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:mmssff_pattern	.\vim73\syntax\cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\>'$/;"	v
s:modeNames	.\vimfiles\autoload\fuf.vim	/^let s:modeNames = []$/;"	v
s:modeline	.\vim73\ftplugin\ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	.\vim73\ftplugin\ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:modes	.\vimfiles\plugin\supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	.\vimfiles\plugin\supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:module	.\vim73\indent\ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	.\vim73\indent\sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:molokai_original	.\vimfiles\colors\molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	.\vimfiles\colors\molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:more	.\vim73\syntax\hitest.vim	/^let s:more	  = &more$/;"	v
s:moria_fontface	.\vimfiles\colors\moria.vim	/^    let s:moria_fontface = "plain"$/;"	v
s:moria_fontface	.\vimfiles\colors\moria.vim	/^    let s:moria_fontface = g:moria_fontface$/;"	v
s:moria_monochrome	.\vimfiles\colors\moria.vim	/^    let s:moria_monochrome = 0$/;"	v
s:moria_monochrome	.\vimfiles\colors\moria.vim	/^    let s:moria_monochrome = g:moria_monochrome$/;"	v
s:moria_style	.\vimfiles\colors\moria.vim	/^    let s:moria_style = &background $/;"	v
s:moria_style	.\vimfiles\colors\moria.vim	/^    let s:moria_style = &background$/;"	v
s:moria_style	.\vimfiles\colors\moria.vim	/^    let s:moria_style = g:moria_style$/;"	v
s:mru_list_locked	.\vimfiles\plugin\mru.vim	/^let s:mru_list_locked = 0$/;"	v
s:mySNR	.\vimfiles\autoload\genutils.vim	/^let s:mySNR = ''$/;"	v
s:my_syncolor	.\vim73\syntax\doxygen.vim	/^    let s:my_syncolor=1$/;"	v
s:my_syncolor	.\vim73\syntax\doxygen.vim	/^  let s:my_syncolor=0$/;"	v
s:my_synlink	.\vim73\syntax\doxygen.vim	/^    let s:my_synlink=1$/;"	v
s:my_synlink	.\vim73\syntax\doxygen.vim	/^  let s:my_synlink=0$/;"	v
s:mzschemepath	.\vim73\syntax\vim.vim	/^ let s:mzschemepath= fnameescape(globpath(&rtp,"syntax\/scheme.vim"))$/;"	v
s:mzschemepath	.\vim73\syntax\vim.vim	/^let s:mzschemepath= fnameescape(expand("<sfile>:p:h")."\/scheme.vim")$/;"	v
s:n	.\vim73\menu.vim	/^	let s:n = ""$/;"	v
s:n	.\vim73\menu.vim	/^	let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	.\vim73\menu.vim	/^    let s:n = ""$/;"	v
s:n	.\vim73\menu.vim	/^    let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	.\vim73\menu.vim	/^  let s:n = globpath(&runtimepath, "keymap\/*.vim")$/;"	v
s:n	.\vim73\menu.vim	/^let s:n = globpath(&runtimepath, "colors\/*.vim")$/;"	v
s:n	.\vim73\menu.vim	/^let s:n = globpath(&runtimepath, "compiler\/*.vim")$/;"	v
s:n	.\vim73\syntax\2html.vim	/^	let s:n = 2$/;"	v
s:n	.\vim73\syntax\2html.vim	/^      let s:n = s:n - 1$/;"	v
s:n	.\vim73\syntax\2html.vim	/^    let s:n = s:filler$/;"	v
s:n	.\vimfiles\colors\solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:name	.\vim73\menu.vim	/^	let s:name = s:n$/;"	v
s:name	.\vim73\menu.vim	/^	let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	.\vim73\menu.vim	/^      let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:_]*\\)\\(_[0-9a-zA-Z-]*\\)\\=\\.vim', '\\1', '')$/;"	v
s:name	.\vim73\menu.vim	/^    let s:name = s:n$/;"	v
s:name	.\vim73\menu.vim	/^    let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	.\vim73\menu.vim	/^  let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:]*\\)\\.vim', '\\1', '')$/;"	v
s:name	.\vim73\scripts.vim	/^    let s:name = 'wish'$/;"	v
s:name	.\vim73\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	.\vim73\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*\\<env\\>\\s\\+\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	.\vim73\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\([^\/\\\\ ]*\\>\\).*', '\\1', '')$/;"	v
s:name	.\vim73\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\S*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	.\vimfiles\plugin\bufexplorer.vim	/^let s:name = '[BufExplorer]'$/;"	v
s:names	.\vim73\menu.vim	/^let s:names = sort(map(split(s:n, "\\n"), 'substitute(v:val, "\\\\c.*[\/\\\\\\\\:\\\\]]\\\\([^\/\\\\\\\\:]*\\\\)\\\\.vim", "\\\\1", "")'), 1)$/;"	v
s:nested_functions	.\vimfiles\syntax\php.vim	/^  let s:nested_functions = s:ChooseValue('php_nested_functions', 1)$/;"	v
s:netrw_ftp_cmd	.\vim73\autoload\netrw.vim	/^let s:netrw_ftp_cmd= g:netrw_ftp_cmd$/;"	v
s:netrw_has_nt_rcp	.\vim73\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 0$/;"	v
s:netrw_has_nt_rcp	.\vim73\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 1$/;"	v
s:netrw_rcpmode	.\vim73\autoload\netrw.vim	/^ let s:netrw_rcpmode    = ''$/;"	v
s:netrw_rcpmode	.\vim73\autoload\netrw.vim	/^ let s:netrw_rcpmode    = '-b'$/;"	v
s:netrw_usercuc	.\vim73\autoload\netrw.vim	/^let s:netrw_usercuc = &cursorcolumn$/;"	v
s:netrw_usercul	.\vim73\autoload\netrw.vim	/^let s:netrw_usercul = &cursorline$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . "<a class='FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . "toggle-filler "$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . repeat(' ', s:foldcolumn - s:foldstack[0].level) . "<\/a>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1) . "<\/a>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:foldstack[0].level)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	    let s:new = s:new . s:HtmlFormat(repeat(' ', s:foldcolumn), "FoldColumn", "")$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "-"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "<\/a>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-closed FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-open "$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>+<\/a>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . "FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	  let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level) . "<\/a>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new .= "<span id='"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new .= "fold".s:foldId."' class='".s:allfolds[0].type."'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new .= (exists('g:html_diff_win_num') ? "win".g:html_diff_win_num : "")$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = repeat(s:LeadingSpace, s:margin) . s:new$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . " " . s:filler . " inserted lines "$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . "<span class='fulltext'>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, &columns - strlen(s:new) - s:margin)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, 3)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . s:HtmlFormat(s:expandedtab,  s:id_name, s:diff_id_name)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new . substitute(s:HtmlFormat(s:numcol . foldtextresult(s:lnum), "Folded", ""), '<\/span>', s:HtmlEndline.'\\n\\0', '')$/;"	v
s:new	.\vim73\syntax\2html.vim	/^	let s:new = s:new."<\/span><\/span>"$/;"	v
s:new	.\vim73\syntax\2html.vim	/^      let s:new = repeat(s:difffillchar, 3)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^      let s:new = s:HtmlFormat(s:new, "DiffDelete", "")$/;"	v
s:new	.\vim73\syntax\2html.vim	/^      let s:new = s:new . repeat(s:foldfillchar, &columns - strlen(s:new))$/;"	v
s:new	.\vim73\syntax\2html.vim	/^      let s:new = s:new . s:HtmlFormat(s:numcol, "lnr", "")$/;"	v
s:new	.\vim73\syntax\2html.vim	/^    let s:new = s:HtmlFormat(s:new, "Folded", "")$/;"	v
s:new	.\vim73\syntax\2html.vim	/^    let s:new = s:numcol . foldtextresult(s:lnum)$/;"	v
s:new	.\vim73\syntax\2html.vim	/^  let s:new = ""$/;"	v
s:new_lnum	.\vim73\syntax\2html.vim	/^    let s:new_lnum = foldclosedend(s:lnum)$/;"	v
s:newfold	.\vim73\syntax\2html.vim	/^	let s:newfold.type = "open-fold"$/;"	v
s:newfold	.\vim73\syntax\2html.vim	/^      let s:newfold = {'firstline': s:lnum, 'lastline': foldclosedend(s:lnum), 'level': s:level,'type': "closed-fold"}$/;"	v
s:newwin	.\vim73\syntax\2html.vim	/^let s:newwin = winnr()$/;"	v
s:newwin_stl	.\vim73\syntax\2html.vim	/^let s:newwin_stl = &l:stl$/;"	v
s:next_buffer_number	.\vimfiles\plugin\NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:no_empty_construct	.\vimfiles\syntax\php.vim	/^  let s:no_empty_construct = (s:strict_blocks && s:ChooseValue('php_empty_construct_error', 1))$/;"	v
s:no_indent	.\vim73\indent\eiffel.vim	/^let s:no_indent = '^\\s*\\(class\\|feature\\|creation\\|inherit\\)\\>'$/;"	v
s:non_bracket_continuation_regex	.\vimfiles\indent\ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:none	.\vimfiles\colors\solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notPhpHereDoc	.\vim73\indent\php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|else\\)'$/;"	v
s:notPhpHereDoc	.\vimfiles\indent\php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|else\\)'$/;"	v
s:not_end	.\vim73\ftplugin\framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notelse	.\vim73\ftplugin\fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	.\vim73\ftplugin\ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\vim73\ftplugin\aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\vim73\ftplugin\fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\vim73\ftplugin\sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\vim73\ftplugin\vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notifyWindow	.\vimfiles\autoload\genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:notprocedure	.\vim73\ftplugin\fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	.\vim73\ftplugin\fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notslash	.\vim73\macros\matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:notslash	.\vimfiles\plugin\matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:ns_char	.\vim73\syntax\yaml.vim	/^let s:ns_char = '\\%(\\%([\\n\\r\\uFEFF \\t]\\)\\@!\\p\\)'$/;"	v
s:ns_directive_name	.\vim73\syntax\yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	.\vim73\syntax\yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_local_tag_prefix	.\vim73\syntax\yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	.\vim73\syntax\yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|[:#]\\@!'.s:ns_plain_safe_in.'\\)'$/;"	v
s:ns_plain_char_out	.\vim73\syntax\yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|[:#]\\@!'.s:ns_plain_safe_out.'\\)'$/;"	v
s:ns_plain_first_in	.\vim73\syntax\yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:c_indicator.'\\@!'.s:ns_char.'\\|[?:\\-]\\%('.s:ns_plain_safe_in.'\\)\\@=\\)'$/;"	v
s:ns_plain_first_out	.\vim73\syntax\yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:c_indicator.'\\@!'.s:ns_char.'\\|[?:\\-]\\%('.s:ns_plain_safe_out.'\\)\\@=\\)'$/;"	v
s:ns_plain_in	.\vim73\syntax\yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	.\vim73\syntax\yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	.\vim73\syntax\yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_out	.\vim73\syntax\yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_tag_char	.\vim73\syntax\yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_prefix	.\vim73\syntax\yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_uri_char	.\vim73\syntax\yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()\\[\\]]\\)'$/;"	v
s:ns_word_char	.\vim73\syntax\yaml.vim	/^let s:ns_word_char = '\\%(\\w\\|-\\)'$/;"	v
s:numExplorerGroups	.\vimfiles\plugin\winmanager.vim	/^let s:numExplorerGroups = 0$/;"	v
s:numExplorers	.\vimfiles\plugin\winmanager.vim	/^let s:numExplorers = 0$/;"	v
s:numcol	.\vim73\syntax\2html.vim	/^    let s:numcol = ""$/;"	v
s:numcol	.\vim73\syntax\2html.vim	/^    let s:numcol = repeat(' ', s:margin - 1 - strlen(s:lnum)) . s:lnum . ' '$/;"	v
s:ob	.\vimfiles\colors\solarized.vim	/^    let s:ob              = ""$/;"	v
s:obj	.\vim73\indent\ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:obj	.\vim73\indent\sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:object	.\vimfiles\plugin\abolish.vim	/^let s:object = {}$/;"	v
s:ocaml_word_char	.\vim73\ftplugin\ocaml.vim	/^    let s:ocaml_word_char = '\\w|[À-ÿ]|'''$/;"	v
s:offset	.\vim73\syntax\2html.vim	/^	      let s:offset -= s:i - 1$/;"	v
s:offset	.\vim73\syntax\2html.vim	/^	  let s:offset = 0$/;"	v
s:old_bind	.\vim73\syntax\2html.vim	/^let s:old_bind = &l:scrollbind$/;"	v
s:old_cpo	.\vimfiles\plugin\NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	.\vimfiles\plugin\vimwiki.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_et	.\vim73\syntax\2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_fdm	.\vim73\syntax\2html.vim	/^let s:old_fdm = &foldmethod$/;"	v
s:old_fen	.\vim73\syntax\2html.vim	/^let s:old_fen = &foldenable$/;"	v
s:old_icon	.\vim73\optwin.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	.\vim73\syntax\2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_isprint	.\vim73\syntax\2html.vim	/^  let s:old_isprint = &isprint$/;"	v
s:old_magic	.\vim73\syntax\2html.vim	/^let s:old_magic = &magic$/;"	v
s:old_more	.\vim73\syntax\2html.vim	/^let s:old_more = &more$/;"	v
s:old_paste	.\vim73\syntax\2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_report	.\vim73\syntax\2html.vim	/^let s:old_report = &report$/;"	v
s:old_ru	.\vim73\optwin.vim	/^let s:old_ru = &ru$/;"	v
s:old_sc	.\vim73\optwin.vim	/^let s:old_sc = &sc$/;"	v
s:old_search	.\vim73\syntax\2html.vim	/^let s:old_search = @\/$/;"	v
s:old_title	.\vim73\optwin.vim	/^let s:old_title = &title$/;"	v
s:old_title	.\vim73\syntax\2html.vim	/^let s:old_title = &title$/;"	v
s:old_winfixheight	.\vim73\syntax\2html.vim	/^let s:old_winfixheight = &l:winfixheight$/;"	v
s:old_winheight	.\vim73\syntax\2html.vim	/^let s:old_winheight = winheight(0)$/;"	v
s:oldcolumn	.\vim73\syntax\lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldcpo	.\vim73\syntax\tcsh.vim	/^let s:oldcpo = &cpo$/;"	v
s:oldline	.\vim73\syntax\lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:oneProbe	.\vim73\syntax\dtrace.vim	/^let s:oneProbe = '\\%(BEGIN\\|END\\|ERROR\\|\\S\\{-}:\\S\\{-}:\\S\\{-}:\\S\\{-}\\)\\_s*'$/;"	v
s:oneTimeVariables	.\vimfiles\autoload\fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:optionOverrides	.\vimfiles\plugin\vcscommand.vim	/^let s:optionOverrides = {}$/;"	v
s:options_list	.\vimfiles\colors\solarized.vim	/^let s:options_list=[$/;"	v
s:or_replace	.\vim73\ftplugin\sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orange	.\vimfiles\colors\solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	.\vimfiles\colors\solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	.\vimfiles\colors\solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	.\vimfiles\colors\solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	.\vimfiles\colors\solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:orders	.\vim73\syntax\hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	.\vim73\ftplugin\cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:orgbufnr	.\vim73\syntax\2html.vim	/^let s:orgbufnr = winbufnr(0)$/;"	v
s:orgwin	.\vim73\syntax\2html.vim	/^let s:orgwin = bufwinnr(s:orgbufnr)$/;"	v
s:origMap	.\vimfiles\autoload\l9\tempvariables.vim	/^let s:origMap = {}$/;"	v
s:originBuffer	.\vimfiles\plugin\bufexplorer.vim	/^let s:originBuffer = 0$/;"	v
s:origwin_stl	.\vim73\syntax\2html.vim	/^let s:origwin_stl = &l:stl$/;"	v
s:os_sep	.\vimfiles\autoload\vimwiki.vim	/^  let s:os_sep = '\/'$/;"	v
s:os_sep	.\vimfiles\autoload\vimwiki.vim	/^  let s:os_sep = '\\'$/;"	v
s:os_slash	.\vimfiles\plugin\NERD_tree.vim	/^    let s:os_slash = '\\'$/;"	v
s:os_slash	.\vimfiles\plugin\NERD_tree.vim	/^let s:os_slash = '\/'$/;"	v
s:ou	.\vimfiles\colors\solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	.\vimfiles\colors\solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:outdent	.\vim73\indent\eiffel.vim	/^let s:outdent = '^\\s*\\(else\\|invariant\\|variant\\|do\\|require\\|until\\|loop\\|local\\)\\>'$/;"	v
s:parent_error_close	.\vimfiles\syntax\php.vim	/^  let s:parent_error_close = (s:strict_blocks && s:ChooseValue('php_parent_error_close', 1))$/;"	v
s:perlpath	.\vim73\syntax\vim.vim	/^ let s:perlpath= fnameescape(globpath(&rtp,"syntax\/perl.vim"))$/;"	v
s:perlpath	.\vim73\syntax\vim.vim	/^let s:perlpath= fnameescape(expand("<sfile>:p:h")."\/perl.vim")$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^	  let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^      let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^    let s:pgb = s:ProgressBar("Processing folds:", line('$')*2, s:orgwin)$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^    let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^  let s:pgb = s:ProgressBar("Processing classes:", len(s:idlist),s:newwin)$/;"	v
s:pgb	.\vim73\syntax\2html.vim	/^  let s:pgb = s:ProgressBar("Processing lines:", s:end - s:lnum + 1, s:orgwin)$/;"	v
s:plugins	.\vimfiles\plugin\vcscommand.vim	/^let s:plugins = {}$/;"	v
s:prepended	.\vim73\autoload\syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prevc	.\vim73\syntax\2html.vim	/^		  let s:prevc = matchstr(s:expandedtab, '.\\%' . (s:idx + 1) . 'c')$/;"	v
s:prevc	.\vim73\syntax\2html.vim	/^		  let s:prevc = matchstr(s:line, '.\\%' . (s:startcol + s:idx + s:offset) . 'c')$/;"	v
s:progressbar	.\vim73\syntax\2html.vim	/^  let s:progressbar={}$/;"	v
s:project_prototype	.\vimfiles\plugin\bundler.vim	/^let s:project_prototype = {}$/;"	v
s:projects	.\vimfiles\plugin\bundler.vim	/^let s:projects = {}$/;"	v
s:property	.\vim73\indent\sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:pythonpath	.\vim73\syntax\vim.vim	/^ let s:pythonpath= fnameescape(globpath(&rtp,"syntax\/python.vim"))$/;"	v
s:pythonpath	.\vim73\syntax\vim.vim	/^let s:pythonpath= fnameescape(expand("<sfile>:p:h")."\/python.vim")$/;"	v
s:q_adverbs	.\vim73\syntax\perl6.vim	/^    let s:q_adverbs = [$/;"	v
s:r	.\vimfiles\colors\solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:readable_prototype	.\vimfiles\autoload\rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	.\vimfiles\colors\solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	.\vimfiles\colors\solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	.\vimfiles\colors\solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	.\vimfiles\colors\solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	.\vimfiles\colors\solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:refreshBufferList	.\vimfiles\plugin\bufexplorer.vim	/^let s:refreshBufferList = 1$/;"	v
s:regex	.\vimfiles\autoload\fontsize.vim	/^    let s:regex = fontsize#regex_gtk2$/;"	v
s:regex	.\vimfiles\autoload\fontsize.vim	/^    let s:regex = fontsize#regex_kde$/;"	v
s:regex	.\vimfiles\autoload\fontsize.vim	/^    let s:regex = fontsize#regex_other$/;"	v
s:regex	.\vimfiles\autoload\fontsize.vim	/^    let s:regex = fontsize#regex_photon$/;"	v
s:regex	.\vimfiles\autoload\fontsize.vim	/^    let s:regex = fontsize#regex_x11$/;"	v
s:register_a	.\vim73\syntax\hitest.vim	/^let s:register_a  = @a$/;"	v
s:register_se	.\vim73\syntax\hitest.vim	/^let s:register_se = @\/$/;"	v
s:relative_indent	.\vim73\indent\eiffel.vim	/^let s:relative_indent = '^\\s*\\(deferred\\|class\\|feature\\|creation\\|inherit\\|loop\\|from\\|until\\|if\\|else\\|elseif\\|ensure\\|require\\|check\\|do\\|local\\|invariant\\|variant\\|rename\\|redefine\\|do\\|export\\)\\>'$/;"	v
s:report	.\vim73\syntax\hitest.vim	/^let s:report      = &report$/;"	v
s:routines	.\vim73\syntax\perl6.vim	/^let s:routines = [$/;"	v
s:ruby_deindent_keywords	.\vim73\indent\ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_deindent_keywords	.\vimfiles\indent\ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	.\vim73\indent\ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_indent_keywords	.\vimfiles\indent\ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	.\vim73\ftplugin\ruby.vim	/^      let s:ruby_path = system("ruby -e '" . s:code . "'")$/;"	v
s:ruby_path	.\vim73\ftplugin\ruby.vim	/^      let s:ruby_path = system('ruby -e "' . s:code . '"')$/;"	v
s:ruby_path	.\vim73\ftplugin\ruby.vim	/^    let s:ruby_path = ".,,"$/;"	v
s:ruby_path	.\vim73\ftplugin\ruby.vim	/^    let s:ruby_path = '.,' . substitute(s:ruby_path, '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	.\vim73\ftplugin\ruby.vim	/^    let s:ruby_path = g:ruby_path$/;"	v
s:ruby_path	.\vimfiles\ftplugin\ruby.vim	/^      let s:ruby_path = substitute(&g:path,',,$',',','') . ',' . s:ruby_path$/;"	v
s:ruby_path	.\vimfiles\ftplugin\ruby.vim	/^    let s:ruby_path = substitute(join(s:ruby_paths,","), '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	.\vimfiles\ftplugin\ruby.vim	/^    let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path,',') : g:ruby_path$/;"	v
s:ruby_paths	.\vimfiles\ftplugin\ruby.vim	/^        let s:ruby_paths = split(system(prefix."ruby -e '" . s:code . "'"),',')$/;"	v
s:ruby_paths	.\vimfiles\ftplugin\ruby.vim	/^        let s:ruby_paths = split(system(prefix.'ruby -e "' . s:code . '"'),',')$/;"	v
s:ruby_paths	.\vimfiles\ftplugin\ruby.vim	/^      let s:ruby_paths = split($RUBYLIB,':')$/;"	v
s:rubycomplete_debug	.\vim73\autoload\rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_debug	.\vimfiles\autoload\rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	.\vim73\autoload\rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubycomplete_rails_loaded	.\vimfiles\autoload\rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubypath	.\vim73\syntax\vim.vim	/^ let s:rubypath= fnameescape(globpath(&rtp,"syntax\/ruby.vim"))$/;"	v
s:rubypath	.\vim73\syntax\vim.vim	/^let s:rubypath= fnameescape(expand("<sfile>:p:h")."\/ruby.vim")$/;"	v
s:rule_rx	.\vim73\indent\make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:running	.\vimfiles\plugin\bufexplorer.vim	/^let s:running = 0$/;"	v
s:running_windows	.\vimfiles\plugin\NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:rx_li_box	.\vimfiles\autoload\vimwiki_lst.vim	/^let s:rx_li_box = '\\[.\\?\\]'$/;"	v
s:s	.\vim73\ftplugin\ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:s	.\vimfiles\colors\solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	.\vim73\ftplugin\ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\csh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\initex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\plaintex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\sgml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\svg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\tcsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\ftplugin\xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\macros\matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vim73\mswin.vim	/^  let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.\vim73\syntax\named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\after\plugin\TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\autoload\dbext_dbi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\autoload\genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\autoload\zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\ftplugin\eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\changeColorScheme.vim	/^	let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.\vimfiles\plugin\colorizer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcsbzr.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcscommand.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcscvs.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcsgit.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcshg.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcssvk.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\vcssvn.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	.\vimfiles\plugin\zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\snippets\autoload\zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\vimfiles\snippets\plugin\zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpoptions	.\vimfiles\plugin\fontsize.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_exc	.\vim73\autoload\sqlcomplete.vim	/^    let s:save_exc = g:omni_syntax_group_exclude_sql$/;"	v
s:save_exc	.\vim73\autoload\sqlcomplete.vim	/^let s:save_exc              = ""$/;"	v
s:save_inc	.\vim73\autoload\sqlcomplete.vim	/^    let s:save_inc = g:omni_syntax_group_include_sql$/;"	v
s:save_inc	.\vim73\autoload\sqlcomplete.vim	/^let s:save_inc              = ""$/;"	v
s:save_prev_table	.\vim73\autoload\sqlcomplete.vim	/^let s:save_prev_table       = ""$/;"	v
s:savecpo	.\vim73\compiler\perl.vim	/^let s:savecpo = &cpo$/;"	v
s:savedCursorCol	.\vimfiles\plugin\wintagexplorer.vim	/^let s:savedCursorCol = 1$/;"	v
s:savedCursorRow	.\vimfiles\plugin\wintagexplorer.vim	/^let s:savedCursorRow = 1$/;"	v
s:script_dir	.\vimfiles\plugin\voom.vim	/^    let s:script_dir = expand("<sfile>:p:h")$/;"	v
s:script_path	.\vimfiles\plugin\voom.vim	/^    let s:script_path = expand("<sfile>:p")$/;"	v
s:searchpairflags	.\vim73\indent\php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:searchpairflags	.\vimfiles\indent\php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:section	.\vim73\ftplugin\php.vim	/^let s:section = '\\(.*\\%#\\)\\@!\\_^\\s*\\zs\\('.s:function.'\\|'.s:class.'\\|'.s:interface.'\\)'$/;"	v
s:selection	.\vimfiles\autoload\genutils.vim	/^let s:selection = -1$/;"	v
s:sep	.\vimfiles\plugin\changeColorScheme.vim	/^let s:sep='?'$/;"	v
s:sep	.\vimfiles\plugin\gsession.vim	/^    let s:sep = '\/'$/;"	v
s:sep	.\vimfiles\plugin\gsession.vim	/^    let s:sep = '\\'$/;"	v
s:separator	.\vimfiles\plugin\winfileexplorer.vim	/^let s:separator='"---------------------------------------------------'$/;"	v
s:settings	.\vim73\syntax\2html.vim	/^let s:settings = tohtml#GetUserSettings()$/;"	v
s:sgml_cpo_save	.\vim73\syntax\sgml.vim	/^let s:sgml_cpo_save = &cpo$/;"	v
s:sh_fold_functions	.\vim73\syntax\sh.vim	/^ let s:sh_fold_functions = 1$/;"	v
s:sh_fold_heredoc	.\vim73\syntax\sh.vim	/^ let s:sh_fold_heredoc   = 2$/;"	v
s:sh_fold_ifdofor	.\vim73\syntax\sh.vim	/^ let s:sh_fold_ifdofor   = 4$/;"	v
s:sh_indent_defaults	.\vim73\indent\sh.vim	/^let s:sh_indent_defaults = {$/;"	v
s:shortmess	.\vim73\syntax\hitest.vim	/^let s:shortmess   = &shortmess$/;"	v
s:show_baselib	.\vimfiles\syntax\php.vim	/^  let s:show_baselib = s:ChooseValue('php_baselib', 0)$/;"	v
s:show_html_in_strings	.\vimfiles\syntax\php.vim	/^  let s:show_html_in_strings = s:ChooseValue('php_htmlInStrings', 0)$/;"	v
s:show_pcre	.\vimfiles\syntax\php.vim	/^  let s:show_pcre = s:large_file ? 0 : s:ChooseValue('php_show_pcre', s:ChooseValue('php_show_preg', 1))$/;"	v
s:show_quotes	.\vimfiles\syntax\php.vim	/^  let s:show_quotes = s:ChooseValue('php_highlight_quotes', 0)$/;"	v
s:show_semicolon	.\vimfiles\syntax\php.vim	/^  let s:show_semicolon = s:ChooseValue('php_show_semicolon', 1)$/;"	v
s:show_semicolon_error	.\vimfiles\syntax\php.vim	/^  let s:show_semicolon_error = (s:show_semicolon && s:ChooseValue('php_show_semicolon_error', 1))$/;"	v
s:show_sql	.\vimfiles\syntax\php.vim	/^  let s:show_sql = s:ChooseValue('php_sql_query', 0)$/;"	v
s:sid	.\vimfiles\autoload\rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:simplified_chinese	.\vimfiles\plugin\TransferChinese.vim	/^let s:simplified_chinese='$/;"	v
s:single_dent	.\vim73\indent\eiffel.vim	/^let s:single_dent = '^[^-]\\+[[:alnum:]]\\+ is\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:skip	.\vim73\indent\cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip_expr	.\vim73\indent\ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	.\vimfiles\indent\ruby.vim	/^let s:skip_expr =$/;"	v
s:smart_members	.\vimfiles\syntax\php.vim	/^  let s:smart_members = s:large_file ? 0 : s:ChooseValue('php_smart_members', 0)$/;"	v
s:smart_semicolon	.\vimfiles\syntax\php.vim	/^  let s:smart_semicolon = s:large_file ? 0 : (s:show_semicolon && s:ChooseValue('php_smart_semicolon', 1))$/;"	v
s:snipItems	.\vimfiles\autoload\acp.vim	/^let s:snipItems = {}$/;"	v
s:snippets	.\vimfiles\plugin\snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:sol	.\vim73\ftplugin\sh.vim	/^    let s:sol = '\\%(;\\s*\\|^\\s*\\)\\@<='  " start of line$/;"	v
s:solarized_termtrans_default	.\vimfiles\colors\solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	.\vimfiles\colors\solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sort_by	.\vimfiles\plugin\bufexplorer.vim	/^let s:sort_by = ["number", "name", "fullpath", "mru", "extension"]$/;"	v
s:sp_back	.\vimfiles\colors\solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	.\vimfiles\colors\solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	.\vimfiles\colors\solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	.\vimfiles\colors\solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	.\vimfiles\colors\solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	.\vimfiles\colors\solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	.\vimfiles\colors\solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	.\vimfiles\colors\solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	.\vimfiles\colors\solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	.\vimfiles\colors\solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	.\vimfiles\colors\solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	.\vimfiles\colors\solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	.\vimfiles\colors\solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	.\vimfiles\colors\solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	.\vimfiles\colors\solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	.\vimfiles\colors\solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	.\vimfiles\colors\solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	.\vimfiles\colors\solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spacer	.\vimfiles\autoload\genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:spacing_errors	.\vim73\syntax\changelog.vim	/^  let s:spacing_errors = 1$/;"	v
s:spacing_errors	.\vim73\syntax\changelog.vim	/^  let s:spacing_errors = b:changelog_spacing_errors$/;"	v
s:spacing_errors	.\vim73\syntax\changelog.vim	/^  let s:spacing_errors = g:changelog_spacing_errors$/;"	v
s:spc	.\vim73\spell\he.vim	/^let s:spc = &l:spc$/;"	v
s:spc	.\vim73\spell\yi.vim	/^let s:spc = &l:spc$/;"	v
s:special_functions	.\vimfiles\syntax\php.vim	/^  let s:special_functions = s:ChooseValue('php_special_functions', 1)$/;"	v
s:special_vars	.\vimfiles\syntax\php.vim	/^  let s:special_vars = s:ChooseValue('php_special_vars', s:ChooseValue('php_special_variables', s:ChooseValue('php_oldStyle', 1)))$/;"	v
s:spellfile_URL	.\vim73\autoload\spellfile.vim	/^let s:spellfile_URL = ''    " Start with nothing so that s:donedict is reset.$/;"	v
s:splitMode	.\vimfiles\plugin\bufexplorer.vim	/^let s:splitMode = ""$/;"	v
s:sql_file_procedure	.\vim73\autoload\sqlcomplete.vim	/^let s:sql_file_procedure    = ""$/;"	v
s:sql_file_table	.\vim73\autoload\sqlcomplete.vim	/^let s:sql_file_table        = ""$/;"	v
s:sql_file_view	.\vim73\autoload\sqlcomplete.vim	/^let s:sql_file_view         = ""$/;"	v
s:startcol	.\vim73\syntax\2html.vim	/^      let s:startcol = s:col " The start column for processing text$/;"	v
s:strict_blocks	.\vimfiles\syntax\php.vim	/^  let s:strict_blocks = s:large_file ? 0 : s:ChooseValue('php_strict_blocks', 1)$/;"	v
s:subtype	.\vim73\syntax\liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:svkFunctions	.\vimfiles\plugin\vcssvk.vim	/^let s:svkFunctions = {}$/;"	v
s:svnFunctions	.\vimfiles\plugin\vcssvn.vim	/^let s:svnFunctions = {}$/;"	v
s:svnFunctions	.\vimfiles\plugin\vcssvn.vim	/^let s:svnFunctions.AnnotateSplitRegex = '\\s\\+\\S\\+\\s\\+\\S\\+ '$/;"	v
s:syn_comment	.\vimfiles\indent\javascript.vim	/^let s:syn_comment = 'Comment'$/;"	v
s:syn_list	.\vim73\autoload\sqlcomplete.vim	/^let s:syn_list              = []$/;"	v
s:syn_remove_words	.\vim73\autoload\syntaxcomplete.vim	/^let s:syn_remove_words = 'match,matchgroup=,contains,'.$/;"	v
s:syn_value	.\vim73\autoload\sqlcomplete.vim	/^let s:syn_value             = []$/;"	v
s:sync	.\vimfiles\syntax\php.vim	/^  let s:sync = s:ChooseValue('php_sync_method', -1)$/;"	v
s:syng_strcom	.\vim73\indent\falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	.\vim73\indent\ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(String\\|StringEscape\\|ASCIICode' .$/;"	v
s:syng_strcom	.\vimfiles\indent\ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter' .$/;"	v
s:syng_string	.\vim73\indent\falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	.\vim73\indent\ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	.\vimfiles\indent\ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	.\vim73\indent\ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:syng_stringdoc	.\vimfiles\indent\ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:t_none	.\vimfiles\colors\solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	.\vimfiles\plugin\supertab.vim	/^  let s:tabHelp =$/;"	v
s:tag	.\vim73\indent\haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_close	.\vim73\syntax\2html.vim	/^  let s:tag_close = ' \/>'$/;"	v
s:tag_close	.\vim73\syntax\2html.vim	/^  let s:tag_close = '>'$/;"	v
s:taintopt	.\vim73\compiler\perl.vim	/^	let s:taintopt = ''$/;"	v
s:taintopt	.\vim73\compiler\perl.vim	/^	let s:taintopt = 'T'$/;"	v
s:tbl_alias	.\vim73\autoload\sqlcomplete.vim	/^let s:tbl_alias             = []$/;"	v
s:tbl_cols	.\vim73\autoload\sqlcomplete.vim	/^let s:tbl_cols              = []$/;"	v
s:tbl_name	.\vim73\autoload\sqlcomplete.vim	/^let s:tbl_name              = []$/;"	v
s:tclpath	.\vim73\syntax\vim.vim	/^  let s:tclpath= fnameescape(globpath(&rtp,"syntax\/tcl.vim"))$/;"	v
s:tclpath	.\vim73\syntax\vim.vim	/^ let s:tclpath= fnameescape(expand("<sfile>:p:h")."\/tcl.vim")$/;"	v
s:temp	.\vim73\syntax\perl6.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	.\vim73\syntax\perl6.vim	/^let s:temp = split(s:words_space)$/;"	v
s:temp00	.\vimfiles\colors\solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	.\vimfiles\colors\solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	.\vimfiles\colors\solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	.\vimfiles\colors\solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:tempOptionSet	.\vimfiles\autoload\acp.vim	/^let s:tempOptionSet = [{}, {}]$/;"	v
s:terminal_italic	.\vimfiles\colors\solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	.\vimfiles\colors\solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	.\vimfiles\colors\solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	.\vimfiles\colors\solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	.\vimfiles\colors\solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:test	.\vim73\ftplugin\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	.\vim73\indent\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	.\vim73\syntax\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:texMathDelimList	.\vim73\syntax\tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	.\vim73\syntax\tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_conceal	.\vim73\syntax\tex.vim	/^ let s:tex_conceal= 'admgs'$/;"	v
s:tex_conceal	.\vim73\syntax\tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:textwidth	.\vimfiles\autoload\vimwiki_tbl.vim	/^let s:textwidth = &tw$/;"	v
s:thiswin	.\vim73\optwin.vim	/^  let s:thiswin = winnr()$/;"	v
s:thiswin	.\vim73\optwin.vim	/^let s:thiswin = winnr()$/;"	v
s:timerData	.\vimfiles\plugin\l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	.\vimfiles\plugin\l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tlist_app_name	.\vimfiles\plugin\taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	.\vimfiles\plugin\taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	.\vimfiles\plugin\taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	.\vimfiles\plugin\taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	.\vimfiles\plugin\taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	.\vimfiles\plugin\taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	.\vimfiles\plugin\taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	.\vimfiles\plugin\taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	.\vimfiles\plugin\taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	.\vimfiles\plugin\taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	.\vimfiles\plugin\taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	.\vimfiles\plugin\taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	.\vimfiles\plugin\taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	.\vimfiles\plugin\taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	.\vimfiles\plugin\taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	.\vimfiles\plugin\taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	.\vimfiles\plugin\taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:token_pattern	.\vim73\indent\dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:traditional_chinese	.\vimfiles\plugin\TransferChinese.vim	/^let s:traditional_chinese='$/;"	v
s:tree_markup_reg	.\vimfiles\plugin\NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~]'$/;"	v
s:tree_up_dir_line	.\vimfiles\plugin\NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	.\vimfiles\plugin\NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:trust_user_indent	.\vim73\indent\eiffel.vim	/^let s:trust_user_indent = '\\(+\\)\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:trytcl	.\vim73\syntax\vim.vim	/^ let s:trytcl= (&shell !~ '\\<\\%(bash\\>\\|4[nN][tT]\\|\\<zsh\\)\\>\\%(\\.exe\\)\\=$')$/;"	v
s:trytcl	.\vim73\syntax\vim.vim	/^ let s:trytcl= 1$/;"	v
s:tutorfile	.\vim73\tutor\tutor.vim	/^let s:tutorfile = "\/tutor\/tutor"$/;"	v
s:tutorxx	.\vim73\tutor\tutor.vim	/^let s:tutorxx = $VIMRUNTIME . s:tutorfile . s:ext$/;"	v
s:type	.\vim73\indent\ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	.\vim73\indent\sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:types	.\vimfiles\plugin\bufexplorer.vim	/^let s:types = {"fullname": ':p', "path": ':p:h', "relativename": ':~:.', "relativepath": ':~:.:h', "shortname": ':t'}$/;"	v
s:types	.\vimfiles\plugin\supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	.\vimfiles\plugin\supertab.vim	/^  let s:types =$/;"	v
s:u	.\vimfiles\colors\solarized.vim	/^    let s:u           = ""$/;"	v
s:u	.\vimfiles\colors\solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\php.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\php.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\sgml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\sgml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\svg.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\svg.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\tcsh.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\tcsh.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vim73\ftplugin\xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\vimfiles\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vimfiles\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\vimfiles\ftplugin\eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_spellang	.\vim73\menu.vim	/^  let s:undo_spellang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:val	.\vim73\indent\sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:valuerange	.\vimfiles\plugin\colorizer.vim	/^let s:valuerange = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:valuerange	.\vimfiles\syntax\css.vim	/^let s:valuerange = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:values	.\vim73\autoload\csscomplete.vim	/^	let s:values = split("azimuth background background-attachment background-color background-image background-position background-repeat border bottom border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color  border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width caption-side clear clip color content counter-increment counter-reset cue cue-after cue-before cursor display direction elevation empty-cells float font font-family font-size font-style font-variant font-weight height left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-right margin-left margin-top margin-bottom max-height max-width min-height min-width orphans outline outline-color outline-style outline-width overflow padding padding-top padding-right padding-bottom padding-left page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness speak speak-header speak-numeral speak-punctuation speech-rate stress table-layout text-align text-decoration text-indent text-transform top unicode-bidi vertical-align visibility voice-family volume white-space width widows word-spacing z-index")$/;"	v
s:values	.\vimfiles\autoload\csscomplete.vim	/^	let s:values = split("azimuth background background-attachment background-color background-image background-position background-repeat border bottom border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color  border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width caption-side clear clip color content counter-increment counter-reset cue cue-after cue-before cursor display direction elevation empty-cells float font font-family font-size font-style font-variant font-weight height left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-right margin-left margin-top margin-bottom max-height max-width min-height min-width orphans outline outline-color outline-style outline-width overflow padding padding-top padding-right padding-bottom padding-left page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness speak speak-header speak-numeral speak-punctuation speech-rate stress table-layout text-align text-decoration text-indent text-transform top unicode-bidi vertical-align visibility voice-family volume white-space width widows word-spacing z-index border-image border-radius box-shadow background-origin background-clip background-size opacity text-shadow text-overflow word-wrap box-sizing resize outline outline-width outline-style outline-offset outline-color nav-up nav-right nav-down nav-left nav-index columns column-widows column-span column-rule column-rule-color column-width column-rule-style column-gap column-fill column-count column-break-before column-break-after")$/;"	v
s:vcol	.\vim73\syntax\2html.vim	/^		let s:vcol = virtcol([s:lnum, s:startcol + s:idx + s:offset - len(s:prevc)])$/;"	v
s:view_types	.\vimfiles\autoload\rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn,slim',',')$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults = {}$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.auto_export = 0$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.css_name = 'style.css'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.diary_header = 'Diary'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.diary_index = 'diary'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.diary_link_count = 4$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.diary_link_fmt = '%Y-%m-%d'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.diary_rel_path = 'diary\/'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.ext = '.wiki'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.gohome = 'split'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.html_footer = ''$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.html_header = ''$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.index = 'index'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.maxhi = 1$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.nested_syntaxes = {}$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.path = '~\/vimwiki\/'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.path_html = '~\/vimwiki_html\/'$/;"	v
s:vimwiki_defaults	.\vimfiles\plugin\vimwiki.vim	/^let s:vimwiki_defaults.syntax = 'default'$/;"	v
s:violet	.\vimfiles\colors\solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	.\vimfiles\colors\solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	.\vimfiles\colors\solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	.\vimfiles\colors\solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	.\vimfiles\colors\solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	.\vimfiles\colors\solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	.\vimfiles\colors\solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:voom_bodies	.\vimfiles\plugin\voom.vim	/^    let s:voom_bodies = {}$/;"	v
s:voom_did_init	.\vimfiles\plugin\voom.vim	/^    let s:voom_did_init = 1$/;"	v
s:voom_did_quickload	.\vimfiles\plugin\voom.vim	/^    let s:voom_did_quickload = 'v4.0b5'$/;"	v
s:voom_logbnr	.\vimfiles\plugin\voom.vim	/^    let s:voom_logbnr = 0$/;"	v
s:voom_script_py	.\vimfiles\plugin\voom.vim	/^    let s:voom_script_py = s:script_dir.'\/voom\/_voomScript_.py'$/;"	v
s:voom_trees	.\vimfiles\plugin\voom.vim	/^    let s:voom_trees = {}$/;"	v
s:warn_html_footer	.\vimfiles\autoload\vimwiki_html.vim	/^let s:warn_html_footer = 0$/;"	v
s:warn_html_header	.\vimfiles\autoload\vimwiki_html.vim	/^let s:warn_html_header = 0$/;"	v
s:warnopt	.\vim73\compiler\perl.vim	/^	let s:warnopt = 'W'$/;"	v
s:warnopt	.\vim73\compiler\perl.vim	/^	let s:warnopt = 'w'$/;"	v
s:whatterm	.\vim73\syntax\2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	.\vim73\syntax\2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:when_no_matched_or_others	.\vim73\ftplugin\sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched\\>\\)\\|\\<others\\>\\)\\@!\\)'$/;"	v
s:whitespace	.\vim73\syntax\2html.vim	/^  let s:whitespace = ""$/;"	v
s:whitespace	.\vim73\syntax\2html.vim	/^  let s:whitespace = "white-space: pre-wrap; "$/;"	v
s:words	.\vim73\syntax\perl6.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	.\vim73\syntax\perl6.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	.\vim73\syntax\perl6.vim	/^    let s:words_space = join(words, " ")$/;"	v
s:words_space	.\vim73\syntax\perl6.vim	/^let s:words_space = join(s:routines, " ")$/;"	v
s:wrapscan	.\vim73\syntax\hitest.vim	/^let s:wrapscan    = &wrapscan$/;"	v
s:wsh_cpo_save	.\vim73\syntax\wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	.\vim73\syntax\xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:yellow	.\vimfiles\colors\solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	.\vimfiles\colors\solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	.\vimfiles\colors\solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	.\vimfiles\colors\solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	.\vimfiles\colors\solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:zen_settings	.\vimfiles\autoload\zencoding.vim	/^let s:zen_settings = {$/;"	v
s:zen_settings	.\vimfiles\snippets\autoload\zencoding.vim	/^let s:zen_settings = {$/;"	v
s:zipfile_escape	.\vim73\autoload\zip.vim	/^let s:zipfile_escape = ' ?&;\\'$/;"	v
s:zsh_syntax_variables	.\vim73\syntax\zsh.vim	/^  let s:zsh_syntax_variables = 'all'$/;"	v
s:zsh_syntax_variables	.\vim73\syntax\zsh.vim	/^  let s:zsh_syntax_variables = g:zsh_syntax_variables$/;"	v
safe_html	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:safe_html(line) "{{{$/;"	f
saveScreenState	.\vimfiles\plugin\NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
save_vimwiki_buffer	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:save_vimwiki_buffer() "{{{$/;"	f
scanlineforuris	.\vimfiles\autoload\rails.vim	/^function! s:scanlineforuris(line)$/;"	f
scoreBoundaryMatching	.\vimfiles\autoload\fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	.\vimfiles\autoload\fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
scrub	.\vimfiles\autoload\rails.vim	/^function! s:scrub(collection,item)$/;"	f
search_region	.\vimfiles\autoload\zencoding.vim	/^function! s:search_region(start, end)$/;"	f
search_region	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:search_region(start, end)$/;"	f
search_word	.\vimfiles\autoload\vimwiki.vim	/^function! s:search_word(wikiRx, cmd) "{{{$/;"	f
searchsyn	.\vim73\ftplugin\ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
searchsyn	.\vimfiles\ftplugin\ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
sed_delimiter	.\vim73\syntax\sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	.\vim73\syntax\sed.vim	/^	let __sed_i = __sed_i + 1$/;"	v
sed_i	.\vim73\syntax\sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	.\vim73\syntax\sed.vim	/^    let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_i	.\vim73\syntax\sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	.\vim73\syntax\sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	.\vim73\syntax\sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	.\vim73\syntax\sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
select_region	.\vimfiles\autoload\zencoding.vim	/^function! s:select_region(region)$/;"	f
select_region	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:select_region(region)$/;"	f
selectiveexpand	.\vimfiles\autoload\rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
send	.\vimfiles\plugin\abolish.vim	/^function! s:send(self,func,...)$/;"	f
sendToVim	.\vim73\tools\xcmdsrv_client.c	/^char * sendToVim __ARGS((Display *dpy, char *name, char *cmd, int asKeys, int *code));$/;"	p	file:	signature:(Display *dpy, char *name, char *cmd, int asKeys, int *code)
sendToVim	.\vim73\tools\xcmdsrv_client.c	/^sendToVim(dpy, name, cmd, asKeys, code)$/;"	f
session_dir	.\vimfiles\plugin\gsession.vim	/^fun! s:session_dir()$/;"	f
session_file	.\vimfiles\plugin\gsession.vim	/^fun! s:session_file()$/;"	f
session_filename	.\vimfiles\plugin\gsession.vim	/^fun! s:session_filename()$/;"	f
setAbbrWithFileAbbrData	.\vimfiles\autoload\fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setClipboard	.\vimfiles\plugin\voom\voom.py	/^def setClipboard(s): #{{{2$/;"	f	access:public
setCompletefunc	.\vimfiles\autoload\acp.vim	/^function s:setCompletefunc()$/;"	f
setRanks	.\vimfiles\autoload\fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
setTempOption	.\vimfiles\autoload\acp.vim	/^function s:setTempOption(group, name, value)$/;"	f
set_compression	.\vim73\autoload\gzip.vim	/^fun s:set_compression(line)$/;"	f
set_mode	.\vimfiles\plugin\jsbeautify.vim	/^function! s:set_mode(mode)$/;"	f
set_state	.\vimfiles\autoload\vimwiki_lst.vim	/^function! s:set_state(lnum, rate) "{{{$/;"	f
setopt	.\vimfiles\autoload\rails.vim	/^function! s:setopt(opt,val)$/;"	f
setupStatusline	.\vimfiles\plugin\NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
setupSyntaxHighlighting	.\vimfiles\plugin\NERD_tree.vim	/^function! s:setupSyntaxHighlighting()$/;"	f
setup_buffer_enter	.\vimfiles\plugin\vimwiki.vim	/^function! s:setup_buffer_enter() "{{{$/;"	f
setup_buffer_leave	.\vimfiles\plugin\vimwiki.vim	/^function! s:setup_buffer_leave()"{{{$/;"	f
setup_colors	.\vimfiles\plugin\vimwiki.vim	/^function! s:setup_colors()"{{{$/;"	f
sh_maxlines	.\vim73\syntax\sh.vim	/^  let sh_maxlines = 2 * sh_minlines$/;"	v
sh_minlines	.\vim73\syntax\sh.vim	/^  let sh_minlines = 200$/;"	v
shellesc	.\vimfiles\plugin\bundler.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	.\vimfiles\plugin\bundler.vim	/^function! s:shellslash(path)$/;"	f
showFileSystemMenu	.\vimfiles\plugin\NERD_tree.vim	/^function! s:showFileSystemMenu()$/;"	f
shuffle	.\vimfiles\plugin\voom\voom.py	/^        if shuffle is None: from random import shuffle$/;"	i
shuffle	.\vimfiles\plugin\voom\voom.py	/^shuffle = None # random.shuffle$/;"	v
snakecase	.\vimfiles\plugin\abolish.vim	/^function! s:snakecase(word)$/;"	f
sname	.\vimfiles\autoload\rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	.\vimfiles\autoload\snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	.\vimfiles\autoload\snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	.\vimfiles\plugin\snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort	.\vimfiles\plugin\abolish.vim	/^function! s:sort(a,b)$/;"	f
sortSiblings	.\vimfiles\plugin\voom\voom.py	/^def sortSiblings(VO, siblings, oIgnorecase, oUnicode, oEnc, oReverse, oFlip, oShuffle): #{{{3$/;"	f	access:public
specEdit	.\vimfiles\autoload\rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specList	.\vimfiles\autoload\rails.vim	/^function! s:specList(A,L,P)$/;"	f
spellfile#GetDirChoices	.\vim73\autoload\spellfile.vim	/^function! spellfile#GetDirChoices()$/;"	f
spellfile#LoadFile	.\vim73\autoload\spellfile.vim	/^function! spellfile#LoadFile(lang)$/;"	f
spellfile#Nread	.\vim73\autoload\spellfile.vim	/^function! spellfile#Nread(fname)$/;"	f
spellfile#WritableSpellDir	.\vim73\autoload\spellfile.vim	/^function! spellfile#WritableSpellDir()$/;"	f
sqlcomplete#Complete	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#Complete(findstart, base)$/;"	f
sqlcomplete#DrillIntoTable	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillIntoTable()$/;"	f
sqlcomplete#DrillOutOfColumns	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillOutOfColumns()$/;"	f
sqlcomplete#Map	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#Map(type)$/;"	f
sqlcomplete#PreCacheSyntax	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#PreCacheSyntax(...)$/;"	f
sqlcomplete#ResetCacheSyntax	.\vim73\autoload\sqlcomplete.vim	/^function! sqlcomplete#ResetCacheSyntax(...)$/;"	f
startswith	.\vimfiles\autoload\rails.vim	/^function! s:startswith(string,prefix)$/;"	f
stepmatch	.\vim73\ftplugin\cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	.\vim73\ftplugin\cucumber.vim	/^function! s:steps(lnum)$/;"	f
str_common_pfx	.\vimfiles\plugin\vimwiki.vim	/^function! s:str_common_pfx(str1, str2) "{{{$/;"	f
strip	.\vim73\indent\bst.vim	/^function! s:strip(lnum)$/;"	f
stripMarkupFromLine	.\vimfiles\plugin\NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
strip_word	.\vimfiles\autoload\vimwiki.vim	/^function! s:strip_word(word) "{{{$/;"	f
stripped	.\vim73\indent\cobol.vim	/^function! s:stripped(lnum)$/;"	f
style	.\vimfiles\autoload\vimwiki_html.vim	/^      let style = ""$/;"	v
style	.\vimfiles\autoload\vimwiki_html.vim	/^      let style = link_parts[2]$/;"	v
stylesheetEdit	.\vimfiles\autoload\rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	.\vimfiles\autoload\rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	.\vimfiles\autoload\rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	.\vimfiles\plugin\bundler.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	.\vimfiles\plugin\rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
subesc	.\vimfiles\plugin\abolish.vim	/^function! s:subesc(pattern)$/;"	f
subprocess	.\vimfiles\autoload\l9\async.py	/^import subprocess$/;"	i
subst_func	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:subst_func(line, regexp, func) " {{{$/;"	f
substitute_command	.\vimfiles\plugin\abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
substitute_items	.\vim73\ftplugin\changelog.vim	/^  function! s:substitute_items(str, date, user)$/;"	f
subvert_dispatcher	.\vimfiles\plugin\abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
support_jisx0213	.\vim73\lang\menu_ja_jp.euc-jp.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	.\vim73\lang\menu_ja_jp.utf-8.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	.\vim73\lang\menu_japanese_japan.932.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
svkFunctions.Add	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Add(argList)$/;"	f
svkFunctions.Annotate	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Annotate(argList)$/;"	f
svkFunctions.Commit	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Commit(argList)$/;"	f
svkFunctions.Delete	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Delete(argList)$/;"	f
svkFunctions.Diff	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Diff(argList)$/;"	f
svkFunctions.GetBufferInfo	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.GetBufferInfo()$/;"	f
svkFunctions.Identify	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Identify(buffer)$/;"	f
svkFunctions.Info	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Info(argList)$/;"	f
svkFunctions.Lock	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Lock(argList)$/;"	f
svkFunctions.Log	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Log(argList)$/;"	f
svkFunctions.Revert	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Revert(argList)$/;"	f
svkFunctions.Review	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Review(argList)$/;"	f
svkFunctions.Status	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Status(argList)$/;"	f
svkFunctions.Unlock	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Unlock(argList)$/;"	f
svkFunctions.Update	.\vimfiles\plugin\vcssvk.vim	/^function! s:svkFunctions.Update(argList)$/;"	f
svnFunctions.Add	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Add(argList)$/;"	f
svnFunctions.Annotate	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Annotate(argList)$/;"	f
svnFunctions.Commit	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Commit(argList)$/;"	f
svnFunctions.Delete	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Delete(argList)$/;"	f
svnFunctions.Diff	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Diff(argList)$/;"	f
svnFunctions.GetBufferInfo	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.GetBufferInfo()$/;"	f
svnFunctions.Identify	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Identify(buffer)$/;"	f
svnFunctions.Info	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Info(argList)$/;"	f
svnFunctions.Lock	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Lock(argList)$/;"	f
svnFunctions.Log	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Log(argList)$/;"	f
svnFunctions.Revert	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Revert(argList)$/;"	f
svnFunctions.Review	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Review(argList)$/;"	f
svnFunctions.Status	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Status(argList)$/;"	f
svnFunctions.Unlock	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Unlock(argList)$/;"	f
svnFunctions.Update	.\vimfiles\plugin\vcssvn.vim	/^function! s:svnFunctions.Update(argList)$/;"	f
switch_wnd	.\vimfiles\plugin\functionlist.vim	/^function! s:switch_wnd(bufno)$/;"	f
syn	.\vim73\indent\cucumber.vim	/^function! s:syn(lnum)$/;"	f
synname	.\vim73\ftplugin\ruby.vim	/^function! s:synname()$/;"	f
synname	.\vimfiles\ftplugin\ruby.vim	/^function! s:synname()$/;"	f
syntax_manual	.\vim73\syntax\manual.vim	/^let syntax_manual = 1$/;"	v
syntax_on	.\vim73\syntax\synload.vim	/^let syntax_on = 1$/;"	v
syntax_supported	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:syntax_supported() " {{{$/;"	f
syntaxcomplete#Complete	.\vim73\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f
syntaxcomplete#OmniSyntaxList	.\vim73\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f
syntaxfile	.\vimfiles\plugin\bundler.vim	/^function! s:syntaxfile()$/;"	f
syntaxlock	.\vimfiles\plugin\bundler.vim	/^function! s:syntaxlock()$/;"	f
syntaxset	.\vim73\syntax\nosyntax.vim	/^augroup syntaxset$/;"	a
syntaxset	.\vim73\syntax\syntax.vim	/^augroup syntaxset$/;"	a
sys	.\vimfiles\lib\extras\build_syntaxfile.py	/^import sys, datetime$/;"	i
sys	.\vimfiles\plugin\voom\voom.py	/^import sys, os, re$/;"	i
sys,	.\vimfiles\plugin\voom.vim	/^import sys, vim$/;"	m
system_with_default	.\vim73\ftplugin\changelog.vim	/^  function! s:system_with_default(command, default)$/;"	f
table	.\vimfiles\autoload\vimwiki_html.vim	/^    let table = s:close_tag_table(table, lines)$/;"	v
table	.\vimfiles\autoload\vimwiki_html.vim	/^  let table = a:table$/;"	v
table_add_row	.\vimfiles\autoload\vimwiki_html.vim	/^  function! s:table_add_row(table, line) "{{{$/;"	f
tabpagevar	.\vimfiles\plugin\NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tads_minlines	.\vim73\syntax\tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	.\vim73\syntax\tads.vim	/^  let tads_sync_dist = 100$/;"	v
tag_barebone_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_barebone_link(value) "{{{$/;"	f
tag_code	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_code(value) "{{{$/;"	f
tag_em	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_em(value) "{{{$/;"	f
tag_external_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_external_link(value) "{{{$/;"	f
tag_internal_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_internal_link(value) "{{{$/;"	f
tag_no_wikiword_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_no_wikiword_link(value) "{{{$/;"	f
tag_pre	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_pre(value) "{{{$/;"	f
tag_remove_external_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_remove_external_link(value) "{{{$/;"	f
tag_remove_internal_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_remove_internal_link(value) "{{{$/;"	f
tag_strike	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_strike(value) "{{{$/;"	f
tag_strong	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_strong(value) "{{{$/;"	f
tag_sub	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_sub(value) "{{{$/;"	f
tag_super	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_super(value) "{{{$/;"	f
tag_todo	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_todo(value) "{{{$/;"	f
tag_wikiword_link	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:tag_wikiword_link(value) "{{{$/;"	f
tail_name	.\vimfiles\autoload\vimwiki.vim	/^function! s:tail_name(fname) "{{{$/;"	f
tar	.\vim73\plugin\tarPlugin.vim	/^augroup tar$/;"	a
tar#Browse	.\vim73\autoload\tar.vim	/^fun! tar#Browse(tarfile)$/;"	f
tar#Read	.\vim73\autoload\tar.vim	/^fun! tar#Read(fname,mode)$/;"	f
tar#Vimuntar	.\vim73\autoload\tar.vim	/^fun! tar#Vimuntar(...)$/;"	f
tar#Write	.\vim73\autoload\tar.vim	/^fun! tar#Write(fname)$/;"	f
taskEdit	.\vimfiles\autoload\rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskList	.\vimfiles\autoload\rails.vim	/^function! s:taskList(A,L,P)$/;"	f
tb_compressor_command	.\vimfiles\plugin\TBCompressor.vim	/^    let tb_compressor_command = 'compressor.cmd'$/;"	v
tb_compressor_command_options	.\vimfiles\plugin\TBCompressor.vim	/^    let tb_compressor_command_options = ''$/;"	v
tempname	.\vim73\autoload\gzip.vim	/^fun s:tempname(name)$/;"	f
term	.\vimfiles\colors\bandit.vim	/^		let term = 'NONE'$/;"	v
term	.\vimfiles\colors\bandit.vim	/^		let term = s:colours['TERM']$/;"	v
threading	.\vimfiles\autoload\l9\async.py	/^import threading$/;"	i
throw	.\vimfiles\plugin\abolish.vim	/^function! s:throw(msg)$/;"	f
throw	.\vimfiles\plugin\bundler.vim	/^function! s:throw(string) abort$/;"	f
timerBegin	.\vimfiles\plugin\l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	.\vimfiles\plugin\l9.vim	/^  function s:timerDump()$/;"	f
timerStop	.\vimfiles\plugin\l9.vim	/^  function s:timerStop()$/;"	f
toLowerForIgnoringCase	.\vimfiles\autoload\fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
toc	.\vimfiles\autoload\vimwiki_html.vim	/^  let toc = ['<div class="toc">']$/;"	v
toc_text	.\vimfiles\autoload\vimwiki_html.vim	/^    let toc_text = s:process_tags_remove_links(text)$/;"	v
toc_text	.\vimfiles\autoload\vimwiki_html.vim	/^    let toc_text = s:process_tags_typefaces(toc_text)$/;"	v
toend	.\vim73\ftplugin\cobol.vim	/^function! s:toend(direction)$/;"	f
toggle	.\vimfiles\plugin\NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggle	.\vimfiles\plugin\functionlist.vim	/^function! s:toggle()$/;"	f
toggleIgnoreFilter	.\vimfiles\plugin\NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	.\vimfiles\plugin\NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	.\vimfiles\plugin\NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	.\vimfiles\plugin\NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggle_namedsession_menu	.\vimfiles\plugin\gsession.vim	/^fun! s:toggle_namedsession_menu()$/;"	f
tohtml#CharsetFromEncoding	.\vim73\autoload\tohtml.vim	/^function! tohtml#CharsetFromEncoding(settings) "{{{$/;"	f
tohtml#Convert2HTML	.\vim73\autoload\tohtml.vim	/^func! tohtml#Convert2HTML(line1, line2) "{{{$/;"	f
tohtml#Diff2HTML	.\vim73\autoload\tohtml.vim	/^func! tohtml#Diff2HTML(win_list, buf_list) "{{{$/;"	f
tohtml#EncodingFromCharset	.\vim73\autoload\tohtml.vim	/^function! tohtml#EncodingFromCharset(encoding) "{{{$/;"	f
tohtml#GetOption	.\vim73\autoload\tohtml.vim	/^func! tohtml#GetOption(settings, option, default) "{{{$/;"	f
tohtml#GetUserSettings	.\vim73\autoload\tohtml.vim	/^func! tohtml#GetUserSettings() "{{{$/;"	f
token	.\vimfiles\plugin\voom\voom_mode_python.py	/^import token, tokenize$/;"	i
tokenize	.\vimfiles\plugin\voom\voom_mode_python.py	/^import token, tokenize$/;"	i
topindent	.\vim73\ftplugin\ocaml.vim	/^function s:topindent(lnum)$/;"	f
traceback	.\vimfiles\plugin\voom\voom.py	/^import traceback$/;"	i
traceback	.\vimfiles\plugin\voom\voom_mode_python.py	/^import traceback$/;"	i
treeExistsForBuf	.\vimfiles\plugin\NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	.\vimfiles\plugin\NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
trim	.\vimfiles\autoload\vimwiki_html.vim	/^function! s:trim(string) "{{{$/;"	f
trim_output	.\vimfiles\plugin\jsbeautify.vim	/^function! s:trim_output()$/;"	f
trimmed_system_with_default	.\vim73\ftplugin\changelog.vim	/^  function! s:trimmed_system_with_default(command, default)$/;"	f
try	.\vimfiles\autoload\rails.vim	/^function! s:try(cmd) abort$/;"	f
try_reading_file	.\vim73\ftplugin\changelog.vim	/^  function! s:try_reading_file(path)$/;"	f
u	.\vim73\macros\less.vim	/^noremap <script> u <C-U><SID>L$/;"	m
uc_minlines	.\vim73\syntax\uc.vim	/^  let uc_minlines = 10$/;"	v
unindent	.\vimfiles\plugin\jsbeautify.vim	/^function! s:unindent()$/;"	f
uniq	.\vimfiles\autoload\rails.vim	/^function! s:uniq(list)$/;"	f
unique	.\vimfiles\plugin\NERD_tree.vim	/^function! s:unique(list)$/;"	f
unittestEdit	.\vimfiles\autoload\rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestList	.\vimfiles\autoload\rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unknown_coercion	.\vimfiles\plugin\abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
unload	.\vim73\optwin.vim	/^fun! <SID>unload()$/;"	f
unmapForMappingDriven	.\vimfiles\autoload\acp.vim	/^function s:unmapForMappingDriven()$/;"	f
upDir	.\vimfiles\plugin\NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
updateBufTimes	.\vimfiles\autoload\fuf\buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	.\vimfiles\autoload\fuf\mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	.\vimfiles\autoload\fuf\mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
updateTree	.\vimfiles\plugin\voom\voom.py	/^def updateTree(body,tree): #{{{2$/;"	f	access:public
update_bnodes	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^def update_bnodes(VO, tlnum, delta):$/;"	f	access:public
update_bnodes	.\vimfiles\plugin\voom\voom_mode_rest.py	/^def update_bnodes(VO, tlnum, delta):$/;"	f	access:public
update_wiki_link	.\vimfiles\autoload\vimwiki.vim	/^function! s:update_wiki_link(fname, old, new) " {{{$/;"	f
update_wiki_links	.\vimfiles\autoload\vimwiki.vim	/^function! s:update_wiki_links(old_fname, new_fname) " {{{$/;"	f
update_wiki_links_dir	.\vimfiles\autoload\vimwiki.vim	/^function! s:update_wiki_links_dir(dir, old_fname, new_fname) " {{{$/;"	f
upp	.\vimfiles\plugin\vimwiki.vim	/^let upp = g:vimwiki_upper$/;"	v
uppercase	.\vimfiles\plugin\abolish.vim	/^function! s:uppercase(word)$/;"	f
usage	.\vim73\tools\efm_perl.pl	/^sub usage {$/;"	s
usage	.\vim73\tools\shtags.pl	/^sub usage$/;"	s
usage	.\vimfiles\doc\vim2html.pl	/^sub usage$/;"	s
usage	.\vimfiles\doc\vim2html.pl	/^usage:$/;"	l
usage	.\vimfiles\etc\release\release.sh	/^usage() {$/;"	f
usage	.\vimfiles\lib\extras\build_syntaxfile.py	/^def usage():$/;"	f	access:public
use_gui	.\vim73\vimtutor.bat	/^:use_gui$/;"	l
use_vim	.\vim73\vimtutor.bat	/^:use_vim$/;"	l
username	.\vim73\ftplugin\changelog.vim	/^  function! s:username()$/;"	f
v	.\vim73\macros\less.vim	/^map v :silent call <SID>End()<CR>$/;"	m
valid_cterm_colours	.\vimfiles\colors\bandit.vim	/^let valid_cterm_colours = $/;"	v
value	.\vimfiles\autoload\vimwiki_html.vim	/^  let value = s:mid(a:value, 2)$/;"	v
vera_comment_strings	.\vim73\syntax\vera.vim	/^let vera_comment_strings = 1$/;"	v
version	.\vim73\tools\shtags.pl	/^sub version$/;"	s
viewEdit	.\vimfiles\autoload\rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	.\vimfiles\autoload\rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewspattern	.\vimfiles\autoload\rails.vim	/^function! s:viewspattern()$/;"	f
vim	.\vimfiles\autoload\l9\async.py	/^import vim$/;"	i
vim	.\vimfiles\plugin\voom\voom.py	/^import vim$/;"	i
vim	.\vimfiles\plugin\voom\voom_mode_markdown.py	/^    import vim$/;"	i
vim	.\vimfiles\plugin\voom\voom_mode_python.py	/^import vim$/;"	i
vim	.\vimfiles\plugin\voom\voom_mode_rest.py	/^    import vim$/;"	i
vim2html	.\vimfiles\doc\vim2html.pl	/^sub vim2html$/;"	s
vimball#Decompress	.\vim73\autoload\vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f
vimball#MkVimball	.\vim73\autoload\vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	.\vim73\autoload\vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	.\vim73\autoload\vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	.\vim73\autoload\vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	.\vim73\autoload\vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	.\vim73\autoload\vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vimball#VimballHome	.\vim73\autoload\vimball.vim	/^fun! vimball#VimballHome()$/;"	f
vimrcEx	.\vim73\vimrc_example.vim	/^  augroup vimrcEx$/;"	a
vimwiki	.\vimfiles\ftplugin\vimwiki.vim	/^  augroup vimwiki$/;"	a
vimwiki	.\vimfiles\plugin\vimwiki.vim	/^augroup vimwiki$/;"	a
vimwiki#AddHeaderLevel	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#AddHeaderLevel() "{{{$/;"	f
vimwiki#RemoveHeaderLevel	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#RemoveHeaderLevel() "{{{$/;"	f
vimwiki#TO_header	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#TO_header(inner, visual) "{{{$/;"	f
vimwiki#TO_table_cell	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#TO_table_cell(inner, visual) "{{{$/;"	f
vimwiki#TO_table_col	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#TO_table_col(inner, visual) "{{{$/;"	f
vimwiki#WikiDeleteWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiDeleteWord() "{{{$/;"	f
vimwiki#WikiFollowWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiFollowWord(split) "{{{$/;"	f
vimwiki#WikiGoBackWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiGoBackWord() "{{{$/;"	f
vimwiki#WikiGoHome	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiGoHome(index) "{{{$/;"	f
vimwiki#WikiHighlightLinks	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiHighlightLinks() "{{{$/;"	f
vimwiki#WikiNextWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiNextWord() "{{{$/;"	f
vimwiki#WikiPrevWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiPrevWord() "{{{$/;"	f
vimwiki#WikiRenameWord	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiRenameWord() "{{{$/;"	f
vimwiki#WikiUISelect	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#WikiUISelect()"{{{$/;"	f
vimwiki#chomp_slash	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#chomp_slash(str) "{{{$/;"	f
vimwiki#count_first_sym	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#count_first_sym(line) "{{{$/;"	f
vimwiki#current_subdir	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#current_subdir()"{{{$/;"	f
vimwiki#generate_links	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#generate_links()"{{{$/;"	f
vimwiki#hl_exists	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#hl_exists(hl)"{{{$/;"	f
vimwiki#is_link_to_dir	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#is_link_to_dir(link) "{{{$/;"	f
vimwiki#mkdir	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#mkdir(path) "{{{$/;"	f
vimwiki#nested_syntax	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#nested_syntax(filetype, start, end, textSnipHl) abort "{{{$/;"	f
vimwiki#open_link	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#open_link(cmd, link, ...) "{{{$/;"	f
vimwiki#safe_link	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#safe_link(string) "{{{$/;"	f
vimwiki#select	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#select(wnum)"{{{$/;"	f
vimwiki#subdir	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#subdir(path, filename)"{{{$/;"	f
vimwiki#unsafe_link	.\vimfiles\autoload\vimwiki.vim	/^function! vimwiki#unsafe_link(string) "{{{$/;"	f
vimwiki_diary#calendar_action	.\vimfiles\autoload\vimwiki_diary.vim	/^function! vimwiki_diary#calendar_action(day, month, year, week, dir) "{{{$/;"	f
vimwiki_diary#calendar_sign	.\vimfiles\autoload\vimwiki_diary.vim	/^function vimwiki_diary#calendar_sign(day, month, year) "{{{$/;"	f
vimwiki_diary#make_note	.\vimfiles\autoload\vimwiki_diary.vim	/^function! vimwiki_diary#make_note(index, ...) "{{{$/;"	f
vimwiki_html#Wiki2HTML	.\vimfiles\autoload\vimwiki_html.vim	/^function! vimwiki_html#Wiki2HTML(path, wikifile) "{{{$/;"	f
vimwiki_html#WikiAll2HTML	.\vimfiles\autoload\vimwiki_html.vim	/^function! vimwiki_html#WikiAll2HTML(path) "{{{$/;"	f
vimwiki_lst#ToggleListItem	.\vimfiles\autoload\vimwiki_lst.vim	/^function! vimwiki_lst#ToggleListItem(line1, line2) "{{{$/;"	f
vimwiki_lst#insertCR	.\vimfiles\autoload\vimwiki_lst.vim	/^function! vimwiki_lst#insertCR() "{{{$/;"	f
vimwiki_lst#insertOo	.\vimfiles\autoload\vimwiki_lst.vim	/^function! vimwiki_lst#insertOo(cmd) "{{{$/;"	f
vimwiki_tbl#align_or_cmd	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#align_or_cmd(cmd) "{{{$/;"	f
vimwiki_tbl#create	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#create(...) "{{{$/;"	f
vimwiki_tbl#format	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#format(lnum, ...) "{{{$/;"	f
vimwiki_tbl#get_rows	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#get_rows(lnum) "{{{$/;"	f
vimwiki_tbl#kbd_cr	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#kbd_cr() "{{{$/;"	f
vimwiki_tbl#kbd_shift_tab	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#kbd_shift_tab() "{{{$/;"	f
vimwiki_tbl#kbd_tab	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#kbd_tab() "{{{$/;"	f
vimwiki_tbl#move_column_left	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#move_column_left() "{{{$/;"	f
vimwiki_tbl#move_column_right	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#move_column_right() "{{{$/;"	f
vimwiki_tbl#reset_tw	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! vimwiki_tbl#reset_tw(lnum) "{{{$/;"	f
voom	.\vimfiles\plugin\voom.vim	/^import voom$/;"	m
voom_EchoUNL	.\vimfiles\plugin\voom\voom.py	/^def voom_EchoUNL(): #{{{2$/;"	f	access:public
voom_GetBodyLines	.\vimfiles\plugin\voom\voom.py	/^def voom_GetBodyLines(): #{{{2$/;"	f	access:public
voom_GetBodyLines1	.\vimfiles\plugin\voom\voom.py	/^def voom_GetBodyLines1(): #{{{2$/;"	f	access:public
voom_Grep	.\vimfiles\plugin\voom\voom.py	/^def voom_Grep(): #{{{2$/;"	f	access:public
voom_Init	.\vimfiles\plugin\voom\voom.py	/^def voom_Init(body): #{{{2$/;"	f	access:public
voom_OopCopy	.\vimfiles\plugin\voom\voom.py	/^def voom_OopCopy(): #{{{2$/;"	f	access:public
voom_OopCut	.\vimfiles\plugin\voom\voom.py	/^def voom_OopCut(): #{{{2$/;"	f	access:public
voom_OopDown	.\vimfiles\plugin\voom\voom.py	/^def voom_OopDown(): #{{{2$/;"	f	access:public
voom_OopFolding	.\vimfiles\plugin\voom\voom.py	/^def voom_OopFolding(action): #{{{3$/;"	f	access:public
voom_OopInsert	.\vimfiles\plugin\voom\voom.py	/^def voom_OopInsert(as_child=False): #{{{2$/;"	f	access:public
voom_OopLeft	.\vimfiles\plugin\voom\voom.py	/^def voom_OopLeft(): #{{{2$/;"	f	access:public
voom_OopMark	.\vimfiles\plugin\voom\voom.py	/^def voom_OopMark(): # {{{2$/;"	f	access:public
voom_OopMarkStartup	.\vimfiles\plugin\voom\voom.py	/^def voom_OopMarkStartup(): # {{{2$/;"	f	access:public
voom_OopPaste	.\vimfiles\plugin\voom\voom.py	/^def voom_OopPaste(): #{{{2$/;"	f	access:public
voom_OopRight	.\vimfiles\plugin\voom\voom.py	/^def voom_OopRight(): #{{{2$/;"	f	access:public
voom_OopSelEnd	.\vimfiles\plugin\voom\voom.py	/^def voom_OopSelEnd(): #{{{2$/;"	f	access:public
voom_OopSort	.\vimfiles\plugin\voom\voom.py	/^def voom_OopSort(): #{{{3=$/;"	f	access:public
voom_OopUnmark	.\vimfiles\plugin\voom\voom.py	/^def voom_OopUnmark(): # {{{2$/;"	f	access:public
voom_OopUp	.\vimfiles\plugin\voom\voom.py	/^def voom_OopUp(): #{{{2$/;"	f	access:public
voom_OopVerify	.\vimfiles\plugin\voom\voom.py	/^def voom_OopVerify(): #{{{2$/;"	f	access:public
voom_TreeCreate	.\vimfiles\plugin\voom\voom.py	/^def voom_TreeCreate(): #{{{2$/;"	f	access:public
voom_TreeSelect	.\vimfiles\plugin\voom\voom.py	/^def voom_TreeSelect(): #{{{2$/;"	f	access:public
voom_TreeToStartupNode	.\vimfiles\plugin\voom\voom.py	/^def voom_TreeToStartupNode(): #{{{2$/;"	f	access:public
voom_UnVoom	.\vimfiles\plugin\voom\voom.py	/^def voom_UnVoom(body): #{{{2$/;"	f	access:public
w	.\vim73\macros\less.vim	/^map w b$/;"	m
w	.\vim73\tutor\tutor.cs	/^       objekt - udává rozsah pøíkazu, napøíklad  w  (slovo),$/;"	m	signature:(slovo)
w	.\vim73\tutor\tutor.cs	/^  2. Objekty jsou také shodné, jako napø.: w (slovo), $ (konec øádku), atd.$/;"	m	signature:(slovo)
warn	.\vimfiles\autoload\rails.vim	/^function! s:warn(str)$/;"	f
warn	.\vimfiles\plugin\bundler.vim	/^function! s:warn(str)$/;"	f
warn	.\vimfiles\plugin\gsession.vim	/^fun! s:warn(msg)$/;"	f
wide_len	.\vimfiles\autoload\vimwiki_tbl.vim	/^function! s:wide_len(str) "{{{$/;"	f
with_statement	.\vimfiles\autoload\l9\async.py	/^from __future__ import with_statement$/;"	i
word	.\vim73\spell\fixdup.vim	/^  let word = getline(lnum)$/;"	v
words	.\vimfiles\plugin\abolish.vim	/^function! s:words()$/;"	f
wpisanie	.\vim73\tutor\tutor.pl	/^     wpisanie:		:set ic$/;"	l
wpisz	.\vim73\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/g   by zmieniæ wszystkie wyst±pienia w ca³ym pliku.$/;"	l
wpisz	.\vim73\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/gc  by zmieniæ wszystkie wyst±pienia w ca³ym$/;"	l
wpisz	.\vim73\tutor\tutor.pl	/^     wpisz:			:wq<ENTER>$/;"	l
wpisz	.\vim73\tutor\tutor.pl	/^     wpisz: :#,#s\/stare\/nowe\/g gdzie #,# s± numerami linii ograniczaj±cych$/;"	l
wpisz	.\vim73\tutor\tutor.pl	/^  wpisz :q<ENTER>        aby zamkn±æ okno pomocy.$/;"	l
wrap_a	.\vimfiles\ftplugin\ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	.\vimfiles\ftplugin\ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
write	.\vimfiles\plugin\voom\voom.py	/^    def write(self,s): #{{{3$/;"	m	class:LogBufferClass	access:public
write_file	.\vimfiles\lib\extras\cocoa_classes.py	/^from cocoa_definitions import write_file, find$/;"	i
write_file	.\vimfiles\lib\extras\cocoa_definitions.py	/^def write_file(filename, lines):$/;"	f	access:public
wword	.\vimfiles\plugin\vimwiki.vim	/^let wword = '\\C\\<['.upp.']['.nlo.']*['.low.']['.nup.']*['.upp.']['.any.']*\\>'$/;"	v
x_error_check	.\vim73\tools\xcmdsrv_client.c	/^static int	x_error_check __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_check	.\vim73\tools\xcmdsrv_client.c	/^x_error_check(dpy, error_event)$/;"	f	file:
xmlcomplete#CompleteTags	.\vim73\autoload\xmlcomplete.vim	/^function! xmlcomplete#CompleteTags(findstart, base)$/;"	f
xmlcomplete#CreateConnection	.\vim73\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateConnection(canonical, ...) " {{{$/;"	f
xmlcomplete#CreateEntConnection	.\vim73\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateEntConnection(...) " {{{$/;"	f
xmlcomplete#GetLastOpenTag	.\vim73\autoload\xmlcomplete.vim	/^function! xmlcomplete#GetLastOpenTag(unaryTagsStack)$/;"	f
y	.\vim73\macros\less.vim	/^map y k$/;"	m
z	.\vim73\macros\less.vim	/^map z <Space>$/;"	m
zen_getExpandos	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_getExpandos(type, key)$/;"	f
zen_getExpandos	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_getExpandos(type, key)$/;"	f
zen_getFileType	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_getFileType()$/;"	f
zen_getFileType	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_getFileType()$/;"	f
zen_getResource	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_getResource(type, name, default)$/;"	f
zen_getResource	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_getResource(type, name, default)$/;"	f
zen_isExtends	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_isExtends(type, extend)$/;"	f
zen_isExtends	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_isExtends(type, extend)$/;"	f
zen_mergeConfig	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_mergeConfig(lhs, rhs)$/;"	f
zen_mergeConfig	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_mergeConfig(lhs, rhs)$/;"	f
zen_parseIntoTree	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_parseIntoTree(abbr, type)$/;"	f
zen_parseIntoTree	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_parseIntoTree(abbr, type)$/;"	f
zen_parseTag	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_parseTag(tag)$/;"	f
zen_parseTag	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_parseTag(tag)$/;"	f
zen_toString	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_toString(...)$/;"	f
zen_toString	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_toString(...)$/;"	f
zen_toString_css	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_toString_css(settings, current, type, inline, filters, itemno, indent)$/;"	f
zen_toString_haml	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_toString_haml(settings, current, type, inline, filters, itemno, indent)$/;"	f
zen_toString_haml	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_toString_haml(settings, current, type, inline, filters, itemno, indent)$/;"	f
zen_toString_html	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_toString_html(settings, current, type, inline, filters, itemno, indent)$/;"	f
zen_toString_html	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_toString_html(settings, current, type, inline, filters, itemno, indent)$/;"	f
zen_useFilter	.\vimfiles\autoload\zencoding.vim	/^function! s:zen_useFilter(filters, filter)$/;"	f
zen_useFilter	.\vimfiles\snippets\autoload\zencoding.vim	/^function! s:zen_useFilter(filters, filter)$/;"	f
zenburn_ctags	.\vimfiles\colors\zenburn.vim	/^    let _zenburn_ctags = 1$/;"	v
zencoding#CompleteTag	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#CompleteTag(findstart, base)$/;"	f
zencoding#CompleteTag	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#CompleteTag(findstart, base)$/;"	f
zencoding#ExpandWord	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#ExpandWord(abbr, type, orig)$/;"	f
zencoding#ExpandWord	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#ExpandWord(abbr, type, orig)$/;"	f
zencoding#anchorizeURL	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#anchorizeURL(flag)$/;"	f
zencoding#anchorizeURL	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#anchorizeURL(flag)$/;"	f
zencoding#balanceTag	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#balanceTag(flag) range$/;"	f
zencoding#balanceTag	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#balanceTag(flag) range$/;"	f
zencoding#expandAbbr	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#expandAbbr(mode) range$/;"	f
zencoding#expandAbbr	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#expandAbbr(mode) range$/;"	f
zencoding#imageSize	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#imageSize()$/;"	f
zencoding#imageSize	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#imageSize()$/;"	f
zencoding#mergeLines	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#mergeLines() range$/;"	f
zencoding#moveNextPrev	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#moveNextPrev(flag)$/;"	f
zencoding#moveNextPrev	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#moveNextPrev(flag)$/;"	f
zencoding#removeTag	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#removeTag()$/;"	f
zencoding#removeTag	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#removeTag()$/;"	f
zencoding#splitJoinTag	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#splitJoinTag()$/;"	f
zencoding#splitJoinTag	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#splitJoinTag()$/;"	f
zencoding#toggleComment	.\vimfiles\autoload\zencoding.vim	/^function! zencoding#toggleComment()$/;"	f
zencoding#toggleComment	.\vimfiles\snippets\autoload\zencoding.vim	/^function! zencoding#toggleComment()$/;"	f
zip	.\vim73\plugin\zipPlugin.vim	/^augroup zip$/;"	a
zip#Browse	.\vim73\autoload\zip.vim	/^fun! zip#Browse(zipfile)$/;"	f
zip#Read	.\vim73\autoload\zip.vim	/^fun! zip#Read(fname,mode)$/;"	f
zip#Write	.\vim73\autoload\zip.vim	/^fun! zip#Write(fname)$/;"	f
zt	.\vim73\syntax\2html.vim	/^  norm! zt$/;"	m
ã®	.\vim73\keymap\kana.vim	/^no ã®$/;"	m
